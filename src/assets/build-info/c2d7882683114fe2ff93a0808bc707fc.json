{"id":"c2d7882683114fe2ff93a0808bc707fc","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/MerkleDistributor.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.9;\n\nimport {IERC20, SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport {MerkleProof} from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\n// import {IMerkleDistributor} from \"./interfaces/IMerkleDistributor.sol\";\n\ncontract MerkleDistributor is ERC721Holder, ERC1155Holder {\n    using SafeERC20 for IERC20;\n    address public immutable tokenERC20;\n    address public immutable tokenERC721;\n    address public immutable tokenERC1155;\n    // address public immutable override token;\n    bytes32 public immutable merkleRoot;\n    uint256 public dropERC20;\n\n    mapping(address => uint256) private claimedAddress;\n\n    event ClaimedERC20(address indexed _from, uint256 _dropERC20);\n\n    constructor(\n        address token_,\n        address token721_,\n        address token1155_,\n        bytes32 merkleRoot_,\n        uint256 dropERC20_\n    ) {\n        tokenERC20 = token_;\n        tokenERC721 = token721_;\n        tokenERC1155 = token1155_;\n        merkleRoot = merkleRoot_;\n        dropERC20 = dropERC20_;\n    }\n\n    function claim(bytes32[] calldata merkleProof) public virtual {\n        require(claimedAddress[msg.sender] == 0, \"Claimed ERC20\");\n\n        // Verify the merkle proof.\n        bytes32 node = keccak256(abi.encodePacked(msg.sender));\n        if (!MerkleProof.verify(merkleProof, merkleRoot, node))\n            // Mark it claimed and send the token.\n            claimedAddress[msg.sender] = 1;\n\n        require(\n            IERC20(tokenERC20).transfer(msg.sender, dropERC20),\n            \"Transfer failed\"\n        );\n\n        emit ClaimedERC20(msg.sender, dropERC20);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[40],"IERC165":[1433]},"id":41,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":41,"sourceUnit":1434,"src":"143:47:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"262:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"262:7:0"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"192:39:0","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":40,"linearizedBaseContracts":[40,1433],"name":"IERC1155Receiver","nameLocation":"242:16:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"276:826:0","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":21,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:0","nodeType":"FunctionDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"operator","nameLocation":"1151:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1143:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"from","nameLocation":"1177:4:0","nodeType":"VariableDeclaration","scope":21,"src":"1169:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"id","nameLocation":"1199:2:0","nodeType":"VariableDeclaration","scope":21,"src":"1191:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"value","nameLocation":"1219:5:0","nodeType":"VariableDeclaration","scope":21,"src":"1211:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"data","nameLocation":"1249:4:0","nodeType":"VariableDeclaration","scope":21,"src":"1234:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:0"},"returnParameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21,"src":"1278:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:0"},"scope":40,"src":"1107:179:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1292:994:0","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":39,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:0","nodeType":"FunctionDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"operator","nameLocation":"2340:8:0","nodeType":"VariableDeclaration","scope":39,"src":"2332:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"from","nameLocation":"2366:4:0","nodeType":"VariableDeclaration","scope":39,"src":"2358:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"ids","nameLocation":"2399:3:0","nodeType":"VariableDeclaration","scope":39,"src":"2380:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":28,"nodeType":"ArrayTypeName","src":"2380:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"values","nameLocation":"2431:6:0","nodeType":"VariableDeclaration","scope":39,"src":"2412:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":30,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":31,"nodeType":"ArrayTypeName","src":"2412:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"data","nameLocation":"2462:4:0","nodeType":"VariableDeclaration","scope":39,"src":"2447:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:0"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":39,"src":"2491:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":36,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:0"},"scope":40,"src":"2291:208:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":41,"src":"232:2269:0","usedErrors":[]}],"src":"118:2384:0"},"id":0},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","exportedSymbols":{"ERC1155Holder":[91],"ERC1155Receiver":[125],"ERC165":[1421],"IERC1155Receiver":[40],"IERC165":[1433]},"id":92,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":42,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol","file":"./ERC1155Receiver.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":92,"sourceUnit":126,"src":"146:31:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":45,"name":"ERC1155Receiver","nodeType":"IdentifierPath","referencedDeclaration":125,"src":"477:15:1"},"id":46,"nodeType":"InheritanceSpecifier","src":"477:15:1"}],"canonicalName":"ERC1155Holder","contractDependencies":[],"contractKind":"contract","documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"179:271:1","text":" Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"},"fullyImplemented":true,"id":91,"linearizedBaseContracts":[91,125,40,1421,1433],"name":"ERC1155Holder","nameLocation":"460:13:1","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[21],"body":{"id":66,"nodeType":"Block","src":"663:55:1","statements":[{"expression":{"expression":{"expression":{"id":62,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"680:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1155Holder_$91","typeString":"contract ERC1155Holder"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":67,"src":"680:22:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"680:31:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":61,"id":65,"nodeType":"Return","src":"673:38:1"}]},"functionSelector":"f23a6e61","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"508:17:1","nodeType":"FunctionDefinition","overrides":{"id":58,"nodeType":"OverrideSpecifier","overrides":[],"src":"637:8:1"},"parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"535:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"535:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"552:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"569:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"569:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"586:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"603:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55,"name":"bytes","nodeType":"ElementaryTypeName","src":"603:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"525:96:1"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"655:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":59,"name":"bytes4","nodeType":"ElementaryTypeName","src":"655:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"654:8:1"},"scope":91,"src":"499:219:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[39],"body":{"id":89,"nodeType":"Block","src":"911:60:1","statements":[{"expression":{"expression":{"expression":{"id":85,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"928:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1155Holder_$91","typeString":"contract ERC1155Holder"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":90,"src":"928:27:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"928:36:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":84,"id":88,"nodeType":"Return","src":"921:43:1"}]},"functionSelector":"bc197c81","id":90,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"733:22:1","nodeType":"FunctionDefinition","overrides":{"id":81,"nodeType":"OverrideSpecifier","overrides":[],"src":"885:8:1"},"parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"765:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"765:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"782:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"782:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"799:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":73,"nodeType":"ArrayTypeName","src":"799:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"825:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":76,"nodeType":"ArrayTypeName","src":"825:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"851:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":78,"name":"bytes","nodeType":"ElementaryTypeName","src":"851:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"755:114:1"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"903:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":82,"name":"bytes4","nodeType":"ElementaryTypeName","src":"903:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"902:8:1"},"scope":91,"src":"724:247:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":92,"src":"451:522:1","usedErrors":[]}],"src":"121:853:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol","exportedSymbols":{"ERC1155Receiver":[125],"ERC165":[1421],"IERC1155Receiver":[40],"IERC165":[1433]},"id":126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":93,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":94,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":126,"sourceUnit":41,"src":"133:33:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":95,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":126,"sourceUnit":1422,"src":"167:49:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":97,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1421,"src":"295:6:2"},"id":98,"nodeType":"InheritanceSpecifier","src":"295:6:2"},{"baseName":{"id":99,"name":"IERC1155Receiver","nodeType":"IdentifierPath","referencedDeclaration":40,"src":"303:16:2"},"id":100,"nodeType":"InheritanceSpecifier","src":"303:16:2"}],"canonicalName":"ERC1155Receiver","contractDependencies":[],"contractKind":"contract","documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"218:39:2","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":125,"linearizedBaseContracts":[125,40,1421,1433],"name":"ERC1155Receiver","nameLocation":"276:15:2","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1420,1432],"body":{"id":123,"nodeType":"Block","src":"495:113:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":111,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"512:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":113,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"532:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$40_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$40_$","typeString":"type(contract IERC1155Receiver)"}],"id":112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"527:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"527:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$40","typeString":"type(contract IERC1155Receiver)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"527:34:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"512:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":119,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"589:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":117,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"565:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Receiver_$125_$","typeString":"type(contract super ERC1155Receiver)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1420,"src":"565:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"565:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"512:89:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":110,"id":122,"nodeType":"Return","src":"505:96:2"}]},"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"326:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":124,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"396:17:2","nodeType":"FunctionDefinition","overrides":{"id":107,"nodeType":"OverrideSpecifier","overrides":[{"id":105,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1421,"src":"463:6:2"},{"id":106,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"471:7:2"}],"src":"454:25:2"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"interfaceId","nameLocation":"421:11:2","nodeType":"VariableDeclaration","scope":124,"src":"414:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":102,"name":"bytes4","nodeType":"ElementaryTypeName","src":"414:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"413:20:2"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"489:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":108,"name":"bool","nodeType":"ElementaryTypeName","src":"489:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"488:6:2"},"scope":125,"src":"387:221:2","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":126,"src":"258:352:2","usedErrors":[]}],"src":"108:503:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[203]},"id":204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":127,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":203,"linearizedBaseContracts":[203],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":137,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":137,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":137,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":137,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":146,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":146,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":142,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":146,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":146,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":152,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":203,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":160,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":160,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":203,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":170,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":170,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":167,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":203,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":180,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":180,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":203,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":190,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":190,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":190,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":190,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":187,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":203,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":202,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":202,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":202,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":199,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":203,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":204,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[239]},"id":240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":205,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"139:480:4","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":239,"linearizedBaseContracts":[239],"name":"IERC20Permit","nameLocation":"630:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"649:792:4","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:4","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"owner","nameLocation":"1479:5:4","nodeType":"VariableDeclaration","scope":224,"src":"1471:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"1502:7:4","nodeType":"VariableDeclaration","scope":224,"src":"1494:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"value","nameLocation":"1527:5:4","nodeType":"VariableDeclaration","scope":224,"src":"1519:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:4","nodeType":"VariableDeclaration","scope":224,"src":"1542:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"v","nameLocation":"1574:1:4","nodeType":"VariableDeclaration","scope":224,"src":"1568:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":216,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"r","nameLocation":"1593:1:4","nodeType":"VariableDeclaration","scope":224,"src":"1585:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"s","nameLocation":"1612:1:4","nodeType":"VariableDeclaration","scope":224,"src":"1604:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:4"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"1628:0:4"},"scope":239,"src":"1446:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"1635:294:4","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:4","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"owner","nameLocation":"1958:5:4","nodeType":"VariableDeclaration","scope":232,"src":"1950:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:4"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"1988:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:4"},"scope":239,"src":"1934:63:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"2003:128:4","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":238,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:4","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"2214:2:4"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":238,"src":"2240:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:4"},"scope":239,"src":"2189:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":240,"src":"620:1631:4","usedErrors":[]}],"src":"114:2138:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[895],"IERC20":[203],"IERC20Permit":[239],"SafeERC20":[520]},"id":521,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":241,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":521,"sourceUnit":204,"src":"140:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":521,"sourceUnit":240,"src":"164:46:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":521,"sourceUnit":896,"src":"211:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"249:457:5","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":520,"linearizedBaseContracts":[520],"name":"SafeERC20","nameLocation":"715:9:5","nodeType":"ContractDefinition","nodes":[{"id":248,"libraryName":{"id":246,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":895,"src":"737:7:5"},"nodeType":"UsingForDirective","src":"731:26:5","typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":270,"nodeType":"Block","src":"865:103:5","statements":[{"expression":{"arguments":[{"id":259,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"895:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":262,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"925:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":170,"src":"925:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":265,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"950:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"954:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":260,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":258,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"875:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"ExpressionStatement","src":"875:86:5"}]},"id":271,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:5","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"token","nameLocation":"801:5:5","nodeType":"VariableDeclaration","scope":271,"src":"794:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},"typeName":{"id":250,"nodeType":"UserDefinedTypeName","pathNode":{"id":249,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"794:6:5"},"referencedDeclaration":203,"src":"794:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"to","nameLocation":"824:2:5","nodeType":"VariableDeclaration","scope":271,"src":"816:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"value","nameLocation":"844:5:5","nodeType":"VariableDeclaration","scope":271,"src":"836:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:5"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"865:0:5"},"scope":520,"src":"763:205:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"1102:113:5","statements":[{"expression":{"arguments":[{"id":284,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"1132:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":287,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"1162:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":202,"src":"1162:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":290,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1191:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":291,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"1197:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1201:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":285,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":283,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1112:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"1112:96:5"}]},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:5","nodeType":"FunctionDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"token","nameLocation":"1016:5:5","nodeType":"VariableDeclaration","scope":297,"src":"1009:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},"typeName":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1009:6:5"},"referencedDeclaration":203,"src":"1009:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"from","nameLocation":"1039:4:5","nodeType":"VariableDeclaration","scope":297,"src":"1031:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"to","nameLocation":"1061:2:5","nodeType":"VariableDeclaration","scope":297,"src":"1053:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"value","nameLocation":"1081:5:5","nodeType":"VariableDeclaration","scope":297,"src":"1073:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:5"},"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[],"src":"1102:0:5"},"scope":520,"src":"974:241:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":340,"nodeType":"Block","src":"1581:497:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"1830:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":317,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$520","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$520","typeString":"library SafeERC20"}],"id":316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:5","typeDescriptions":{}}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":319,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1877:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":313,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"1846:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":180,"src":"1846:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"ExpressionStatement","src":"1808:163:5"},{"expression":{"arguments":[{"id":329,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2001:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":332,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2031:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":190,"src":"2031:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":335,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2055:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"2064:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":330,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":328,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1981:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":339,"nodeType":"ExpressionStatement","src":"1981:90:5"}]},"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"1221:249:5","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":341,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:5","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"token","nameLocation":"1512:5:5","nodeType":"VariableDeclaration","scope":341,"src":"1505:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},"typeName":{"id":300,"nodeType":"UserDefinedTypeName","pathNode":{"id":299,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1505:6:5"},"referencedDeclaration":203,"src":"1505:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"spender","nameLocation":"1535:7:5","nodeType":"VariableDeclaration","scope":341,"src":"1527:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"value","nameLocation":"1560:5:5","nodeType":"VariableDeclaration","scope":341,"src":"1552:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:5"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"1581:0:5"},"scope":520,"src":"1475:603:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":376,"nodeType":"Block","src":"2200:194:5","statements":[{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:5","nodeType":"VariableDeclaration","scope":376,"src":"2210:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":363,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":357,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$520","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$520","typeString":"library SafeERC20"}],"id":356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:5","typeDescriptions":{}}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":359,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2264:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":353,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2233:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":180,"src":"2233:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2275:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:5"},{"expression":{"arguments":[{"id":365,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2310:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":368,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2340:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":190,"src":"2340:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":371,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2364:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"2373:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":366,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":364,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2290:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"ExpressionStatement","src":"2290:97:5"}]},"id":377,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:5","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"token","nameLocation":"2131:5:5","nodeType":"VariableDeclaration","scope":377,"src":"2124:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},"typeName":{"id":343,"nodeType":"UserDefinedTypeName","pathNode":{"id":342,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"2124:6:5"},"referencedDeclaration":203,"src":"2124:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"spender","nameLocation":"2154:7:5","nodeType":"VariableDeclaration","scope":377,"src":"2146:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"value","nameLocation":"2179:5:5","nodeType":"VariableDeclaration","scope":377,"src":"2171:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:5"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"2200:0:5"},"scope":520,"src":"2084:310:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":424,"nodeType":"Block","src":"2516:370:5","statements":[{"id":423,"nodeType":"UncheckedBlock","src":"2526:354:5","statements":[{"assignments":[388],"declarations":[{"constant":false,"id":388,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:5","nodeType":"VariableDeclaration","scope":423,"src":"2550:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":397,"initialValue":{"arguments":[{"arguments":[{"id":393,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$520","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$520","typeString":"library SafeERC20"}],"id":392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:5","typeDescriptions":{}}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":395,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2604:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":389,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2573:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":180,"src":"2573:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":399,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2634:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2650:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":404,"nodeType":"ExpressionStatement","src":"2626:75:5"},{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:5","nodeType":"VariableDeclaration","scope":423,"src":"2715:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":410,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":407,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2738:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2753:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:5"},{"expression":{"arguments":[{"id":412,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2792:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":415,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2822:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":190,"src":"2822:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":418,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2846:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":419,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"2855:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":413,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":411,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2772:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"2772:97:5"}]}]},"id":425,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:5","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"token","nameLocation":"2447:5:5","nodeType":"VariableDeclaration","scope":425,"src":"2440:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},"typeName":{"id":379,"nodeType":"UserDefinedTypeName","pathNode":{"id":378,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"2440:6:5"},"referencedDeclaration":203,"src":"2440:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"spender","nameLocation":"2470:7:5","nodeType":"VariableDeclaration","scope":425,"src":"2462:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"value","nameLocation":"2495:5:5","nodeType":"VariableDeclaration","scope":425,"src":"2487:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:5"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2516:0:5"},"scope":520,"src":"2400:486:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":480,"nodeType":"Block","src":"3107:257:5","statements":[{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:5","nodeType":"VariableDeclaration","scope":480,"src":"3117:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":451,"initialValue":{"arguments":[{"id":449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"3152:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":447,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3139:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$239","typeString":"contract IERC20Permit"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3139:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:5"},{"expression":{"arguments":[{"id":455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"3181:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":456,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"3188:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3197:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":458,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3204:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":459,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3214:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":460,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"3217:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":461,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"3220:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":452,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3168:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$239","typeString":"contract IERC20Permit"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":224,"src":"3168:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"3168:54:5"},{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:5","nodeType":"VariableDeclaration","scope":480,"src":"3232:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":470,"initialValue":{"arguments":[{"id":468,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"3266:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":466,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3253:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$239","typeString":"contract IERC20Permit"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3253:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":472,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3290:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":473,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3304:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"3282:75:5"}]},"id":481,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:5","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"token","nameLocation":"2934:5:5","nodeType":"VariableDeclaration","scope":481,"src":"2921:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$239","typeString":"contract IERC20Permit"},"typeName":{"id":427,"nodeType":"UserDefinedTypeName","pathNode":{"id":426,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":239,"src":"2921:12:5"},"referencedDeclaration":239,"src":"2921:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$239","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"owner","nameLocation":"2957:5:5","nodeType":"VariableDeclaration","scope":481,"src":"2949:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"spender","nameLocation":"2980:7:5","nodeType":"VariableDeclaration","scope":481,"src":"2972:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"value","nameLocation":"3005:5:5","nodeType":"VariableDeclaration","scope":481,"src":"2997:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:5","nodeType":"VariableDeclaration","scope":481,"src":"3020:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"v","nameLocation":"3052:1:5","nodeType":"VariableDeclaration","scope":481,"src":"3046:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":437,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"r","nameLocation":"3071:1:5","nodeType":"VariableDeclaration","scope":481,"src":"3063:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"s","nameLocation":"3090:1:5","nodeType":"VariableDeclaration","scope":481,"src":"3082:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:5"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"3107:0:5"},"scope":520,"src":"2892:472:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"3817:636:5","statements":[{"assignments":[491],"declarations":[{"constant":false,"id":491,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:5","nodeType":"VariableDeclaration","scope":518,"src":"4166:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":490,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":500,"initialValue":{"arguments":[{"id":497,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4220:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":494,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4200:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:5","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":655,"src":"4192:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":501,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4275:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":517,"nodeType":"IfStatement","src":"4271:176:5","trueBody":{"id":516,"nodeType":"Block","src":"4298:149:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":508,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4370:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":509,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:5","typeDescriptions":{}}}],"id":511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":506,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"ExpressionStatement","src":"4351:85:5"}]}}]},"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"3370:372:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":519,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:5","nodeType":"FunctionDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"token","nameLocation":"3783:5:5","nodeType":"VariableDeclaration","scope":519,"src":"3776:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"},"typeName":{"id":484,"nodeType":"UserDefinedTypeName","pathNode":{"id":483,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"3776:6:5"},"referencedDeclaration":203,"src":"3776:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"data","nameLocation":"3803:4:5","nodeType":"VariableDeclaration","scope":519,"src":"3790:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":486,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:5"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"3817:0:5"},"scope":520,"src":"3747:706:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":521,"src":"707:3748:5","usedErrors":[]}],"src":"115:4341:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[538]},"id":539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":522,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"141:152:6","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":538,"linearizedBaseContracts":[538],"name":"IERC721Receiver","nameLocation":"304:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"326:493:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":537,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:6","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"operator","nameLocation":"867:8:6","nodeType":"VariableDeclaration","scope":537,"src":"859:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"from","nameLocation":"893:4:6","nodeType":"VariableDeclaration","scope":537,"src":"885:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:6","nodeType":"VariableDeclaration","scope":537,"src":"907:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"data","nameLocation":"947:4:6","nodeType":"VariableDeclaration","scope":537,"src":"932:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":531,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:6"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"976:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":534,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:6"},"scope":538,"src":"824:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":539,"src":"294:692:6","usedErrors":[]}],"src":"116:871:6"},"id":6},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","exportedSymbols":{"ERC721Holder":[565],"IERC721Receiver":[538]},"id":566,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":566,"sourceUnit":539,"src":"129:32:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":543,"name":"IERC721Receiver","nodeType":"IdentifierPath","referencedDeclaration":538,"src":"424:15:7"},"id":544,"nodeType":"InheritanceSpecifier","src":"424:15:7"}],"canonicalName":"ERC721Holder","contractDependencies":[],"contractKind":"contract","documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"163:235:7","text":" @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."},"fullyImplemented":true,"id":565,"linearizedBaseContracts":[565,538],"name":"ERC721Holder","nameLocation":"408:12:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[537],"body":{"id":563,"nodeType":"Block","src":"734:54:7","statements":[{"expression":{"expression":{"expression":{"id":559,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"751:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Holder_$565","typeString":"contract ERC721Holder"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":564,"src":"751:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"751:30:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":558,"id":562,"nodeType":"Return","src":"744:37:7"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"446:137:7","text":" @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":564,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"597:16:7","nodeType":"FunctionDefinition","overrides":{"id":555,"nodeType":"OverrideSpecifier","overrides":[],"src":"708:8:7"},"parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"623:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"640:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"657:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"674:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":552,"name":"bytes","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"613:79:7"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"726:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":556,"name":"bytes4","nodeType":"ElementaryTypeName","src":"726:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"725:8:7"},"scope":565,"src":"588:200:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":566,"src":"399:391:7","usedErrors":[]}],"src":"104:687:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[895]},"id":896,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":567,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":895,"linearizedBaseContracts":[895],"name":"Address","nameLocation":"202:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":582,"nodeType":"Block","src":"1241:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":576,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1465:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":575,"id":581,"nodeType":"Return","src":"1458:30:8"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"216:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":583,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:8","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"account","nameLocation":"1203:7:8","nodeType":"VariableDeclaration","scope":583,"src":"1195:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:8"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":583,"src":"1235:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":573,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:8"},"scope":895,"src":"1175:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"2483:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":594,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$895","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$895","typeString":"library Address"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:8","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":597,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"2526:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":591,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"2493:73:8"},{"assignments":[603,null],"declarations":[{"constant":false,"id":603,"mutability":"mutable","name":"success","nameLocation":"2583:7:8","nodeType":"VariableDeclaration","scope":616,"src":"2578:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":602,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":610,"initialValue":{"arguments":[{"hexValue":"","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":604,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"2596:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":606,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"2618:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:8"},{"expression":{"arguments":[{"id":612,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2647:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"ExpressionStatement","src":"2639:78:8"}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"1501:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:8","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:8","nodeType":"VariableDeclaration","scope":617,"src":"2431:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"amount","nameLocation":"2466:6:8","nodeType":"VariableDeclaration","scope":617,"src":"2458:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:8"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"2483:0:8"},"scope":895,"src":"2412:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":634,"nodeType":"Block","src":"3555:96:8","statements":[{"expression":{"arguments":[{"id":628,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"3594:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"3602:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":627,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[675,719],"referencedDeclaration":719,"src":"3572:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":626,"id":633,"nodeType":"Return","src":"3565:79:8"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"2730:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":635,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:8","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"target","nameLocation":"3496:6:8","nodeType":"VariableDeclaration","scope":635,"src":"3488:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"data","nameLocation":"3517:4:8","nodeType":"VariableDeclaration","scope":635,"src":"3504:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":621,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:8"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":635,"src":"3541:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":624,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:8"},"scope":895,"src":"3466:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":654,"nodeType":"Block","src":"4020:76:8","statements":[{"expression":{"arguments":[{"id":648,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4059:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4067:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":651,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4076:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":647,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[675,719],"referencedDeclaration":719,"src":"4037:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":646,"id":653,"nodeType":"Return","src":"4030:59:8"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"3657:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:8","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"target","nameLocation":"3912:6:8","nodeType":"VariableDeclaration","scope":655,"src":"3904:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"data","nameLocation":"3941:4:8","nodeType":"VariableDeclaration","scope":655,"src":"3928:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":639,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:8","nodeType":"VariableDeclaration","scope":655,"src":"3955:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":641,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:8"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"4006:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":644,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:8"},"scope":895,"src":"3873:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"4601:111:8","statements":[{"expression":{"arguments":[{"id":668,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4640:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":669,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4648:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"4654:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":667,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[675,719],"referencedDeclaration":719,"src":"4618:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":666,"id":673,"nodeType":"Return","src":"4611:94:8"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"4102:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:8","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"target","nameLocation":"4506:6:8","nodeType":"VariableDeclaration","scope":675,"src":"4498:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"data","nameLocation":"4535:4:8","nodeType":"VariableDeclaration","scope":675,"src":"4522:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"value","nameLocation":"4557:5:8","nodeType":"VariableDeclaration","scope":675,"src":"4549:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:8"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"4587:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":664,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:8"},"scope":895,"src":"4458:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":718,"nodeType":"Block","src":"5139:267:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":692,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$895","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$895","typeString":"library Address"}],"id":691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:8","typeDescriptions":{}}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5182:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"5149:81:8"},{"assignments":[701,703],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"success","nameLocation":"5246:7:8","nodeType":"VariableDeclaration","scope":718,"src":"5241:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":700,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:8","nodeType":"VariableDeclaration","scope":718,"src":"5255:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":702,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":710,"initialValue":{"arguments":[{"id":708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5308:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":704,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"5282:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:8"},{"expression":{"arguments":[{"id":712,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"5357:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5365:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":714,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5374:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":715,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5386:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":711,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5330:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":688,"id":717,"nodeType":"Return","src":"5323:76:8"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"4718:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":719,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:8","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"target","nameLocation":"5008:6:8","nodeType":"VariableDeclaration","scope":719,"src":"5000:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"data","nameLocation":"5037:4:8","nodeType":"VariableDeclaration","scope":719,"src":"5024:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":679,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"value","nameLocation":"5059:5:8","nodeType":"VariableDeclaration","scope":719,"src":"5051:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:8","nodeType":"VariableDeclaration","scope":719,"src":"5074:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":683,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:8"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":719,"src":"5125:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":686,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:8"},"scope":895,"src":"4960:446:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"5683:97:8","statements":[{"expression":{"arguments":[{"id":730,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5719:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"5727:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":729,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[736,765],"referencedDeclaration":765,"src":"5700:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":728,"id":734,"nodeType":"Return","src":"5693:80:8"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"5412:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:8","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"target","nameLocation":"5619:6:8","nodeType":"VariableDeclaration","scope":736,"src":"5611:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"data","nameLocation":"5640:4:8","nodeType":"VariableDeclaration","scope":736,"src":"5627:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":723,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:8"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"5669:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":726,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:8"},"scope":895,"src":"5583:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":764,"nodeType":"Block","src":"6122:168:8","statements":[{"assignments":[749,751],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"success","nameLocation":"6138:7:8","nodeType":"VariableDeclaration","scope":764,"src":"6133:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":748,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:8","nodeType":"VariableDeclaration","scope":764,"src":"6147:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":750,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":756,"initialValue":{"arguments":[{"id":754,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6192:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":752,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6174:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:8"},{"expression":{"arguments":[{"id":758,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6241:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":759,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6249:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":760,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"6258:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":761,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"6270:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":757,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"6214:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":747,"id":763,"nodeType":"Return","src":"6207:76:8"}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"5786:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":765,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:8","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"target","nameLocation":"6009:6:8","nodeType":"VariableDeclaration","scope":765,"src":"6001:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"data","nameLocation":"6038:4:8","nodeType":"VariableDeclaration","scope":765,"src":"6025:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":740,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:8","nodeType":"VariableDeclaration","scope":765,"src":"6052:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":742,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:8"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":765,"src":"6108:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":745,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:8"},"scope":895,"src":"5964:326:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":781,"nodeType":"Block","src":"6566:101:8","statements":[{"expression":{"arguments":[{"id":776,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6604:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"6612:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":775,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[782,811],"referencedDeclaration":811,"src":"6583:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":774,"id":780,"nodeType":"Return","src":"6576:84:8"}]},"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"6296:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:8","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"target","nameLocation":"6507:6:8","nodeType":"VariableDeclaration","scope":782,"src":"6499:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"data","nameLocation":"6528:4:8","nodeType":"VariableDeclaration","scope":782,"src":"6515:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:8"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":782,"src":"6552:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:8"},"scope":895,"src":"6469:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":810,"nodeType":"Block","src":"7008:170:8","statements":[{"assignments":[795,797],"declarations":[{"constant":false,"id":795,"mutability":"mutable","name":"success","nameLocation":"7024:7:8","nodeType":"VariableDeclaration","scope":810,"src":"7019:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":794,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:8","nodeType":"VariableDeclaration","scope":810,"src":"7033:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":796,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":802,"initialValue":{"arguments":[{"id":800,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7080:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":798,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7060:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:8"},{"expression":{"arguments":[{"id":804,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7129:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7137:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":806,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"7146:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":807,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7158:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":803,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"7102:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":793,"id":809,"nodeType":"Return","src":"7095:76:8"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"6673:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:8","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"target","nameLocation":"6900:6:8","nodeType":"VariableDeclaration","scope":811,"src":"6892:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"data","nameLocation":"6929:4:8","nodeType":"VariableDeclaration","scope":811,"src":"6916:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":786,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:8","nodeType":"VariableDeclaration","scope":811,"src":"6943:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":788,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:8"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":811,"src":"6994:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":791,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:8"},"scope":895,"src":"6853:325:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":849,"nodeType":"Block","src":"7660:434:8","statements":[{"condition":{"id":825,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"7674:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":847,"nodeType":"Block","src":"8030:58:8","statements":[{"expression":{"arguments":[{"id":843,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8052:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":844,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8064:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":842,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8044:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"8044:33:8"}]},"id":848,"nodeType":"IfStatement","src":"7670:418:8","trueBody":{"id":841,"nodeType":"Block","src":"7683:341:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":826,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"7701:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"7697:286:8","trueBody":{"id":837,"nodeType":"Block","src":"7725:258:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":832,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"7927:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":831,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7916:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"7908:60:8"}]}},{"expression":{"id":839,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8003:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":824,"id":840,"nodeType":"Return","src":"7996:17:8"}]}}]},"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"7184:277:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":850,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:8","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"target","nameLocation":"7519:6:8","nodeType":"VariableDeclaration","scope":850,"src":"7511:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"success","nameLocation":"7540:7:8","nodeType":"VariableDeclaration","scope":850,"src":"7535:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":815,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:8","nodeType":"VariableDeclaration","scope":850,"src":"7557:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":817,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:8","nodeType":"VariableDeclaration","scope":850,"src":"7590:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":819,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:8"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"7646:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":822,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:8"},"scope":895,"src":"7466:628:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":873,"nodeType":"Block","src":"8475:135:8","statements":[{"condition":{"id":862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8489:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":871,"nodeType":"Block","src":"8546:58:8","statements":[{"expression":{"arguments":[{"id":867,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8568:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":868,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"8580:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":866,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8560:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"8560:33:8"}]},"id":872,"nodeType":"IfStatement","src":"8485:119:8","trueBody":{"id":865,"nodeType":"Block","src":"8498:42:8","statements":[{"expression":{"id":863,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8519:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":861,"id":864,"nodeType":"Return","src":"8512:17:8"}]}}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"8100:210:8","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":874,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:8","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"success","nameLocation":"8355:7:8","nodeType":"VariableDeclaration","scope":874,"src":"8350:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":852,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:8","nodeType":"VariableDeclaration","scope":874,"src":"8372:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":854,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:8","nodeType":"VariableDeclaration","scope":874,"src":"8405:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":856,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:8"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":874,"src":"8461:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:8"},"scope":895,"src":"8315:295:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"8699:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":881,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"8775:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":891,"nodeType":"Block","src":"9105:45:8","statements":[{"expression":{"arguments":[{"id":888,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9126:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":887,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"9119:20:8"}]},"id":892,"nodeType":"IfStatement","src":"8771:379:8","trueBody":{"id":886,"nodeType":"Block","src":"8798:301:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:8"},"nodeType":"YulFunctionCall","src":"8997:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:8"},"nodeType":"YulFunctionCall","src":"9038:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:8"},"nodeType":"YulFunctionCall","src":"9031:44:8"},"nodeType":"YulExpressionStatement","src":"9031:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":876,"isOffset":false,"isSlot":false,"src":"9003:10:8","valueSize":1},{"declaration":876,"isOffset":false,"isSlot":false,"src":"9046:10:8","valueSize":1}],"id":885,"nodeType":"InlineAssembly","src":"8947:142:8"}]}}]},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:8","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:8","nodeType":"VariableDeclaration","scope":894,"src":"8633:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:8","nodeType":"VariableDeclaration","scope":894,"src":"8658:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":877,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:8"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"8699:0:8"},"scope":895,"src":"8616:540:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":896,"src":"194:8964:8","usedErrors":[]}],"src":"101:9058:8"},"id":8},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1397]},"id":1398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":897,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"143:658:9","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1397,"linearizedBaseContracts":[1397],"name":"MerkleProof","nameLocation":"810:11:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":918,"nodeType":"Block","src":"1283:57:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":912,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1313:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":913,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1320:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":911,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"1300:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1300:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":915,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"1329:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1300:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":910,"id":917,"nodeType":"Return","src":"1293:40:9"}]},"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"828:323:9","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":919,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:9","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"proof","nameLocation":"1198:5:9","nodeType":"VariableDeclaration","scope":919,"src":"1181:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1181:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":901,"nodeType":"ArrayTypeName","src":"1181:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"root","nameLocation":"1221:4:9","nodeType":"VariableDeclaration","scope":919,"src":"1213:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1213:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"leaf","nameLocation":"1243:4:9","nodeType":"VariableDeclaration","scope":919,"src":"1235:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:82:9"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":919,"src":"1277:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":908,"name":"bool","nodeType":"ElementaryTypeName","src":"1277:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1276:6:9"},"scope":1397,"src":"1156:184:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":939,"nodeType":"Block","src":"1578:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":933,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"1616:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":934,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1623:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":932,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1595:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1595:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":936,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"1632:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1595:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":931,"id":938,"nodeType":"Return","src":"1588:48:9"}]},"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"1346:90:9","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1450:14:9","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"proof","nameLocation":"1493:5:9","nodeType":"VariableDeclaration","scope":940,"src":"1474:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1474:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":922,"nodeType":"ArrayTypeName","src":"1474:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"root","nameLocation":"1516:4:9","nodeType":"VariableDeclaration","scope":940,"src":"1508:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1508:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"leaf","nameLocation":"1538:4:9","nodeType":"VariableDeclaration","scope":940,"src":"1530:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1530:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1464:84:9"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"1572:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"1572:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1571:6:9"},"scope":1397,"src":"1441:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":979,"nodeType":"Block","src":"2086:198:9","statements":[{"assignments":[952],"declarations":[{"constant":false,"id":952,"mutability":"mutable","name":"computedHash","nameLocation":"2104:12:9","nodeType":"VariableDeclaration","scope":979,"src":"2096:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2096:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":954,"initialValue":{"id":953,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2119:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2096:27:9"},{"body":{"id":975,"nodeType":"Block","src":"2176:73:9","statements":[{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":966,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2190:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":968,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2215:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":969,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2229:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":971,"indexExpression":{"id":970,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2235:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2229:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":967,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"2205:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2205:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2190:48:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":974,"nodeType":"ExpressionStatement","src":"2190:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2153:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":960,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2157:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2157:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2153:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":976,"initializationExpression":{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"i","nameLocation":"2146:1:9","nodeType":"VariableDeclaration","scope":976,"src":"2138:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":958,"initialValue":{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2150:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2138:13:9"},"loopExpression":{"expression":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2171:3:9","subExpression":{"id":963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2171:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"nodeType":"ExpressionStatement","src":"2171:3:9"},"nodeType":"ForStatement","src":"2133:116:9"},{"expression":{"id":977,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2265:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":950,"id":978,"nodeType":"Return","src":"2258:19:9"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1649:340:9","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":980,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2003:12:9","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"proof","nameLocation":"2033:5:9","nodeType":"VariableDeclaration","scope":980,"src":"2016:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2016:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":943,"nodeType":"ArrayTypeName","src":"2016:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"leaf","nameLocation":"2048:4:9","nodeType":"VariableDeclaration","scope":980,"src":"2040:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2040:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2015:38:9"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"2077:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2077:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2076:9:9"},"scope":1397,"src":"1994:290:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1019,"nodeType":"Block","src":"2493:198:9","statements":[{"assignments":[992],"declarations":[{"constant":false,"id":992,"mutability":"mutable","name":"computedHash","nameLocation":"2511:12:9","nodeType":"VariableDeclaration","scope":1019,"src":"2503:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":994,"initialValue":{"id":993,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2526:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2503:27:9"},{"body":{"id":1015,"nodeType":"Block","src":"2583:73:9","statements":[{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1006,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2597:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1008,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2622:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1009,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"2636:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1011,"indexExpression":{"id":1010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2642:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2636:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1007,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"2612:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2612:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2597:48:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1014,"nodeType":"ExpressionStatement","src":"2597:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2560:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1000,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"2564:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2564:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2560:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1016,"initializationExpression":{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"i","nameLocation":"2553:1:9","nodeType":"VariableDeclaration","scope":1016,"src":"2545:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":998,"initialValue":{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2557:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2545:13:9"},"loopExpression":{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2578:3:9","subExpression":{"id":1003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2578:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"2578:3:9"},"nodeType":"ForStatement","src":"2540:116:9"},{"expression":{"id":1017,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2672:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":990,"id":1018,"nodeType":"Return","src":"2665:19:9"}]},"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"2290:96:9","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":1020,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2400:20:9","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"proof","nameLocation":"2440:5:9","nodeType":"VariableDeclaration","scope":1020,"src":"2421:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":983,"nodeType":"ArrayTypeName","src":"2421:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"leaf","nameLocation":"2455:4:9","nodeType":"VariableDeclaration","scope":1020,"src":"2447:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2420:40:9"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1020,"src":"2484:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2483:9:9"},"scope":1397,"src":"2391:300:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"3234:76:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1038,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"3269:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1039,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3276:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1040,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"3288:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1037,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3251:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3251:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1042,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"3299:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3251:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1036,"id":1044,"nodeType":"Return","src":"3244:59:9"}]},"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"2697:350:9","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3061:16:9","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"proof","nameLocation":"3104:5:9","nodeType":"VariableDeclaration","scope":1046,"src":"3087:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3087:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1023,"nodeType":"ArrayTypeName","src":"3087:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"proofFlags","nameLocation":"3133:10:9","nodeType":"VariableDeclaration","scope":1046,"src":"3119:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1025,"name":"bool","nodeType":"ElementaryTypeName","src":"3119:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1026,"nodeType":"ArrayTypeName","src":"3119:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"root","nameLocation":"3161:4:9","nodeType":"VariableDeclaration","scope":1046,"src":"3153:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3153:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"leaves","nameLocation":"3192:6:9","nodeType":"VariableDeclaration","scope":1046,"src":"3175:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3175:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1031,"nodeType":"ArrayTypeName","src":"3175:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3077:127:9"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1046,"src":"3228:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1034,"name":"bool","nodeType":"ElementaryTypeName","src":"3228:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3227:6:9"},"scope":1397,"src":"3052:258:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1071,"nodeType":"Block","src":"3715:84:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1064,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3758:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1065,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3765:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1066,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"3777:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1063,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"3732:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3732:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1068,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"3788:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3732:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1062,"id":1070,"nodeType":"Return","src":"3725:67:9"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"3316:200:9","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3530:24:9","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"proof","nameLocation":"3583:5:9","nodeType":"VariableDeclaration","scope":1072,"src":"3564:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1049,"nodeType":"ArrayTypeName","src":"3564:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"proofFlags","nameLocation":"3614:10:9","nodeType":"VariableDeclaration","scope":1072,"src":"3598:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1051,"name":"bool","nodeType":"ElementaryTypeName","src":"3598:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"ArrayTypeName","src":"3598:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"root","nameLocation":"3642:4:9","nodeType":"VariableDeclaration","scope":1072,"src":"3634:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3634:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"leaves","nameLocation":"3673:6:9","nodeType":"VariableDeclaration","scope":1072,"src":"3656:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3656:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1057,"nodeType":"ArrayTypeName","src":"3656:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3554:131:9"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"3709:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1060,"name":"bool","nodeType":"ElementaryTypeName","src":"3709:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3708:6:9"},"scope":1397,"src":"3521:278:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1216,"nodeType":"Block","src":"4753:1860:9","statements":[{"assignments":[1088],"declarations":[{"constant":false,"id":1088,"mutability":"mutable","name":"leavesLen","nameLocation":"5144:9:9","nodeType":"VariableDeclaration","scope":1216,"src":"5136:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"5136:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1091,"initialValue":{"expression":{"id":1089,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"5156:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5156:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5136:33:9"},{"assignments":[1093],"declarations":[{"constant":false,"id":1093,"mutability":"mutable","name":"totalHashes","nameLocation":"5187:11:9","nodeType":"VariableDeclaration","scope":1216,"src":"5179:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"5179:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1096,"initialValue":{"expression":{"id":1094,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"5201:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5201:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5179:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1098,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"5270:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1099,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5282:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5282:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5297:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5270:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1104,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"5302:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5315:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5262:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5262:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"5262:87:9"},{"assignments":[1113],"declarations":[{"constant":false,"id":1113,"mutability":"mutable","name":"hashes","nameLocation":"5611:6:9","nodeType":"VariableDeclaration","scope":1216,"src":"5594:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5594:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1112,"nodeType":"ArrayTypeName","src":"5594:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1119,"initialValue":{"arguments":[{"id":1117,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"5634:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5620:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5624:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1115,"nodeType":"ArrayTypeName","src":"5624:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5620:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5594:52:9"},{"assignments":[1121],"declarations":[{"constant":false,"id":1121,"mutability":"mutable","name":"leafPos","nameLocation":"5664:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"5656:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"5656:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1123,"initialValue":{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5674:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5656:19:9"},{"assignments":[1125],"declarations":[{"constant":false,"id":1125,"mutability":"mutable","name":"hashPos","nameLocation":"5693:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"5685:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1127,"initialValue":{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5703:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5685:19:9"},{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"proofPos","nameLocation":"5722:8:9","nodeType":"VariableDeclaration","scope":1216,"src":"5714:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5714:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1131,"initialValue":{"hexValue":"30","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5733:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5714:20:9"},{"body":{"id":1189,"nodeType":"Block","src":"6151:258:9","statements":[{"assignments":[1143],"declarations":[{"constant":false,"id":1143,"mutability":"mutable","name":"a","nameLocation":"6173:1:9","nodeType":"VariableDeclaration","scope":1189,"src":"6165:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6165:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1156,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1144,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6177:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1145,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"6187:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6177:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1151,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"6219:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1154,"indexExpression":{"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6226:9:9","subExpression":{"id":1152,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6226:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6219:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6177:59:9","trueExpression":{"baseExpression":{"id":1147,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"6199:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1150,"indexExpression":{"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6206:9:9","subExpression":{"id":1148,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6206:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6199:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6165:71:9"},{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"b","nameLocation":"6258:1:9","nodeType":"VariableDeclaration","scope":1189,"src":"6250:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1179,"initialValue":{"condition":{"baseExpression":{"id":1159,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"6262:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1161,"indexExpression":{"id":1160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6273:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6262:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1174,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6340:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1177,"indexExpression":{"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6346:10:9","subExpression":{"id":1175,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"6346:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6340:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6262:95:9","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6278:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1163,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"6288:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6278:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1169,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"6320:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1172,"indexExpression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6327:9:9","subExpression":{"id":1170,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6327:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6278:59:9","trueExpression":{"baseExpression":{"id":1165,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"6300:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1168,"indexExpression":{"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6307:9:9","subExpression":{"id":1166,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6307:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6300:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6250:107:9"},{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1180,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"6371:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1182,"indexExpression":{"id":1181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6378:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6371:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6393:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1185,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"6396:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1183,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"6383:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6383:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6371:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1188,"nodeType":"ExpressionStatement","src":"6371:27:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6129:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1137,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"6133:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6129:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1190,"initializationExpression":{"assignments":[1133],"declarations":[{"constant":false,"id":1133,"mutability":"mutable","name":"i","nameLocation":"6122:1:9","nodeType":"VariableDeclaration","scope":1190,"src":"6114:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6114:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1135,"initialValue":{"hexValue":"30","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6126:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6114:13:9"},"loopExpression":{"expression":{"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6146:3:9","subExpression":{"id":1139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6146:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1141,"nodeType":"ExpressionStatement","src":"6146:3:9"},"nodeType":"ForStatement","src":"6109:300:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"6423:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6437:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6423:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1201,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"6505:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6517:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6505:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1213,"nodeType":"Block","src":"6567:40:9","statements":[{"expression":{"baseExpression":{"id":1209,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6588:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1211,"indexExpression":{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6588:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1086,"id":1212,"nodeType":"Return","src":"6581:15:9"}]},"id":1214,"nodeType":"IfStatement","src":"6501:106:9","trueBody":{"id":1208,"nodeType":"Block","src":"6520:41:9","statements":[{"expression":{"baseExpression":{"id":1204,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"6541:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1206,"indexExpression":{"hexValue":"30","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6548:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6541:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1086,"id":1207,"nodeType":"Return","src":"6534:16:9"}]}},"id":1215,"nodeType":"IfStatement","src":"6419:188:9","trueBody":{"id":1200,"nodeType":"Block","src":"6440:55:9","statements":[{"expression":{"baseExpression":{"id":1194,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"6461:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1198,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1195,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"6468:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6482:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6468:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6461:23:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1086,"id":1199,"nodeType":"Return","src":"6454:30:9"}]}}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"3805:768:9","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4587:17:9","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"proof","nameLocation":"4631:5:9","nodeType":"VariableDeclaration","scope":1217,"src":"4614:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4614:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1075,"nodeType":"ArrayTypeName","src":"4614:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"proofFlags","nameLocation":"4660:10:9","nodeType":"VariableDeclaration","scope":1217,"src":"4646:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1077,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1078,"nodeType":"ArrayTypeName","src":"4646:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"leaves","nameLocation":"4697:6:9","nodeType":"VariableDeclaration","scope":1217,"src":"4680:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4680:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1081,"nodeType":"ArrayTypeName","src":"4680:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4604:105:9"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"merkleRoot","nameLocation":"4741:10:9","nodeType":"VariableDeclaration","scope":1217,"src":"4733:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4733:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4732:20:9"},"scope":1397,"src":"4578:2035:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"7013:1860:9","statements":[{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"leavesLen","nameLocation":"7404:9:9","nodeType":"VariableDeclaration","scope":1361,"src":"7396:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1236,"initialValue":{"expression":{"id":1234,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"7416:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7416:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7396:33:9"},{"assignments":[1238],"declarations":[{"constant":false,"id":1238,"mutability":"mutable","name":"totalHashes","nameLocation":"7447:11:9","nodeType":"VariableDeclaration","scope":1361,"src":"7439:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"7439:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1241,"initialValue":{"expression":{"id":1239,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7461:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7461:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7439:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1243,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"7530:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1244,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"7542:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7542:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7557:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7530:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1249,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"7562:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7575:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7522:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7522:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"ExpressionStatement","src":"7522:87:9"},{"assignments":[1258],"declarations":[{"constant":false,"id":1258,"mutability":"mutable","name":"hashes","nameLocation":"7871:6:9","nodeType":"VariableDeclaration","scope":1361,"src":"7854:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7854:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1257,"nodeType":"ArrayTypeName","src":"7854:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1264,"initialValue":{"arguments":[{"id":1262,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"7894:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7880:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7884:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1260,"nodeType":"ArrayTypeName","src":"7884:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7880:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7854:52:9"},{"assignments":[1266],"declarations":[{"constant":false,"id":1266,"mutability":"mutable","name":"leafPos","nameLocation":"7924:7:9","nodeType":"VariableDeclaration","scope":1361,"src":"7916:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1268,"initialValue":{"hexValue":"30","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7934:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7916:19:9"},{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"hashPos","nameLocation":"7953:7:9","nodeType":"VariableDeclaration","scope":1361,"src":"7945:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"7945:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1272,"initialValue":{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7945:19:9"},{"assignments":[1274],"declarations":[{"constant":false,"id":1274,"mutability":"mutable","name":"proofPos","nameLocation":"7982:8:9","nodeType":"VariableDeclaration","scope":1361,"src":"7974:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"7974:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1276,"initialValue":{"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7993:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7974:20:9"},{"body":{"id":1334,"nodeType":"Block","src":"8411:258:9","statements":[{"assignments":[1288],"declarations":[{"constant":false,"id":1288,"mutability":"mutable","name":"a","nameLocation":"8433:1:9","nodeType":"VariableDeclaration","scope":1334,"src":"8425:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1301,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1290,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8447:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8437:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1296,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8479:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1299,"indexExpression":{"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8486:9:9","subExpression":{"id":1297,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"8486:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8479:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:59:9","trueExpression":{"baseExpression":{"id":1292,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"8459:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1295,"indexExpression":{"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8466:9:9","subExpression":{"id":1293,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8466:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8459:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8425:71:9"},{"assignments":[1303],"declarations":[{"constant":false,"id":1303,"mutability":"mutable","name":"b","nameLocation":"8518:1:9","nodeType":"VariableDeclaration","scope":1334,"src":"8510:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8510:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1324,"initialValue":{"condition":{"baseExpression":{"id":1304,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8522:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1306,"indexExpression":{"id":1305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8533:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8522:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1319,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8600:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1322,"indexExpression":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8606:10:9","subExpression":{"id":1320,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"8606:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8600:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8522:95:9","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1307,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8538:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1308,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8548:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8538:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1314,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8580:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1317,"indexExpression":{"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8587:9:9","subExpression":{"id":1315,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"8587:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8580:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8538:59:9","trueExpression":{"baseExpression":{"id":1310,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"8560:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1313,"indexExpression":{"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8567:9:9","subExpression":{"id":1311,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8567:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8560:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8510:107:9"},{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1325,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8631:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1327,"indexExpression":{"id":1326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8638:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8631:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"8653:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"8656:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1328,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8643:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8631:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1333,"nodeType":"ExpressionStatement","src":"8631:27:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8389:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1282,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"8393:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8389:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1335,"initializationExpression":{"assignments":[1278],"declarations":[{"constant":false,"id":1278,"mutability":"mutable","name":"i","nameLocation":"8382:1:9","nodeType":"VariableDeclaration","scope":1335,"src":"8374:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"8374:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1280,"initialValue":{"hexValue":"30","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8386:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8374:13:9"},"loopExpression":{"expression":{"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8406:3:9","subExpression":{"id":1284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8406:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"nodeType":"ExpressionStatement","src":"8406:3:9"},"nodeType":"ForStatement","src":"8369:300:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"8683:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8683:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8765:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8777:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8765:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1358,"nodeType":"Block","src":"8827:40:9","statements":[{"expression":{"baseExpression":{"id":1354,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8848:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1356,"indexExpression":{"hexValue":"30","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8848:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1231,"id":1357,"nodeType":"Return","src":"8841:15:9"}]},"id":1359,"nodeType":"IfStatement","src":"8761:106:9","trueBody":{"id":1353,"nodeType":"Block","src":"8780:41:9","statements":[{"expression":{"baseExpression":{"id":1349,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"8801:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1351,"indexExpression":{"hexValue":"30","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8808:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8801:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1231,"id":1352,"nodeType":"Return","src":"8794:16:9"}]}},"id":1360,"nodeType":"IfStatement","src":"8679:188:9","trueBody":{"id":1345,"nodeType":"Block","src":"8700:55:9","statements":[{"expression":{"baseExpression":{"id":1339,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8721:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1343,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"8728:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8742:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8728:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8721:23:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1231,"id":1344,"nodeType":"Return","src":"8714:30:9"}]}}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"6619:202:9","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6835:25:9","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"proof","nameLocation":"6889:5:9","nodeType":"VariableDeclaration","scope":1362,"src":"6870:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1220,"nodeType":"ArrayTypeName","src":"6870:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"proofFlags","nameLocation":"6920:10:9","nodeType":"VariableDeclaration","scope":1362,"src":"6904:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1222,"name":"bool","nodeType":"ElementaryTypeName","src":"6904:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1223,"nodeType":"ArrayTypeName","src":"6904:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"leaves","nameLocation":"6957:6:9","nodeType":"VariableDeclaration","scope":1362,"src":"6940:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6940:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1226,"nodeType":"ArrayTypeName","src":"6940:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6860:109:9"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"merkleRoot","nameLocation":"7001:10:9","nodeType":"VariableDeclaration","scope":1362,"src":"6993:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6993:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6992:20:9"},"scope":1397,"src":"6826:2047:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1384,"nodeType":"Block","src":"8951:75:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"8968:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1372,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"8972:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8968:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"9014:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"9017:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1378,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"8999:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8968:51:9","trueExpression":{"arguments":[{"id":1375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"8991:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"8994:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1374,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"8976:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8976:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1370,"id":1383,"nodeType":"Return","src":"8961:58:9"}]},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"8888:9:9","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"a","nameLocation":"8906:1:9","nodeType":"VariableDeclaration","scope":1385,"src":"8898:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8898:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"b","nameLocation":"8917:1:9","nodeType":"VariableDeclaration","scope":1385,"src":"8909:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8909:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8897:22:9"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"8942:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8942:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8941:9:9"},"scope":1397,"src":"8879:147:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1395,"nodeType":"Block","src":"9115:178:9","statements":[{"AST":{"nodeType":"YulBlock","src":"9177:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9198:4:9","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9204:1:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9191:6:9"},"nodeType":"YulFunctionCall","src":"9191:15:9"},"nodeType":"YulExpressionStatement","src":"9191:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9226:4:9","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9232:1:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9219:6:9"},"nodeType":"YulFunctionCall","src":"9219:15:9"},"nodeType":"YulExpressionStatement","src":"9219:15:9"},{"nodeType":"YulAssignment","src":"9247:30:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9266:4:9","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9272:4:9","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9256:9:9"},"nodeType":"YulFunctionCall","src":"9256:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9247:5:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1387,"isOffset":false,"isSlot":false,"src":"9204:1:9","valueSize":1},{"declaration":1389,"isOffset":false,"isSlot":false,"src":"9232:1:9","valueSize":1},{"declaration":1392,"isOffset":false,"isSlot":false,"src":"9247:5:9","valueSize":1}],"id":1394,"nodeType":"InlineAssembly","src":"9168:119:9"}]},"id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9041:14:9","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"a","nameLocation":"9064:1:9","nodeType":"VariableDeclaration","scope":1396,"src":"9056:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9056:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"b","nameLocation":"9075:1:9","nodeType":"VariableDeclaration","scope":1396,"src":"9067:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9067:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9055:22:9"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"value","nameLocation":"9108:5:9","nodeType":"VariableDeclaration","scope":1396,"src":"9100:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9100:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9099:15:9"},"scope":1397,"src":"9032:261:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1398,"src":"802:8493:9","usedErrors":[]}],"src":"118:9178:9"},"id":9},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1421],"IERC165":[1433]},"id":1422,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1399,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1422,"sourceUnit":1434,"src":"124:23:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1402,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"754:7:10"},"id":1403,"nodeType":"InheritanceSpecifier","src":"754:7:10"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"149:576:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1421,"linearizedBaseContracts":[1421,1433],"name":"ERC165","nameLocation":"744:6:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1432],"body":{"id":1419,"nodeType":"Block","src":"920:64:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"937:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1414,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"957:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1433_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1433_$","typeString":"type(contract IERC165)"}],"id":1413,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1433","typeString":"type(contract IERC165)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1411,"id":1418,"nodeType":"Return","src":"930:47:10"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"768:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1420,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:10","nodeType":"FunctionDefinition","overrides":{"id":1408,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:10"},"parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:10","nodeType":"VariableDeclaration","scope":1420,"src":"856:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1405,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:10"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1420,"src":"914:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1409,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:10"},"scope":1421,"src":"829:155:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1422,"src":"726:260:10","usedErrors":[]}],"src":"99:888:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1433]},"id":1434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1423,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"125:279:11","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1433,"linearizedBaseContracts":[1433],"name":"IERC165","nameLocation":"415:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"429:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1432,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:11","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:11","nodeType":"VariableDeclaration","scope":1432,"src":"801:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1426,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:11"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"844:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1429,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:11"},"scope":1433,"src":"774:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1434,"src":"405:447:11","usedErrors":[]}],"src":"100:753:11"},"id":11},"contracts/MerkleDistributor.sol":{"ast":{"absolutePath":"contracts/MerkleDistributor.sol","exportedSymbols":{"ERC1155Holder":[91],"ERC1155Receiver":[125],"ERC165":[1421],"ERC721Holder":[565],"IERC1155Receiver":[40],"IERC165":[1433],"IERC20":[203],"IERC721Receiver":[538],"MerkleDistributor":[1565],"MerkleProof":[1397],"SafeERC20":[520]},"id":1566,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1435,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"45:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1438,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1566,"sourceUnit":521,"src":"70:90:12","symbolAliases":[{"foreign":{"id":1436,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"78:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1437,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"86:9:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","id":1439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1566,"sourceUnit":566,"src":"162:69:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","file":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","id":1440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1566,"sourceUnit":92,"src":"233:71:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1566,"sourceUnit":1398,"src":"305:87:12","symbolAliases":[{"foreign":{"id":1441,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"src":"313:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1443,"name":"ERC721Holder","nodeType":"IdentifierPath","referencedDeclaration":565,"src":"500:12:12"},"id":1444,"nodeType":"InheritanceSpecifier","src":"500:12:12"},{"baseName":{"id":1445,"name":"ERC1155Holder","nodeType":"IdentifierPath","referencedDeclaration":91,"src":"514:13:12"},"id":1446,"nodeType":"InheritanceSpecifier","src":"514:13:12"}],"canonicalName":"MerkleDistributor","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1565,"linearizedBaseContracts":[1565,91,125,40,1421,1433,565,538],"name":"MerkleDistributor","nameLocation":"479:17:12","nodeType":"ContractDefinition","nodes":[{"id":1450,"libraryName":{"id":1447,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":520,"src":"540:9:12"},"nodeType":"UsingForDirective","src":"534:27:12","typeName":{"id":1449,"nodeType":"UserDefinedTypeName","pathNode":{"id":1448,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"554:6:12"},"referencedDeclaration":203,"src":"554:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"9d143e8e","id":1452,"mutability":"immutable","name":"tokenERC20","nameLocation":"591:10:12","nodeType":"VariableDeclaration","scope":1565,"src":"566:35:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e9adc770","id":1454,"mutability":"immutable","name":"tokenERC721","nameLocation":"632:11:12","nodeType":"VariableDeclaration","scope":1565,"src":"607:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"607:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"09c33c67","id":1456,"mutability":"immutable","name":"tokenERC1155","nameLocation":"674:12:12","nodeType":"VariableDeclaration","scope":1565,"src":"649:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"649:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":1458,"mutability":"immutable","name":"merkleRoot","nameLocation":"765:10:12","nodeType":"VariableDeclaration","scope":1565,"src":"740:35:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"740:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"73f95d6b","id":1460,"mutability":"mutable","name":"dropERC20","nameLocation":"796:9:12","nodeType":"VariableDeclaration","scope":1565,"src":"781:24:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":1464,"mutability":"mutable","name":"claimedAddress","nameLocation":"848:14:12","nodeType":"VariableDeclaration","scope":1565,"src":"812:50:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1463,"keyType":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"812:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"id":1470,"name":"ClaimedERC20","nameLocation":"875:12:12","nodeType":"EventDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"indexed":true,"mutability":"mutable","name":"_from","nameLocation":"904:5:12","nodeType":"VariableDeclaration","scope":1470,"src":"888:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"indexed":false,"mutability":"mutable","name":"_dropERC20","nameLocation":"919:10:12","nodeType":"VariableDeclaration","scope":1470,"src":"911:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"887:43:12"},"src":"869:62:12"},{"body":{"id":1503,"nodeType":"Block","src":"1091:170:12","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1483,"name":"tokenERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"1101:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1484,"name":"token_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"1114:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1101:19:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1486,"nodeType":"ExpressionStatement","src":"1101:19:12"},{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1487,"name":"tokenERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1130:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1488,"name":"token721_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1144:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1130:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1490,"nodeType":"ExpressionStatement","src":"1130:23:12"},{"expression":{"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1491,"name":"tokenERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1163:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1492,"name":"token1155_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1178:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1163:25:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1494,"nodeType":"ExpressionStatement","src":"1163:25:12"},{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1495,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1198:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1496,"name":"merkleRoot_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1211:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1198:24:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1498,"nodeType":"ExpressionStatement","src":"1198:24:12"},{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1499,"name":"dropERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1232:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1500,"name":"dropERC20_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"1244:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1232:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"nodeType":"ExpressionStatement","src":"1232:22:12"}]},"id":1504,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"token_","nameLocation":"966:6:12","nodeType":"VariableDeclaration","scope":1504,"src":"958:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"958:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"token721_","nameLocation":"990:9:12","nodeType":"VariableDeclaration","scope":1504,"src":"982:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"token1155_","nameLocation":"1017:10:12","nodeType":"VariableDeclaration","scope":1504,"src":"1009:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"merkleRoot_","nameLocation":"1045:11:12","nodeType":"VariableDeclaration","scope":1504,"src":"1037:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1037:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"dropERC20_","nameLocation":"1074:10:12","nodeType":"VariableDeclaration","scope":1504,"src":"1066:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"948:142:12"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[],"src":"1091:0:12"},"scope":1565,"src":"937:324:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1563,"nodeType":"Block","src":"1329:508:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1511,"name":"claimedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1347:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1514,"indexExpression":{"expression":{"id":1512,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1362:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1362:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1347:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1377:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1347:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d6564204552433230","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1380:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613","typeString":"literal_string \"Claimed ERC20\""},"value":"Claimed ERC20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613","typeString":"literal_string \"Claimed ERC20\""}],"id":1510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1339:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1339:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1519,"nodeType":"ExpressionStatement","src":"1339:57:12"},{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"node","nameLocation":"1451:4:12","nodeType":"VariableDeclaration","scope":1563,"src":"1443:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1443:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1529,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1525,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1485:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1485:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1523,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1468:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1468:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1468:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1522,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1458:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1458:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1443:54:12"},{"condition":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1511:50:12","subExpression":{"arguments":[{"id":1532,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"1531:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1533,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1544:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1534,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"1556:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1530,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"1512:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1397_$","typeString":"type(library MerkleProof)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":919,"src":"1512:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1512:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1544,"nodeType":"IfStatement","src":"1507:149:12","trueBody":{"expression":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1537,"name":"claimedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1626:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1540,"indexExpression":{"expression":{"id":1538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1641:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1641:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1626:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1655:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1626:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1543,"nodeType":"ExpressionStatement","src":"1626:30:12"}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1550,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1716:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1716:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1552,"name":"dropERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1728:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1547,"name":"tokenERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"1695:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1546,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"1688:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$203_$","typeString":"type(contract IERC20)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1688:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$203","typeString":"contract IERC20"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":170,"src":"1688:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1688:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1752:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":1545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1667:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1667:112:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"ExpressionStatement","src":"1667:112:12"},{"eventCall":{"arguments":[{"expression":{"id":1558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1808:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1808:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1560,"name":"dropERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1820:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1557,"name":"ClaimedERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1795:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1795:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"EmitStatement","src":"1790:40:12"}]},"functionSelector":"b391c508","id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1276:5:12","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"merkleProof","nameLocation":"1301:11:12","nodeType":"VariableDeclaration","scope":1564,"src":"1282:30:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1282:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1506,"nodeType":"ArrayTypeName","src":"1282:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1281:32:12"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[],"src":"1329:0:12"},"scope":1565,"src":"1267:570:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1566,"src":"470:1369:12","usedErrors":[]}],"src":"45:1795:12"},"id":12}},"contracts":{"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"ERC1155Holder":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061071b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea2646970667358221220d325738f66cfc6f941b5f6a374af71a3011fd907c8e5d32d74ec3440abe0caee64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0x25 PUSH20 0x8F66CFC6F941B5F6A374AF71A3011FD907C8E5D3 0x2D PUSH21 0xEC3440ABE0CAEE64736F6C63430008090033000000 ","sourceMap":"451:522:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@onERC1155BatchReceived_90":{"entryPoint":336,"id":90,"parameterSlots":5,"returnSlots":1},"@onERC1155Received_67":{"entryPoint":357,"id":67,"parameterSlots":5,"returnSlots":1},"@supportsInterface_124":{"entryPoint":214,"id":124,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1420":{"entryPoint":378,"id":1420,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1033,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1253,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1138,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":571,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1319,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":1365,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":1614,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes4":{"entryPoint":592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":649,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":1572,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":1587,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":903,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":484,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":930,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1189,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":723,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":637,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":691,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":979,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":1238,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":854,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":807,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":785,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":974,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1184,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":499,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":494,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":790,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":741,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":989,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9107:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"378:105:13","statements":[{"nodeType":"YulAssignment","src":"388:89:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:13","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:13"},"nodeType":"YulFunctionCall","src":"399:78:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:13"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:13","type":""}],"src":"334:149:13"},{"body":{"nodeType":"YulBlock","src":"531:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:13"},"nodeType":"YulFunctionCall","src":"589:12:13"},"nodeType":"YulExpressionStatement","src":"589:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:13"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:13"},"nodeType":"YulFunctionCall","src":"561:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:13"},"nodeType":"YulFunctionCall","src":"551:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:13"},"nodeType":"YulFunctionCall","src":"544:42:13"},"nodeType":"YulIf","src":"541:62:13"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:13","type":""}],"src":"489:120:13"},{"body":{"nodeType":"YulBlock","src":"666:86:13","statements":[{"nodeType":"YulAssignment","src":"676:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:13"},"nodeType":"YulFunctionCall","src":"685:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:13"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:13"},"nodeType":"YulFunctionCall","src":"714:32:13"},"nodeType":"YulExpressionStatement","src":"714:32:13"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:13","type":""}],"src":"615:137:13"},{"body":{"nodeType":"YulBlock","src":"823:262:13","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:13"},"nodeType":"YulFunctionCall","src":"871:79:13"},"nodeType":"YulExpressionStatement","src":"871:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:13"},"nodeType":"YulFunctionCall","src":"840:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:13"},"nodeType":"YulFunctionCall","src":"836:32:13"},"nodeType":"YulIf","src":"833:119:13"},{"nodeType":"YulBlock","src":"962:116:13","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:13"},"nodeType":"YulFunctionCall","src":"1036:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:13"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:13"},"nodeType":"YulFunctionCall","src":"1016:52:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:13"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:13","type":""}],"src":"758:327:13"},{"body":{"nodeType":"YulBlock","src":"1133:48:13","statements":[{"nodeType":"YulAssignment","src":"1143:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:13"},"nodeType":"YulFunctionCall","src":"1161:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:13"},"nodeType":"YulFunctionCall","src":"1154:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:13","type":""}],"src":"1091:90:13"},{"body":{"nodeType":"YulBlock","src":"1246:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:13"},"nodeType":"YulFunctionCall","src":"1268:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:13"},"nodeType":"YulFunctionCall","src":"1256:34:13"},"nodeType":"YulExpressionStatement","src":"1256:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:13","type":""}],"src":"1187:109:13"},{"body":{"nodeType":"YulBlock","src":"1394:118:13","statements":[{"nodeType":"YulAssignment","src":"1404:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:13"},"nodeType":"YulFunctionCall","src":"1412:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:13"},"nodeType":"YulFunctionCall","src":"1487:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:13"},"nodeType":"YulFunctionCall","src":"1440:65:13"},"nodeType":"YulExpressionStatement","src":"1440:65:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:13","type":""}],"src":"1302:210:13"},{"body":{"nodeType":"YulBlock","src":"1563:81:13","statements":[{"nodeType":"YulAssignment","src":"1573:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1588:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1595:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1584:3:13"},"nodeType":"YulFunctionCall","src":"1584:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:13","type":""}],"src":"1518:126:13"},{"body":{"nodeType":"YulBlock","src":"1695:51:13","statements":[{"nodeType":"YulAssignment","src":"1705:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1734:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1716:17:13"},"nodeType":"YulFunctionCall","src":"1716:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1705:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1687:7:13","type":""}],"src":"1650:96:13"},{"body":{"nodeType":"YulBlock","src":"1795:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1852:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1861:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1864:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1854:6:13"},"nodeType":"YulFunctionCall","src":"1854:12:13"},"nodeType":"YulExpressionStatement","src":"1854:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1818:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1843:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1825:17:13"},"nodeType":"YulFunctionCall","src":"1825:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1815:2:13"},"nodeType":"YulFunctionCall","src":"1815:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1808:6:13"},"nodeType":"YulFunctionCall","src":"1808:43:13"},"nodeType":"YulIf","src":"1805:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1788:5:13","type":""}],"src":"1752:122:13"},{"body":{"nodeType":"YulBlock","src":"1932:87:13","statements":[{"nodeType":"YulAssignment","src":"1942:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1964:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1951:12:13"},"nodeType":"YulFunctionCall","src":"1951:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1942:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2007:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1980:26:13"},"nodeType":"YulFunctionCall","src":"1980:33:13"},"nodeType":"YulExpressionStatement","src":"1980:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1910:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1918:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1926:5:13","type":""}],"src":"1880:139:13"},{"body":{"nodeType":"YulBlock","src":"2114:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2131:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2134:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2124:6:13"},"nodeType":"YulFunctionCall","src":"2124:12:13"},"nodeType":"YulExpressionStatement","src":"2124:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2025:117:13"},{"body":{"nodeType":"YulBlock","src":"2196:54:13","statements":[{"nodeType":"YulAssignment","src":"2206:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2224:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2231:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2220:3:13"},"nodeType":"YulFunctionCall","src":"2220:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2240:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2236:3:13"},"nodeType":"YulFunctionCall","src":"2236:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2216:3:13"},"nodeType":"YulFunctionCall","src":"2216:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2206:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2179:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2189:6:13","type":""}],"src":"2148:102:13"},{"body":{"nodeType":"YulBlock","src":"2284:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2301:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2304:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2294:6:13"},"nodeType":"YulFunctionCall","src":"2294:88:13"},"nodeType":"YulExpressionStatement","src":"2294:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2398:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2401:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2391:6:13"},"nodeType":"YulFunctionCall","src":"2391:15:13"},"nodeType":"YulExpressionStatement","src":"2391:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2422:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2415:6:13"},"nodeType":"YulFunctionCall","src":"2415:15:13"},"nodeType":"YulExpressionStatement","src":"2415:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2256:180:13"},{"body":{"nodeType":"YulBlock","src":"2485:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2495:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2517:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2547:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2525:21:13"},"nodeType":"YulFunctionCall","src":"2525:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2513:3:13"},"nodeType":"YulFunctionCall","src":"2513:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2499:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2664:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2666:16:13"},"nodeType":"YulFunctionCall","src":"2666:18:13"},"nodeType":"YulExpressionStatement","src":"2666:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2607:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2619:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2604:2:13"},"nodeType":"YulFunctionCall","src":"2604:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2643:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2655:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2640:2:13"},"nodeType":"YulFunctionCall","src":"2640:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2601:2:13"},"nodeType":"YulFunctionCall","src":"2601:62:13"},"nodeType":"YulIf","src":"2598:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2702:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2706:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2695:6:13"},"nodeType":"YulFunctionCall","src":"2695:22:13"},"nodeType":"YulExpressionStatement","src":"2695:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2471:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"2479:4:13","type":""}],"src":"2442:281:13"},{"body":{"nodeType":"YulBlock","src":"2770:88:13","statements":[{"nodeType":"YulAssignment","src":"2780:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2790:18:13"},"nodeType":"YulFunctionCall","src":"2790:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2780:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2839:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"2847:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2819:19:13"},"nodeType":"YulFunctionCall","src":"2819:33:13"},"nodeType":"YulExpressionStatement","src":"2819:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2754:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2763:6:13","type":""}],"src":"2729:129:13"},{"body":{"nodeType":"YulBlock","src":"2946:229:13","statements":[{"body":{"nodeType":"YulBlock","src":"3051:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3053:16:13"},"nodeType":"YulFunctionCall","src":"3053:18:13"},"nodeType":"YulExpressionStatement","src":"3053:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3023:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3031:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3020:2:13"},"nodeType":"YulFunctionCall","src":"3020:30:13"},"nodeType":"YulIf","src":"3017:56:13"},{"nodeType":"YulAssignment","src":"3083:25:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3095:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3103:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3091:3:13"},"nodeType":"YulFunctionCall","src":"3091:17:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3083:4:13"}]},{"nodeType":"YulAssignment","src":"3145:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3157:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"3163:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3153:3:13"},"nodeType":"YulFunctionCall","src":"3153:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3145:4:13"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2930:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2941:4:13","type":""}],"src":"2864:311:13"},{"body":{"nodeType":"YulBlock","src":"3270:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3287:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3290:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3280:6:13"},"nodeType":"YulFunctionCall","src":"3280:12:13"},"nodeType":"YulExpressionStatement","src":"3280:12:13"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3181:117:13"},{"body":{"nodeType":"YulBlock","src":"3349:32:13","statements":[{"nodeType":"YulAssignment","src":"3359:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"3370:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3359:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3331:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3341:7:13","type":""}],"src":"3304:77:13"},{"body":{"nodeType":"YulBlock","src":"3430:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"3487:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3496:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3499:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3489:6:13"},"nodeType":"YulFunctionCall","src":"3489:12:13"},"nodeType":"YulExpressionStatement","src":"3489:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3453:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3478:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3460:17:13"},"nodeType":"YulFunctionCall","src":"3460:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3450:2:13"},"nodeType":"YulFunctionCall","src":"3450:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3443:6:13"},"nodeType":"YulFunctionCall","src":"3443:43:13"},"nodeType":"YulIf","src":"3440:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3423:5:13","type":""}],"src":"3387:122:13"},{"body":{"nodeType":"YulBlock","src":"3567:87:13","statements":[{"nodeType":"YulAssignment","src":"3577:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3599:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3586:12:13"},"nodeType":"YulFunctionCall","src":"3586:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3577:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3642:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3615:26:13"},"nodeType":"YulFunctionCall","src":"3615:33:13"},"nodeType":"YulExpressionStatement","src":"3615:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3545:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3553:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3561:5:13","type":""}],"src":"3515:139:13"},{"body":{"nodeType":"YulBlock","src":"3779:608:13","statements":[{"nodeType":"YulAssignment","src":"3789:90:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3871:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3814:56:13"},"nodeType":"YulFunctionCall","src":"3814:64:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3798:15:13"},"nodeType":"YulFunctionCall","src":"3798:81:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3789:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"3888:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"3899:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3892:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3921:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"3928:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3914:6:13"},"nodeType":"YulFunctionCall","src":"3914:21:13"},"nodeType":"YulExpressionStatement","src":"3914:21:13"},{"nodeType":"YulAssignment","src":"3944:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3955:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3962:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3951:3:13"},"nodeType":"YulFunctionCall","src":"3951:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3944:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"3977:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3995:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4007:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4015:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4003:3:13"},"nodeType":"YulFunctionCall","src":"4003:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:13"},"nodeType":"YulFunctionCall","src":"3991:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3981:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4049:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4063:77:13"},"nodeType":"YulFunctionCall","src":"4063:79:13"},"nodeType":"YulExpressionStatement","src":"4063:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4036:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"4044:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4033:2:13"},"nodeType":"YulFunctionCall","src":"4033:15:13"},"nodeType":"YulIf","src":"4030:122:13"},{"body":{"nodeType":"YulBlock","src":"4237:144:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4252:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"4270:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"4256:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4294:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"4320:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"4332:3:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4299:20:13"},"nodeType":"YulFunctionCall","src":"4299:37:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4287:6:13"},"nodeType":"YulFunctionCall","src":"4287:50:13"},"nodeType":"YulExpressionStatement","src":"4287:50:13"},{"nodeType":"YulAssignment","src":"4350:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4361:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4366:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4357:3:13"},"nodeType":"YulFunctionCall","src":"4357:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4350:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4190:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4195:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4187:2:13"},"nodeType":"YulFunctionCall","src":"4187:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4203:25:13","statements":[{"nodeType":"YulAssignment","src":"4205:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4216:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4221:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4212:3:13"},"nodeType":"YulFunctionCall","src":"4212:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4205:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"4165:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4167:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"4178:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4171:3:13","type":""}]}]},"src":"4161:220:13"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3749:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"3757:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3765:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3773:5:13","type":""}],"src":"3677:710:13"},{"body":{"nodeType":"YulBlock","src":"4487:293:13","statements":[{"body":{"nodeType":"YulBlock","src":"4536:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4538:77:13"},"nodeType":"YulFunctionCall","src":"4538:79:13"},"nodeType":"YulExpressionStatement","src":"4538:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4515:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4523:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:13"},"nodeType":"YulFunctionCall","src":"4511:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"4530:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4507:3:13"},"nodeType":"YulFunctionCall","src":"4507:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4500:6:13"},"nodeType":"YulFunctionCall","src":"4500:35:13"},"nodeType":"YulIf","src":"4497:122:13"},{"nodeType":"YulVariableDeclaration","src":"4628:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4655:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4642:12:13"},"nodeType":"YulFunctionCall","src":"4642:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4632:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4671:103:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4747:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4755:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4743:3:13"},"nodeType":"YulFunctionCall","src":"4743:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"4762:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"4770:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4680:62:13"},"nodeType":"YulFunctionCall","src":"4680:94:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4671:5:13"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4465:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"4473:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4481:5:13","type":""}],"src":"4410:370:13"},{"body":{"nodeType":"YulBlock","src":"4875:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4892:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4895:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4885:6:13"},"nodeType":"YulFunctionCall","src":"4885:12:13"},"nodeType":"YulExpressionStatement","src":"4885:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"4786:117:13"},{"body":{"nodeType":"YulBlock","src":"4975:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"5080:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5082:16:13"},"nodeType":"YulFunctionCall","src":"5082:18:13"},"nodeType":"YulExpressionStatement","src":"5082:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5052:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5060:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5049:2:13"},"nodeType":"YulFunctionCall","src":"5049:30:13"},"nodeType":"YulIf","src":"5046:56:13"},{"nodeType":"YulAssignment","src":"5112:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5142:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5120:21:13"},"nodeType":"YulFunctionCall","src":"5120:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5112:4:13"}]},{"nodeType":"YulAssignment","src":"5186:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5198:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"5204:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5194:3:13"},"nodeType":"YulFunctionCall","src":"5194:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5186:4:13"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4959:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4970:4:13","type":""}],"src":"4909:307:13"},{"body":{"nodeType":"YulBlock","src":"5273:103:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5296:3:13"},{"name":"src","nodeType":"YulIdentifier","src":"5301:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"5306:6:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"5283:12:13"},"nodeType":"YulFunctionCall","src":"5283:30:13"},"nodeType":"YulExpressionStatement","src":"5283:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5354:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"5359:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5350:3:13"},"nodeType":"YulFunctionCall","src":"5350:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"5368:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5343:6:13"},"nodeType":"YulFunctionCall","src":"5343:27:13"},"nodeType":"YulExpressionStatement","src":"5343:27:13"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5255:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5260:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"5265:6:13","type":""}],"src":"5222:154:13"},{"body":{"nodeType":"YulBlock","src":"5465:327:13","statements":[{"nodeType":"YulAssignment","src":"5475:74:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5541:6:13"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5500:40:13"},"nodeType":"YulFunctionCall","src":"5500:48:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5484:15:13"},"nodeType":"YulFunctionCall","src":"5484:65:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5475:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5565:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"5572:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5558:6:13"},"nodeType":"YulFunctionCall","src":"5558:21:13"},"nodeType":"YulExpressionStatement","src":"5558:21:13"},{"nodeType":"YulVariableDeclaration","src":"5588:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5603:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"5610:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5599:3:13"},"nodeType":"YulFunctionCall","src":"5599:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5592:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5653:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"5655:77:13"},"nodeType":"YulFunctionCall","src":"5655:79:13"},"nodeType":"YulExpressionStatement","src":"5655:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5634:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"5639:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5630:3:13"},"nodeType":"YulFunctionCall","src":"5630:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"5648:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5627:2:13"},"nodeType":"YulFunctionCall","src":"5627:25:13"},"nodeType":"YulIf","src":"5624:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5769:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"5774:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"5779:6:13"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"5745:23:13"},"nodeType":"YulFunctionCall","src":"5745:41:13"},"nodeType":"YulExpressionStatement","src":"5745:41:13"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5438:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"5443:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"5451:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5459:5:13","type":""}],"src":"5382:410:13"},{"body":{"nodeType":"YulBlock","src":"5872:277:13","statements":[{"body":{"nodeType":"YulBlock","src":"5921:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5923:77:13"},"nodeType":"YulFunctionCall","src":"5923:79:13"},"nodeType":"YulExpressionStatement","src":"5923:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5900:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5908:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5896:3:13"},"nodeType":"YulFunctionCall","src":"5896:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5892:3:13"},"nodeType":"YulFunctionCall","src":"5892:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5885:6:13"},"nodeType":"YulFunctionCall","src":"5885:35:13"},"nodeType":"YulIf","src":"5882:122:13"},{"nodeType":"YulVariableDeclaration","src":"6013:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6040:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6027:12:13"},"nodeType":"YulFunctionCall","src":"6027:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6017:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6056:87:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6116:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6124:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6112:3:13"},"nodeType":"YulFunctionCall","src":"6112:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"6131:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"6139:3:13"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6065:46:13"},"nodeType":"YulFunctionCall","src":"6065:78:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6056:5:13"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5850:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"5858:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5866:5:13","type":""}],"src":"5811:338:13"},{"body":{"nodeType":"YulBlock","src":"6348:1316:13","statements":[{"body":{"nodeType":"YulBlock","src":"6395:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6397:77:13"},"nodeType":"YulFunctionCall","src":"6397:79:13"},"nodeType":"YulExpressionStatement","src":"6397:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6369:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"6378:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6365:3:13"},"nodeType":"YulFunctionCall","src":"6365:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6390:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6361:3:13"},"nodeType":"YulFunctionCall","src":"6361:33:13"},"nodeType":"YulIf","src":"6358:120:13"},{"nodeType":"YulBlock","src":"6488:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6503:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6517:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6507:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6532:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6567:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6578:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6563:3:13"},"nodeType":"YulFunctionCall","src":"6563:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6587:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6542:20:13"},"nodeType":"YulFunctionCall","src":"6542:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6532:6:13"}]}]},{"nodeType":"YulBlock","src":"6615:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6630:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6644:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6634:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6660:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6695:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6706:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6691:3:13"},"nodeType":"YulFunctionCall","src":"6691:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6715:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6670:20:13"},"nodeType":"YulFunctionCall","src":"6670:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6660:6:13"}]}]},{"nodeType":"YulBlock","src":"6743:303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6758:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6789:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6800:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6785:3:13"},"nodeType":"YulFunctionCall","src":"6785:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6772:12:13"},"nodeType":"YulFunctionCall","src":"6772:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6762:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6851:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6853:77:13"},"nodeType":"YulFunctionCall","src":"6853:79:13"},"nodeType":"YulExpressionStatement","src":"6853:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6823:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6831:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6820:2:13"},"nodeType":"YulFunctionCall","src":"6820:30:13"},"nodeType":"YulIf","src":"6817:117:13"},{"nodeType":"YulAssignment","src":"6948:88:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7008:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7019:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7004:3:13"},"nodeType":"YulFunctionCall","src":"7004:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7028:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6958:45:13"},"nodeType":"YulFunctionCall","src":"6958:78:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6948:6:13"}]}]},{"nodeType":"YulBlock","src":"7056:303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7071:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7102:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7113:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7098:3:13"},"nodeType":"YulFunctionCall","src":"7098:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7085:12:13"},"nodeType":"YulFunctionCall","src":"7085:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7075:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7164:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7166:77:13"},"nodeType":"YulFunctionCall","src":"7166:79:13"},"nodeType":"YulExpressionStatement","src":"7166:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7136:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7144:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7133:2:13"},"nodeType":"YulFunctionCall","src":"7133:30:13"},"nodeType":"YulIf","src":"7130:117:13"},{"nodeType":"YulAssignment","src":"7261:88:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7321:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7332:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7317:3:13"},"nodeType":"YulFunctionCall","src":"7317:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7341:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7271:45:13"},"nodeType":"YulFunctionCall","src":"7271:78:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7261:6:13"}]}]},{"nodeType":"YulBlock","src":"7369:288:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7384:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7415:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7426:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7411:3:13"},"nodeType":"YulFunctionCall","src":"7411:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7398:12:13"},"nodeType":"YulFunctionCall","src":"7398:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7388:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7478:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7480:77:13"},"nodeType":"YulFunctionCall","src":"7480:79:13"},"nodeType":"YulExpressionStatement","src":"7480:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7450:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7458:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7447:2:13"},"nodeType":"YulFunctionCall","src":"7447:30:13"},"nodeType":"YulIf","src":"7444:117:13"},{"nodeType":"YulAssignment","src":"7575:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7619:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7630:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7615:3:13"},"nodeType":"YulFunctionCall","src":"7615:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7639:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7585:29:13"},"nodeType":"YulFunctionCall","src":"7585:62:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7575:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6286:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6297:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6309:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6317:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6325:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6333:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6341:6:13","type":""}],"src":"6155:1509:13"},{"body":{"nodeType":"YulBlock","src":"7733:52:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7750:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7772:5:13"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"7755:16:13"},"nodeType":"YulFunctionCall","src":"7755:23:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7743:6:13"},"nodeType":"YulFunctionCall","src":"7743:36:13"},"nodeType":"YulExpressionStatement","src":"7743:36:13"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7721:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7728:3:13","type":""}],"src":"7670:115:13"},{"body":{"nodeType":"YulBlock","src":"7887:122:13","statements":[{"nodeType":"YulAssignment","src":"7897:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7909:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7920:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7905:3:13"},"nodeType":"YulFunctionCall","src":"7905:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7897:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7975:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7988:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7999:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7984:3:13"},"nodeType":"YulFunctionCall","src":"7984:17:13"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"7933:41:13"},"nodeType":"YulFunctionCall","src":"7933:69:13"},"nodeType":"YulExpressionStatement","src":"7933:69:13"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7859:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7871:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7882:4:13","type":""}],"src":"7791:218:13"},{"body":{"nodeType":"YulBlock","src":"8158:946:13","statements":[{"body":{"nodeType":"YulBlock","src":"8205:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8207:77:13"},"nodeType":"YulFunctionCall","src":"8207:79:13"},"nodeType":"YulExpressionStatement","src":"8207:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8179:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8188:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8175:3:13"},"nodeType":"YulFunctionCall","src":"8175:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"8200:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8171:3:13"},"nodeType":"YulFunctionCall","src":"8171:33:13"},"nodeType":"YulIf","src":"8168:120:13"},{"nodeType":"YulBlock","src":"8298:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8313:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8327:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8317:6:13","type":""}]},{"nodeType":"YulAssignment","src":"8342:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8377:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"8388:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8373:3:13"},"nodeType":"YulFunctionCall","src":"8373:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8397:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8352:20:13"},"nodeType":"YulFunctionCall","src":"8352:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8342:6:13"}]}]},{"nodeType":"YulBlock","src":"8425:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8440:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8454:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8444:6:13","type":""}]},{"nodeType":"YulAssignment","src":"8470:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8505:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"8516:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8501:3:13"},"nodeType":"YulFunctionCall","src":"8501:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8525:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8480:20:13"},"nodeType":"YulFunctionCall","src":"8480:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8470:6:13"}]}]},{"nodeType":"YulBlock","src":"8553:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8568:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8582:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8572:6:13","type":""}]},{"nodeType":"YulAssignment","src":"8598:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8633:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"8644:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8629:3:13"},"nodeType":"YulFunctionCall","src":"8629:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8653:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8608:20:13"},"nodeType":"YulFunctionCall","src":"8608:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8598:6:13"}]}]},{"nodeType":"YulBlock","src":"8681:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8696:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8710:2:13","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8700:6:13","type":""}]},{"nodeType":"YulAssignment","src":"8726:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8761:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"8772:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8757:3:13"},"nodeType":"YulFunctionCall","src":"8757:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8781:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8736:20:13"},"nodeType":"YulFunctionCall","src":"8736:53:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8726:6:13"}]}]},{"nodeType":"YulBlock","src":"8809:288:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8824:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8855:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8866:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8851:3:13"},"nodeType":"YulFunctionCall","src":"8851:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8838:12:13"},"nodeType":"YulFunctionCall","src":"8838:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8828:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8918:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8920:77:13"},"nodeType":"YulFunctionCall","src":"8920:79:13"},"nodeType":"YulExpressionStatement","src":"8920:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8890:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8898:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8887:2:13"},"nodeType":"YulFunctionCall","src":"8887:30:13"},"nodeType":"YulIf","src":"8884:117:13"},{"nodeType":"YulAssignment","src":"9015:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9059:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"9070:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9055:3:13"},"nodeType":"YulFunctionCall","src":"9055:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9079:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9025:29:13"},"nodeType":"YulFunctionCall","src":"9025:62:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9015:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8096:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8107:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8119:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8127:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8135:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8143:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8151:6:13","type":""}],"src":"8015:1089:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea2646970667358221220d325738f66cfc6f941b5f6a374af71a3011fd907c8e5d32d74ec3440abe0caee64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0x25 PUSH20 0x8F66CFC6F941B5F6A374AF71A3011FD907C8E5D3 0x2D PUSH21 0xEC3440ABE0CAEE64736F6C63430008090033000000 ","sourceMap":"451:522:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:2;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;724:247:1:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:10:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:117::-;2134:1;2131;2124:12;2148:102;2189:6;2240:2;2236:7;2231:2;2224:5;2220:14;2216:28;2206:38;;2148:102;;;:::o;2256:180::-;2304:77;2301:1;2294:88;2401:4;2398:1;2391:15;2425:4;2422:1;2415:15;2442:281;2525:27;2547:4;2525:27;:::i;:::-;2517:6;2513:40;2655:6;2643:10;2640:22;2619:18;2607:10;2604:34;2601:62;2598:88;;;2666:18;;:::i;:::-;2598:88;2706:10;2702:2;2695:22;2485:238;2442:281;;:::o;2729:129::-;2763:6;2790:20;;:::i;:::-;2780:30;;2819:33;2847:4;2839:6;2819:33;:::i;:::-;2729:129;;;:::o;2864:311::-;2941:4;3031:18;3023:6;3020:30;3017:56;;;3053:18;;:::i;:::-;3017:56;3103:4;3095:6;3091:17;3083:25;;3163:4;3157;3153:15;3145:23;;2864:311;;;:::o;3181:117::-;3290:1;3287;3280:12;3304:77;3341:7;3370:5;3359:16;;3304:77;;;:::o;3387:122::-;3460:24;3478:5;3460:24;:::i;:::-;3453:5;3450:35;3440:63;;3499:1;3496;3489:12;3440:63;3387:122;:::o;3515:139::-;3561:5;3599:6;3586:20;3577:29;;3615:33;3642:5;3615:33;:::i;:::-;3515:139;;;;:::o;3677:710::-;3773:5;3798:81;3814:64;3871:6;3814:64;:::i;:::-;3798:81;:::i;:::-;3789:90;;3899:5;3928:6;3921:5;3914:21;3962:4;3955:5;3951:16;3944:23;;4015:4;4007:6;4003:17;3995:6;3991:30;4044:3;4036:6;4033:15;4030:122;;;4063:79;;:::i;:::-;4030:122;4178:6;4161:220;4195:6;4190:3;4187:15;4161:220;;;4270:3;4299:37;4332:3;4320:10;4299:37;:::i;:::-;4294:3;4287:50;4366:4;4361:3;4357:14;4350:21;;4237:144;4221:4;4216:3;4212:14;4205:21;;4161:220;;;4165:21;3779:608;;3677:710;;;;;:::o;4410:370::-;4481:5;4530:3;4523:4;4515:6;4511:17;4507:27;4497:122;;4538:79;;:::i;:::-;4497:122;4655:6;4642:20;4680:94;4770:3;4762:6;4755:4;4747:6;4743:17;4680:94;:::i;:::-;4671:103;;4487:293;4410:370;;;;:::o;4786:117::-;4895:1;4892;4885:12;4909:307;4970:4;5060:18;5052:6;5049:30;5046:56;;;5082:18;;:::i;:::-;5046:56;5120:29;5142:6;5120:29;:::i;:::-;5112:37;;5204:4;5198;5194:15;5186:23;;4909:307;;;:::o;5222:154::-;5306:6;5301:3;5296;5283:30;5368:1;5359:6;5354:3;5350:16;5343:27;5222:154;;;:::o;5382:410::-;5459:5;5484:65;5500:48;5541:6;5500:48;:::i;:::-;5484:65;:::i;:::-;5475:74;;5572:6;5565:5;5558:21;5610:4;5603:5;5599:16;5648:3;5639:6;5634:3;5630:16;5627:25;5624:112;;;5655:79;;:::i;:::-;5624:112;5745:41;5779:6;5774:3;5769;5745:41;:::i;:::-;5465:327;5382:410;;;;;:::o;5811:338::-;5866:5;5915:3;5908:4;5900:6;5896:17;5892:27;5882:122;;5923:79;;:::i;:::-;5882:122;6040:6;6027:20;6065:78;6139:3;6131:6;6124:4;6116:6;6112:17;6065:78;:::i;:::-;6056:87;;5872:277;5811:338;;;;:::o;6155:1509::-;6309:6;6317;6325;6333;6341;6390:3;6378:9;6369:7;6365:23;6361:33;6358:120;;;6397:79;;:::i;:::-;6358:120;6517:1;6542:53;6587:7;6578:6;6567:9;6563:22;6542:53;:::i;:::-;6532:63;;6488:117;6644:2;6670:53;6715:7;6706:6;6695:9;6691:22;6670:53;:::i;:::-;6660:63;;6615:118;6800:2;6789:9;6785:18;6772:32;6831:18;6823:6;6820:30;6817:117;;;6853:79;;:::i;:::-;6817:117;6958:78;7028:7;7019:6;7008:9;7004:22;6958:78;:::i;:::-;6948:88;;6743:303;7113:2;7102:9;7098:18;7085:32;7144:18;7136:6;7133:30;7130:117;;;7166:79;;:::i;:::-;7130:117;7271:78;7341:7;7332:6;7321:9;7317:22;7271:78;:::i;:::-;7261:88;;7056:303;7426:3;7415:9;7411:19;7398:33;7458:18;7450:6;7447:30;7444:117;;;7480:79;;:::i;:::-;7444:117;7585:62;7639:7;7630:6;7619:9;7615:22;7585:62;:::i;:::-;7575:72;;7369:288;6155:1509;;;;;;;;:::o;7670:115::-;7755:23;7772:5;7755:23;:::i;:::-;7750:3;7743:36;7670:115;;:::o;7791:218::-;7882:4;7920:2;7909:9;7905:18;7897:26;;7933:69;7999:1;7988:9;7984:17;7975:6;7933:69;:::i;:::-;7791:218;;;;:::o;8015:1089::-;8119:6;8127;8135;8143;8151;8200:3;8188:9;8179:7;8175:23;8171:33;8168:120;;;8207:79;;:::i;:::-;8168:120;8327:1;8352:53;8397:7;8388:6;8377:9;8373:22;8352:53;:::i;:::-;8342:63;;8298:117;8454:2;8480:53;8525:7;8516:6;8505:9;8501:22;8480:53;:::i;:::-;8470:63;;8425:118;8582:2;8608:53;8653:7;8644:6;8633:9;8629:22;8608:53;:::i;:::-;8598:63;;8553:118;8710:2;8736:53;8781:7;8772:6;8761:9;8757:22;8736:53;:::i;:::-;8726:63;;8681:118;8866:3;8855:9;8851:19;8838:33;8898:18;8890:6;8887:30;8884:117;;;8920:79;;:::i;:::-;8884:117;9025:62;9079:7;9070:6;9059:9;9055:22;9025:62;:::i;:::-;9015:72;;8809:288;8015:1089;;;;;;;;:::o"},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol":{"ERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395ffd9cb67c9e2ab8cfe3e7d25e939fe1dcfb9ddde4bcf47ec8fa8b7581f0b664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5F REVERT SWAP13 0xB6 PUSH29 0x9E2AB8CFE3E7D25E939FE1DCFB9DDDE4BCF47EC8FA8B7581F0B664736F PUSH13 0x63430008090033000000000000 ","sourceMap":"707:3748:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395ffd9cb67c9e2ab8cfe3e7d25e939fe1dcfb9ddde4bcf47ec8fa8b7581f0b664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5F REVERT SWAP13 0xB6 PUSH29 0x9E2AB8CFE3E7D25E939FE1DCFB9DDDE4BCF47EC8FA8B7581F0B664736F PUSH13 0x63430008090033000000000000 ","sourceMap":"707:3748:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"ERC721Holder":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea26469706673582212205ef00b9431e3690e56a7dc4174a44751d429ae14e701ace89e9130386ee105f564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CREATE SIGNEXTEND SWAP5 BALANCE 0xE3 PUSH10 0xE56A7DC4174A44751D4 0x29 0xAE EQ 0xE7 ADD 0xAC 0xE8 SWAP15 SWAP2 ADDRESS CODESIZE PUSH15 0xE105F564736F6C6343000809003300 ","sourceMap":"399:391:7:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@onERC721Received_564":{"entryPoint":96,"id":564,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":498,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":610,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":785,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":800,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":116,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":434,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":168,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":741,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":136,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":230,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":483,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":358,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":311,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":284,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":131,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":126,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":294,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":186,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":240,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4851:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"379:81:13","statements":[{"nodeType":"YulAssignment","src":"389:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:13"},"nodeType":"YulFunctionCall","src":"400:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:13","type":""}],"src":"334:126:13"},{"body":{"nodeType":"YulBlock","src":"511:51:13","statements":[{"nodeType":"YulAssignment","src":"521:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:13"},"nodeType":"YulFunctionCall","src":"532:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:13","type":""}],"src":"466:96:13"},{"body":{"nodeType":"YulBlock","src":"611:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:13"},"nodeType":"YulFunctionCall","src":"670:12:13"},"nodeType":"YulExpressionStatement","src":"670:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:13"},"nodeType":"YulFunctionCall","src":"641:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:13"},"nodeType":"YulFunctionCall","src":"631:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:13"},"nodeType":"YulFunctionCall","src":"624:43:13"},"nodeType":"YulIf","src":"621:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:13","type":""}],"src":"568:122:13"},{"body":{"nodeType":"YulBlock","src":"748:87:13","statements":[{"nodeType":"YulAssignment","src":"758:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:13"},"nodeType":"YulFunctionCall","src":"767:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:13"},"nodeType":"YulFunctionCall","src":"796:33:13"},"nodeType":"YulExpressionStatement","src":"796:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:13","type":""}],"src":"696:139:13"},{"body":{"nodeType":"YulBlock","src":"886:32:13","statements":[{"nodeType":"YulAssignment","src":"896:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:13","type":""}],"src":"841:77:13"},{"body":{"nodeType":"YulBlock","src":"967:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:13"},"nodeType":"YulFunctionCall","src":"1026:12:13"},"nodeType":"YulExpressionStatement","src":"1026:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:13"},"nodeType":"YulFunctionCall","src":"997:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:13"},"nodeType":"YulFunctionCall","src":"987:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:13"},"nodeType":"YulFunctionCall","src":"980:43:13"},"nodeType":"YulIf","src":"977:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:13","type":""}],"src":"924:122:13"},{"body":{"nodeType":"YulBlock","src":"1104:87:13","statements":[{"nodeType":"YulAssignment","src":"1114:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:13"},"nodeType":"YulFunctionCall","src":"1123:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:13"},"nodeType":"YulFunctionCall","src":"1152:33:13"},"nodeType":"YulExpressionStatement","src":"1152:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:13","type":""}],"src":"1052:139:13"},{"body":{"nodeType":"YulBlock","src":"1286:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1306:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1296:6:13"},"nodeType":"YulFunctionCall","src":"1296:12:13"},"nodeType":"YulExpressionStatement","src":"1296:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1197:117:13"},{"body":{"nodeType":"YulBlock","src":"1409:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1426:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1429:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1419:6:13"},"nodeType":"YulFunctionCall","src":"1419:12:13"},"nodeType":"YulExpressionStatement","src":"1419:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1320:117:13"},{"body":{"nodeType":"YulBlock","src":"1491:54:13","statements":[{"nodeType":"YulAssignment","src":"1501:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1519:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1526:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1515:3:13"},"nodeType":"YulFunctionCall","src":"1515:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1535:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1531:3:13"},"nodeType":"YulFunctionCall","src":"1531:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1511:3:13"},"nodeType":"YulFunctionCall","src":"1511:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1501:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1474:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1484:6:13","type":""}],"src":"1443:102:13"},{"body":{"nodeType":"YulBlock","src":"1579:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1596:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1599:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1589:6:13"},"nodeType":"YulFunctionCall","src":"1589:88:13"},"nodeType":"YulExpressionStatement","src":"1589:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1693:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1696:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1686:6:13"},"nodeType":"YulFunctionCall","src":"1686:15:13"},"nodeType":"YulExpressionStatement","src":"1686:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1720:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1710:6:13"},"nodeType":"YulFunctionCall","src":"1710:15:13"},"nodeType":"YulExpressionStatement","src":"1710:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1551:180:13"},{"body":{"nodeType":"YulBlock","src":"1780:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1790:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1812:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1842:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1820:21:13"},"nodeType":"YulFunctionCall","src":"1820:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:13"},"nodeType":"YulFunctionCall","src":"1808:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1794:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1959:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1961:16:13"},"nodeType":"YulFunctionCall","src":"1961:18:13"},"nodeType":"YulExpressionStatement","src":"1961:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1902:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1914:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1899:2:13"},"nodeType":"YulFunctionCall","src":"1899:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1938:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1950:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1935:2:13"},"nodeType":"YulFunctionCall","src":"1935:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1896:2:13"},"nodeType":"YulFunctionCall","src":"1896:62:13"},"nodeType":"YulIf","src":"1893:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1997:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2001:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1990:6:13"},"nodeType":"YulFunctionCall","src":"1990:22:13"},"nodeType":"YulExpressionStatement","src":"1990:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1766:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"1774:4:13","type":""}],"src":"1737:281:13"},{"body":{"nodeType":"YulBlock","src":"2065:88:13","statements":[{"nodeType":"YulAssignment","src":"2075:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2085:18:13"},"nodeType":"YulFunctionCall","src":"2085:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2075:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2134:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"2142:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2114:19:13"},"nodeType":"YulFunctionCall","src":"2114:33:13"},"nodeType":"YulExpressionStatement","src":"2114:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2049:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2058:6:13","type":""}],"src":"2024:129:13"},{"body":{"nodeType":"YulBlock","src":"2225:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"2330:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2332:16:13"},"nodeType":"YulFunctionCall","src":"2332:18:13"},"nodeType":"YulExpressionStatement","src":"2332:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2302:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2310:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2299:2:13"},"nodeType":"YulFunctionCall","src":"2299:30:13"},"nodeType":"YulIf","src":"2296:56:13"},{"nodeType":"YulAssignment","src":"2362:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2392:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2370:21:13"},"nodeType":"YulFunctionCall","src":"2370:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2362:4:13"}]},{"nodeType":"YulAssignment","src":"2436:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2448:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"2454:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:13"},"nodeType":"YulFunctionCall","src":"2444:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2436:4:13"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2209:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2220:4:13","type":""}],"src":"2159:307:13"},{"body":{"nodeType":"YulBlock","src":"2523:103:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2546:3:13"},{"name":"src","nodeType":"YulIdentifier","src":"2551:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2556:6:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2533:12:13"},"nodeType":"YulFunctionCall","src":"2533:30:13"},"nodeType":"YulExpressionStatement","src":"2533:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2604:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2609:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2600:3:13"},"nodeType":"YulFunctionCall","src":"2600:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"2618:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2593:6:13"},"nodeType":"YulFunctionCall","src":"2593:27:13"},"nodeType":"YulExpressionStatement","src":"2593:27:13"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2505:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2510:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2515:6:13","type":""}],"src":"2472:154:13"},{"body":{"nodeType":"YulBlock","src":"2715:327:13","statements":[{"nodeType":"YulAssignment","src":"2725:74:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2791:6:13"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2750:40:13"},"nodeType":"YulFunctionCall","src":"2750:48:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2734:15:13"},"nodeType":"YulFunctionCall","src":"2734:65:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2725:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2815:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"2822:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2808:6:13"},"nodeType":"YulFunctionCall","src":"2808:21:13"},"nodeType":"YulExpressionStatement","src":"2808:21:13"},{"nodeType":"YulVariableDeclaration","src":"2838:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2853:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2860:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2849:3:13"},"nodeType":"YulFunctionCall","src":"2849:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2842:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2903:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2905:77:13"},"nodeType":"YulFunctionCall","src":"2905:79:13"},"nodeType":"YulExpressionStatement","src":"2905:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2884:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2889:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2880:3:13"},"nodeType":"YulFunctionCall","src":"2880:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"2898:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2877:2:13"},"nodeType":"YulFunctionCall","src":"2877:25:13"},"nodeType":"YulIf","src":"2874:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3019:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"3024:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"3029:6:13"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"2995:23:13"},"nodeType":"YulFunctionCall","src":"2995:41:13"},"nodeType":"YulExpressionStatement","src":"2995:41:13"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2688:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2693:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2701:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2709:5:13","type":""}],"src":"2632:410:13"},{"body":{"nodeType":"YulBlock","src":"3122:277:13","statements":[{"body":{"nodeType":"YulBlock","src":"3171:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3173:77:13"},"nodeType":"YulFunctionCall","src":"3173:79:13"},"nodeType":"YulExpressionStatement","src":"3173:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3150:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3158:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3146:3:13"},"nodeType":"YulFunctionCall","src":"3146:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"3165:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3142:3:13"},"nodeType":"YulFunctionCall","src":"3142:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3135:6:13"},"nodeType":"YulFunctionCall","src":"3135:35:13"},"nodeType":"YulIf","src":"3132:122:13"},{"nodeType":"YulVariableDeclaration","src":"3263:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3290:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3277:12:13"},"nodeType":"YulFunctionCall","src":"3277:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3267:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3306:87:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3366:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3374:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3362:3:13"},"nodeType":"YulFunctionCall","src":"3362:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"3381:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"3389:3:13"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3315:46:13"},"nodeType":"YulFunctionCall","src":"3315:78:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3306:5:13"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3100:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3108:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3116:5:13","type":""}],"src":"3061:338:13"},{"body":{"nodeType":"YulBlock","src":"3531:817:13","statements":[{"body":{"nodeType":"YulBlock","src":"3578:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3580:77:13"},"nodeType":"YulFunctionCall","src":"3580:79:13"},"nodeType":"YulExpressionStatement","src":"3580:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3552:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3561:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3548:3:13"},"nodeType":"YulFunctionCall","src":"3548:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3573:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3544:3:13"},"nodeType":"YulFunctionCall","src":"3544:33:13"},"nodeType":"YulIf","src":"3541:120:13"},{"nodeType":"YulBlock","src":"3671:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3686:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3700:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3690:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3715:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3750:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3761:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3746:3:13"},"nodeType":"YulFunctionCall","src":"3746:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3770:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3725:20:13"},"nodeType":"YulFunctionCall","src":"3725:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3715:6:13"}]}]},{"nodeType":"YulBlock","src":"3798:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3813:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3827:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3817:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3843:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3878:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3889:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3874:3:13"},"nodeType":"YulFunctionCall","src":"3874:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3898:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3853:20:13"},"nodeType":"YulFunctionCall","src":"3853:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3843:6:13"}]}]},{"nodeType":"YulBlock","src":"3926:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3941:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3955:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3945:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3971:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4006:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4017:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4002:3:13"},"nodeType":"YulFunctionCall","src":"4002:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4026:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3981:20:13"},"nodeType":"YulFunctionCall","src":"3981:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3971:6:13"}]}]},{"nodeType":"YulBlock","src":"4054:287:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4069:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4100:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4111:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4096:3:13"},"nodeType":"YulFunctionCall","src":"4096:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4083:12:13"},"nodeType":"YulFunctionCall","src":"4083:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4073:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4162:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4164:77:13"},"nodeType":"YulFunctionCall","src":"4164:79:13"},"nodeType":"YulExpressionStatement","src":"4164:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4134:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4142:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4131:2:13"},"nodeType":"YulFunctionCall","src":"4131:30:13"},"nodeType":"YulIf","src":"4128:117:13"},{"nodeType":"YulAssignment","src":"4259:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4303:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4314:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4299:3:13"},"nodeType":"YulFunctionCall","src":"4299:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4323:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4269:29:13"},"nodeType":"YulFunctionCall","src":"4269:62:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4259:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3477:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3488:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3500:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3508:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3516:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3524:6:13","type":""}],"src":"3405:943:13"},{"body":{"nodeType":"YulBlock","src":"4398:105:13","statements":[{"nodeType":"YulAssignment","src":"4408:89:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4423:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4430:66:13","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4419:3:13"},"nodeType":"YulFunctionCall","src":"4419:78:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4408:7:13"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4380:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4390:7:13","type":""}],"src":"4354:149:13"},{"body":{"nodeType":"YulBlock","src":"4572:52:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4589:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4611:5:13"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"4594:16:13"},"nodeType":"YulFunctionCall","src":"4594:23:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4582:6:13"},"nodeType":"YulFunctionCall","src":"4582:36:13"},"nodeType":"YulExpressionStatement","src":"4582:36:13"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4560:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4567:3:13","type":""}],"src":"4509:115:13"},{"body":{"nodeType":"YulBlock","src":"4726:122:13","statements":[{"nodeType":"YulAssignment","src":"4736:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4748:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4759:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:13"},"nodeType":"YulFunctionCall","src":"4744:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4736:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4814:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4827:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4838:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4823:3:13"},"nodeType":"YulFunctionCall","src":"4823:17:13"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"4772:41:13"},"nodeType":"YulFunctionCall","src":"4772:69:13"},"nodeType":"YulExpressionStatement","src":"4772:69:13"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4698:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4710:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4721:4:13","type":""}],"src":"4630:218:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea26469706673582212205ef00b9431e3690e56a7dc4174a44751d429ae14e701ace89e9130386ee105f564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CREATE SIGNEXTEND SWAP5 BALANCE 0xE3 PUSH10 0xE56A7DC4174A44751D4 0x29 0xAE EQ 0xE7 ADD 0xAC 0xE8 SWAP15 SWAP2 ADDRESS CODESIZE PUSH15 0xE105F564736F6C6343000809003300 ","sourceMap":"399:391:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:154::-;2556:6;2551:3;2546;2533:30;2618:1;2609:6;2604:3;2600:16;2593:27;2472:154;;;:::o;2632:410::-;2709:5;2734:65;2750:48;2791:6;2750:48;:::i;:::-;2734:65;:::i;:::-;2725:74;;2822:6;2815:5;2808:21;2860:4;2853:5;2849:16;2898:3;2889:6;2884:3;2880:16;2877:25;2874:112;;;2905:79;;:::i;:::-;2874:112;2995:41;3029:6;3024:3;3019;2995:41;:::i;:::-;2715:327;2632:410;;;;;:::o;3061:338::-;3116:5;3165:3;3158:4;3150:6;3146:17;3142:27;3132:122;;3173:79;;:::i;:::-;3132:122;3290:6;3277:20;3315:78;3389:3;3381:6;3374:4;3366:6;3362:17;3315:78;:::i;:::-;3306:87;;3122:277;3061:338;;;;:::o;3405:943::-;3500:6;3508;3516;3524;3573:3;3561:9;3552:7;3548:23;3544:33;3541:120;;;3580:79;;:::i;:::-;3541:120;3700:1;3725:53;3770:7;3761:6;3750:9;3746:22;3725:53;:::i;:::-;3715:63;;3671:117;3827:2;3853:53;3898:7;3889:6;3878:9;3874:22;3853:53;:::i;:::-;3843:63;;3798:118;3955:2;3981:53;4026:7;4017:6;4006:9;4002:22;3981:53;:::i;:::-;3971:63;;3926:118;4111:2;4100:9;4096:18;4083:32;4142:18;4134:6;4131:30;4128:117;;;4164:79;;:::i;:::-;4128:117;4269:62;4323:7;4314:6;4303:9;4299:22;4269:62;:::i;:::-;4259:72;;4054:287;3405:943;;;;;;;:::o;4354:149::-;4390:7;4430:66;4423:5;4419:78;4408:89;;4354:149;;;:::o;4509:115::-;4594:23;4611:5;4594:23;:::i;:::-;4589:3;4582:36;4509:115;;:::o;4630:218::-;4721:4;4759:2;4748:9;4744:18;4736:26;;4772:69;4838:1;4827:9;4823:17;4814:6;4772:69;:::i;:::-;4630:218;;;;:::o"},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220802a43d16b56d54d3186b9e894a204a536592a0e2ae45a746d0f0087c166d37964736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2A NUMBER 0xD1 PUSH12 0x56D54D3186B9E894A204A536 MSIZE 0x2A 0xE 0x2A 0xE4 GAS PUSH21 0x6D0F0087C166D37964736F6C634300080900330000 ","sourceMap":"194:8964:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220802a43d16b56d54d3186b9e894a204a536592a0e2ae45a746d0f0087c166d37964736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2A NUMBER 0xD1 PUSH12 0x56D54D3186B9E894A204A536 MSIZE 0x2A 0xE 0x2A 0xE4 GAS PUSH21 0x6D0F0087C166D37964736F6C634300080900330000 ","sourceMap":"194:8964:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064416e0e66ec86e7847c58105f784c61843b406ae88d592590884d9a3609c72f64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x416E0E66EC DUP7 0xE7 DUP5 PUSH29 0x58105F784C61843B406AE88D592590884D9A3609C72F64736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"802:8493:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064416e0e66ec86e7847c58105f784c61843b406ae88d592590884d9a3609c72f64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x416E0E66EC DUP7 0xE7 DUP5 PUSH29 0x58105F784C61843B406AE88D592590884D9A3609C72F64736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"802:8493:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/MerkleDistributor.sol":{"MerkleDistributor":{"abi":[{"inputs":[{"internalType":"address","name":"token_","type":"address"},{"internalType":"address","name":"token721_","type":"address"},{"internalType":"address","name":"token1155_","type":"address"},{"internalType":"bytes32","name":"merkleRoot_","type":"bytes32"},{"internalType":"uint256","name":"dropERC20_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"uint256","name":"_dropERC20","type":"uint256"}],"name":"ClaimedERC20","type":"event"},{"inputs":[{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dropERC20","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenERC1155","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenERC20","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenERC721","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1504":{"entryPoint":null,"id":1504,"parameterSlots":5,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":380,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":439,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint256_fromMemory":{"entryPoint":462,"id":null,"parameterSlots":2,"returnSlots":5},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":344,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":243,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":403,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":238,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":295,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":354,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":413,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2545:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"379:81:13","statements":[{"nodeType":"YulAssignment","src":"389:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:13"},"nodeType":"YulFunctionCall","src":"400:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:13","type":""}],"src":"334:126:13"},{"body":{"nodeType":"YulBlock","src":"511:51:13","statements":[{"nodeType":"YulAssignment","src":"521:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:13"},"nodeType":"YulFunctionCall","src":"532:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:13","type":""}],"src":"466:96:13"},{"body":{"nodeType":"YulBlock","src":"611:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:13"},"nodeType":"YulFunctionCall","src":"670:12:13"},"nodeType":"YulExpressionStatement","src":"670:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:13"},"nodeType":"YulFunctionCall","src":"641:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:13"},"nodeType":"YulFunctionCall","src":"631:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:13"},"nodeType":"YulFunctionCall","src":"624:43:13"},"nodeType":"YulIf","src":"621:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:13","type":""}],"src":"568:122:13"},{"body":{"nodeType":"YulBlock","src":"759:80:13","statements":[{"nodeType":"YulAssignment","src":"769:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:13"},"nodeType":"YulFunctionCall","src":"778:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:13"},"nodeType":"YulFunctionCall","src":"800:33:13"},"nodeType":"YulExpressionStatement","src":"800:33:13"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:13","type":""}],"src":"696:143:13"},{"body":{"nodeType":"YulBlock","src":"890:32:13","statements":[{"nodeType":"YulAssignment","src":"900:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:13"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:13","type":""}],"src":"845:77:13"},{"body":{"nodeType":"YulBlock","src":"971:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:13"},"nodeType":"YulFunctionCall","src":"1030:12:13"},"nodeType":"YulExpressionStatement","src":"1030:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:13"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1001:17:13"},"nodeType":"YulFunctionCall","src":"1001:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:13"},"nodeType":"YulFunctionCall","src":"991:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:13"},"nodeType":"YulFunctionCall","src":"984:43:13"},"nodeType":"YulIf","src":"981:63:13"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:13","type":""}],"src":"928:122:13"},{"body":{"nodeType":"YulBlock","src":"1119:80:13","statements":[{"nodeType":"YulAssignment","src":"1129:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:13"},"nodeType":"YulFunctionCall","src":"1138:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:13"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1160:26:13"},"nodeType":"YulFunctionCall","src":"1160:33:13"},"nodeType":"YulExpressionStatement","src":"1160:33:13"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:13","type":""}],"src":"1056:143:13"},{"body":{"nodeType":"YulBlock","src":"1250:32:13","statements":[{"nodeType":"YulAssignment","src":"1260:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1271:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1260:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1232:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1242:7:13","type":""}],"src":"1205:77:13"},{"body":{"nodeType":"YulBlock","src":"1331:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1388:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1400:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1390:6:13"},"nodeType":"YulFunctionCall","src":"1390:12:13"},"nodeType":"YulExpressionStatement","src":"1390:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1354:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1379:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1361:17:13"},"nodeType":"YulFunctionCall","src":"1361:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1351:2:13"},"nodeType":"YulFunctionCall","src":"1351:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:13"},"nodeType":"YulFunctionCall","src":"1344:43:13"},"nodeType":"YulIf","src":"1341:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1324:5:13","type":""}],"src":"1288:122:13"},{"body":{"nodeType":"YulBlock","src":"1479:80:13","statements":[{"nodeType":"YulAssignment","src":"1489:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:13"},"nodeType":"YulFunctionCall","src":"1498:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1489:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1520:26:13"},"nodeType":"YulFunctionCall","src":"1520:33:13"},"nodeType":"YulExpressionStatement","src":"1520:33:13"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1465:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1473:5:13","type":""}],"src":"1416:143:13"},{"body":{"nodeType":"YulBlock","src":"1710:832:13","statements":[{"body":{"nodeType":"YulBlock","src":"1757:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1759:77:13"},"nodeType":"YulFunctionCall","src":"1759:79:13"},"nodeType":"YulExpressionStatement","src":"1759:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1731:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1740:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1727:3:13"},"nodeType":"YulFunctionCall","src":"1727:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1752:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1723:3:13"},"nodeType":"YulFunctionCall","src":"1723:33:13"},"nodeType":"YulIf","src":"1720:120:13"},{"nodeType":"YulBlock","src":"1850:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1865:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1869:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1894:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1940:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1951:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1936:3:13"},"nodeType":"YulFunctionCall","src":"1936:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1960:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1904:31:13"},"nodeType":"YulFunctionCall","src":"1904:64:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1894:6:13"}]}]},{"nodeType":"YulBlock","src":"1988:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2003:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2017:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2007:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2033:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2079:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2090:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2075:3:13"},"nodeType":"YulFunctionCall","src":"2075:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2099:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2043:31:13"},"nodeType":"YulFunctionCall","src":"2043:64:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2033:6:13"}]}]},{"nodeType":"YulBlock","src":"2127:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2142:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2156:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2146:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2172:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2218:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2229:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2214:3:13"},"nodeType":"YulFunctionCall","src":"2214:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2238:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2182:31:13"},"nodeType":"YulFunctionCall","src":"2182:64:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2172:6:13"}]}]},{"nodeType":"YulBlock","src":"2266:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2281:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2295:2:13","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2285:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2311:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2357:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2368:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2353:3:13"},"nodeType":"YulFunctionCall","src":"2353:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2377:7:13"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2321:31:13"},"nodeType":"YulFunctionCall","src":"2321:64:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2311:6:13"}]}]},{"nodeType":"YulBlock","src":"2405:130:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2420:17:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2434:3:13","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2451:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2497:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2508:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2493:3:13"},"nodeType":"YulFunctionCall","src":"2493:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2517:7:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2461:31:13"},"nodeType":"YulFunctionCall","src":"2461:64:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2451:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1648:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1659:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1671:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1679:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1687:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1695:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1703:6:13","type":""}],"src":"1565:977:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101006040523480156200001257600080fd5b506040516200131e3803806200131e8339818101604052810190620000389190620001ce565b8473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508160e0818152505080600081905550505050505062000256565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012082620000f3565b9050919050565b620001328162000113565b81146200013e57600080fd5b50565b600081519050620001528162000127565b92915050565b6000819050919050565b6200016d8162000158565b81146200017957600080fd5b50565b6000815190506200018d8162000162565b92915050565b6000819050919050565b620001a88162000193565b8114620001b457600080fd5b50565b600081519050620001c8816200019d565b92915050565b600080600080600060a08688031215620001ed57620001ec620000ee565b5b6000620001fd8882890162000141565b9550506020620002108882890162000141565b9450506040620002238882890162000141565b935050606062000236888289016200017c565b92505060806200024988828901620001b7565b9150509295509295909350565b60805160a05160c05160e0516110806200029e600039600081816102c9015261040901526000610291015260006105d10152600081816102f3015261047901526110806000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639d143e8e116100665780639d143e8e1461015d578063b391c5081461017b578063bc197c8114610197578063e9adc770146101c7578063f23a6e61146101e55761009e565b806301ffc9a7146100a357806309c33c67146100d3578063150b7a02146100f15780632eb4a7ab1461012157806373f95d6b1461013f575b600080fd5b6100bd60048036038101906100b8919061078d565b610215565b6040516100ca91906107d5565b60405180910390f35b6100db61028f565b6040516100e89190610831565b60405180910390f35b61010b600480360381019061010691906109f4565b6102b3565b6040516101189190610a86565b60405180910390f35b6101296102c7565b6040516101369190610aba565b60405180910390f35b6101476102eb565b6040516101549190610ae4565b60405180910390f35b6101656102f1565b6040516101729190610831565b60405180910390f35b61019560048036038101906101909190610b5f565b610315565b005b6101b160048036038101906101ac9190610c6f565b6105ba565b6040516101be9190610a86565b60405180910390f35b6101cf6105cf565b6040516101dc9190610831565b60405180910390f35b6101ff60048036038101906101fa9190610d3e565b6105f3565b60405161020c9190610a86565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610288575061028782610608565b5b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600063150b7a0260e01b9050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e90610e32565b60405180910390fd5b6000336040516020016103aa9190610e9a565b60405160208183030381529060405280519060200120905061042e838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f000000000000000000000000000000000000000000000000000000000000000083610672565b6104775760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336000546040518363ffffffff1660e01b81526004016104d4929190610eb5565b602060405180830381600087803b1580156104ee57600080fd5b505af1158015610502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105269190610f0a565b610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90610f83565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fc738b2de230010873d5b81370b4c10250e8eaec27550f0c43faf979e093090836000546040516105ad9190610ae4565b60405180910390a2505050565b600063bc197c8160e01b905095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008261067f8584610689565b1490509392505050565b60008082905060005b84518110156106d4576106bf828683815181106106b2576106b1610fa3565b5b60200260200101516106df565b915080806106cc90611001565b915050610692565b508091505092915050565b60008183106106f7576106f2828461070a565b610702565b610701838361070a565b5b905092915050565b600082600052816020526040600020905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61076a81610735565b811461077557600080fd5b50565b60008135905061078781610761565b92915050565b6000602082840312156107a3576107a261072b565b5b60006107b184828501610778565b91505092915050565b60008115159050919050565b6107cf816107ba565b82525050565b60006020820190506107ea60008301846107c6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081b826107f0565b9050919050565b61082b81610810565b82525050565b60006020820190506108466000830184610822565b92915050565b61085581610810565b811461086057600080fd5b50565b6000813590506108728161084c565b92915050565b6000819050919050565b61088b81610878565b811461089657600080fd5b50565b6000813590506108a881610882565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610901826108b8565b810181811067ffffffffffffffff821117156109205761091f6108c9565b5b80604052505050565b6000610933610721565b905061093f82826108f8565b919050565b600067ffffffffffffffff82111561095f5761095e6108c9565b5b610968826108b8565b9050602081019050919050565b82818337600083830152505050565b600061099761099284610944565b610929565b9050828152602081018484840111156109b3576109b26108b3565b5b6109be848285610975565b509392505050565b600082601f8301126109db576109da6108ae565b5b81356109eb848260208601610984565b91505092915050565b60008060008060808587031215610a0e57610a0d61072b565b5b6000610a1c87828801610863565b9450506020610a2d87828801610863565b9350506040610a3e87828801610899565b925050606085013567ffffffffffffffff811115610a5f57610a5e610730565b5b610a6b878288016109c6565b91505092959194509250565b610a8081610735565b82525050565b6000602082019050610a9b6000830184610a77565b92915050565b6000819050919050565b610ab481610aa1565b82525050565b6000602082019050610acf6000830184610aab565b92915050565b610ade81610878565b82525050565b6000602082019050610af96000830184610ad5565b92915050565b600080fd5b600080fd5b60008083601f840112610b1f57610b1e6108ae565b5b8235905067ffffffffffffffff811115610b3c57610b3b610aff565b5b602083019150836020820283011115610b5857610b57610b04565b5b9250929050565b60008060208385031215610b7657610b7561072b565b5b600083013567ffffffffffffffff811115610b9457610b93610730565b5b610ba085828601610b09565b92509250509250929050565b600067ffffffffffffffff821115610bc757610bc66108c9565b5b602082029050602081019050919050565b6000610beb610be684610bac565b610929565b90508083825260208201905060208402830185811115610c0e57610c0d610b04565b5b835b81811015610c375780610c238882610899565b845260208401935050602081019050610c10565b5050509392505050565b600082601f830112610c5657610c556108ae565b5b8135610c66848260208601610bd8565b91505092915050565b600080600080600060a08688031215610c8b57610c8a61072b565b5b6000610c9988828901610863565b9550506020610caa88828901610863565b945050604086013567ffffffffffffffff811115610ccb57610cca610730565b5b610cd788828901610c41565b935050606086013567ffffffffffffffff811115610cf857610cf7610730565b5b610d0488828901610c41565b925050608086013567ffffffffffffffff811115610d2557610d24610730565b5b610d31888289016109c6565b9150509295509295909350565b600080600080600060a08688031215610d5a57610d5961072b565b5b6000610d6888828901610863565b9550506020610d7988828901610863565b9450506040610d8a88828901610899565b9350506060610d9b88828901610899565b925050608086013567ffffffffffffffff811115610dbc57610dbb610730565b5b610dc8888289016109c6565b9150509295509295909350565b600082825260208201905092915050565b7f436c61696d656420455243323000000000000000000000000000000000000000600082015250565b6000610e1c600d83610dd5565b9150610e2782610de6565b602082019050919050565b60006020820190508181036000830152610e4b81610e0f565b9050919050565b60008160601b9050919050565b6000610e6a82610e52565b9050919050565b6000610e7c82610e5f565b9050919050565b610e94610e8f82610810565b610e71565b82525050565b6000610ea68284610e83565b60148201915081905092915050565b6000604082019050610eca6000830185610822565b610ed76020830184610ad5565b9392505050565b610ee7816107ba565b8114610ef257600080fd5b50565b600081519050610f0481610ede565b92915050565b600060208284031215610f2057610f1f61072b565b5b6000610f2e84828501610ef5565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610f6d600f83610dd5565b9150610f7882610f37565b602082019050919050565b60006020820190508181036000830152610f9c81610f60565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100c82610878565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561103f5761103e610fd2565b5b60018201905091905056fea26469706673582212202c46bae5a5a5e089f39343d53885a6ebe7f22e2cc6de68c02a7790f30bfd250564736f6c63430008090033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x131E CODESIZE SUB DUP1 PUSH3 0x131E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x1CE JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x256 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x120 DUP3 PUSH3 0xF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x132 DUP2 PUSH3 0x113 JUMP JUMPDEST DUP2 EQ PUSH3 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x152 DUP2 PUSH3 0x127 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x16D DUP2 PUSH3 0x158 JUMP JUMPDEST DUP2 EQ PUSH3 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x18D DUP2 PUSH3 0x162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A8 DUP2 PUSH3 0x193 JUMP JUMPDEST DUP2 EQ PUSH3 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1C8 DUP2 PUSH3 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x1ED JUMPI PUSH3 0x1EC PUSH3 0xEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1FD DUP9 DUP3 DUP10 ADD PUSH3 0x141 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x210 DUP9 DUP3 DUP10 ADD PUSH3 0x141 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x223 DUP9 DUP3 DUP10 ADD PUSH3 0x141 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x236 DUP9 DUP3 DUP10 ADD PUSH3 0x17C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x249 DUP9 DUP3 DUP10 ADD PUSH3 0x1B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x1080 PUSH3 0x29E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2C9 ADD MSTORE PUSH2 0x409 ADD MSTORE PUSH1 0x0 PUSH2 0x291 ADD MSTORE PUSH1 0x0 PUSH2 0x5D1 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2F3 ADD MSTORE PUSH2 0x479 ADD MSTORE PUSH2 0x1080 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D143E8E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9D143E8E EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xB391C508 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xE9ADC770 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x1E5 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x9C33C67 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x73F95D6B EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x288 JUMPI POP PUSH2 0x287 DUP3 PUSH2 0x608 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x42E DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH32 0x0 DUP4 PUSH2 0x672 JUMP JUMPDEST PUSH2 0x477 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x502 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC738B2DE230010873D5B81370B4C10250E8EAEC27550F0C43FAF979E09309083 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x67F DUP6 DUP5 PUSH2 0x689 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH2 0x6BF DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6B2 JUMPI PUSH2 0x6B1 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x6CC SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x692 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x6F7 JUMPI PUSH2 0x6F2 DUP3 DUP5 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH2 0x701 DUP4 DUP4 PUSH2 0x70A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76A DUP2 PUSH2 0x735 JUMP JUMPDEST DUP2 EQ PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x787 DUP2 PUSH2 0x761 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x7A2 PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP3 DUP6 ADD PUSH2 0x778 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CF DUP2 PUSH2 0x7BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81B DUP3 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82B DUP2 PUSH2 0x810 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x846 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x822 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x855 DUP2 PUSH2 0x810 JUMP JUMPDEST DUP2 EQ PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x872 DUP2 PUSH2 0x84C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88B DUP2 PUSH2 0x878 JUMP JUMPDEST DUP2 EQ PUSH2 0x896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A8 DUP2 PUSH2 0x882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x901 DUP3 PUSH2 0x8B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x920 JUMPI PUSH2 0x91F PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH2 0x93F DUP3 DUP3 PUSH2 0x8F8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x95F JUMPI PUSH2 0x95E PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST PUSH2 0x968 DUP3 PUSH2 0x8B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x997 PUSH2 0x992 DUP5 PUSH2 0x944 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B2 PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST PUSH2 0x9BE DUP5 DUP3 DUP6 PUSH2 0x975 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9DB JUMPI PUSH2 0x9DA PUSH2 0x8AE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9EB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x984 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1C DUP8 DUP3 DUP9 ADD PUSH2 0x863 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xA2D DUP8 DUP3 DUP9 ADD PUSH2 0x863 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xA3E DUP8 DUP3 DUP9 ADD PUSH2 0x899 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA5E PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xA6B DUP8 DUP3 DUP9 ADD PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xA80 DUP2 PUSH2 0x735 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB4 DUP2 PUSH2 0xAA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0x878 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB1F JUMPI PUSH2 0xB1E PUSH2 0x8AE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xAFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xB58 JUMPI PUSH2 0xB57 PUSH2 0xB04 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB76 JUMPI PUSH2 0xB75 PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB93 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC6 PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEB PUSH2 0xBE6 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC0E JUMPI PUSH2 0xC0D PUSH2 0xB04 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC37 JUMPI DUP1 PUSH2 0xC23 DUP9 DUP3 PUSH2 0x899 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC10 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC56 JUMPI PUSH2 0xC55 PUSH2 0x8AE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC66 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC99 DUP9 DUP3 DUP10 ADD PUSH2 0x863 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xCAA DUP9 DUP3 DUP10 ADD PUSH2 0x863 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCB JUMPI PUSH2 0xCCA PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xCD7 DUP9 DUP3 DUP10 ADD PUSH2 0xC41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCF8 JUMPI PUSH2 0xCF7 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xD04 DUP9 DUP3 DUP10 ADD PUSH2 0xC41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD24 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xD31 DUP9 DUP3 DUP10 ADD PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD5A JUMPI PUSH2 0xD59 PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP9 DUP3 DUP10 ADD PUSH2 0x863 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD79 DUP9 DUP3 DUP10 ADD PUSH2 0x863 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD8A DUP9 DUP3 DUP10 ADD PUSH2 0x899 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0x899 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xDC8 DUP9 DUP3 DUP10 ADD PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436C61696D656420455243323000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1C PUSH1 0xD DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xE27 DUP3 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE4B DUP2 PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP3 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C DUP3 PUSH2 0xE5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE94 PUSH2 0xE8F DUP3 PUSH2 0x810 JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA6 DUP3 DUP5 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xECA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x822 JUMP JUMPDEST PUSH2 0xED7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP2 PUSH2 0x7BA JUMP JUMPDEST DUP2 EQ PUSH2 0xEF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF04 DUP2 PUSH2 0xEDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF1F PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2E DUP5 DUP3 DUP6 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6D PUSH1 0xF DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF78 DUP3 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF9C DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100C DUP3 PUSH2 0x878 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C CHAINID 0xBA 0xE5 0xA5 0xA5 0xE0 DUP10 RETURN SWAP4 NUMBER 0xD5 CODESIZE DUP6 0xA6 0xEB 0xE7 CALLCODE 0x2E 0x2C 0xC6 0xDE PUSH9 0xC02A7790F30BFD2505 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"470:1369:12:-:0;;;937:324;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1114:6;1101:19;;;;;;;;;;1144:9;1130:23;;;;;;;;;;1178:10;1163:25;;;;;;;;;;1211:11;1198:24;;;;;;1244:10;1232:9;:22;;;;937:324;;;;;470:1369;;88:117:13;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:977::-;1671:6;1679;1687;1695;1703;1752:3;1740:9;1731:7;1727:23;1723:33;1720:120;;;1759:79;;:::i;:::-;1720:120;1879:1;1904:64;1960:7;1951:6;1940:9;1936:22;1904:64;:::i;:::-;1894:74;;1850:128;2017:2;2043:64;2099:7;2090:6;2079:9;2075:22;2043:64;:::i;:::-;2033:74;;1988:129;2156:2;2182:64;2238:7;2229:6;2218:9;2214:22;2182:64;:::i;:::-;2172:74;;2127:129;2295:2;2321:64;2377:7;2368:6;2357:9;2353:22;2321:64;:::i;:::-;2311:74;;2266:129;2434:3;2461:64;2517:7;2508:6;2497:9;2493:22;2461:64;:::i;:::-;2451:74;;2405:130;1565:977;;;;;;;;:::o;470:1369:12:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_efficientHash_1396":{"entryPoint":1802,"id":1396,"parameterSlots":2,"returnSlots":1},"@_hashPair_1385":{"entryPoint":1759,"id":1385,"parameterSlots":2,"returnSlots":1},"@claim_1564":{"entryPoint":789,"id":1564,"parameterSlots":2,"returnSlots":0},"@dropERC20_1460":{"entryPoint":747,"id":1460,"parameterSlots":0,"returnSlots":0},"@merkleRoot_1458":{"entryPoint":711,"id":1458,"parameterSlots":0,"returnSlots":0},"@onERC1155BatchReceived_90":{"entryPoint":1466,"id":90,"parameterSlots":5,"returnSlots":1},"@onERC1155Received_67":{"entryPoint":1523,"id":67,"parameterSlots":5,"returnSlots":1},"@onERC721Received_564":{"entryPoint":691,"id":564,"parameterSlots":4,"returnSlots":1},"@processProof_980":{"entryPoint":1673,"id":980,"parameterSlots":2,"returnSlots":1},"@supportsInterface_124":{"entryPoint":533,"id":124,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1420":{"entryPoint":1544,"id":1420,"parameterSlots":1,"returnSlots":1},"@tokenERC1155_1456":{"entryPoint":655,"id":1456,"parameterSlots":0,"returnSlots":0},"@tokenERC20_1452":{"entryPoint":753,"id":1452,"parameterSlots":0,"returnSlots":0},"@tokenERC721_1454":{"entryPoint":1487,"id":1454,"parameterSlots":0,"returnSlots":0},"@verify_919":{"entryPoint":1650,"id":919,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3032,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2436,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":2825,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":3829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":1912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":3183,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":2548,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":3390,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":2911,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":1933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2082,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":3715,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1990,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2731,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":2679,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack":{"entryPoint":3936,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack":{"entryPoint":3599,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2773,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":3738,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3765,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":2746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":2694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3971,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3634,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2788,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2345,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1825,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2988,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2372,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3541,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2064,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1978,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2721,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":1845,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2032,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2168,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":2421,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2296,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4097,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":3697,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":3679,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4050,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4003,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2249,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2815,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2222,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2820,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2227,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1840,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1835,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2232,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":3666,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51":{"entryPoint":3895,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613":{"entryPoint":3558,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2124,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3806,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":1889,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2178,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16879:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"378:105:13","statements":[{"nodeType":"YulAssignment","src":"388:89:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:13","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:13"},"nodeType":"YulFunctionCall","src":"399:78:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:13"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:13","type":""}],"src":"334:149:13"},{"body":{"nodeType":"YulBlock","src":"531:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:13"},"nodeType":"YulFunctionCall","src":"589:12:13"},"nodeType":"YulExpressionStatement","src":"589:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:13"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:13"},"nodeType":"YulFunctionCall","src":"561:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:13"},"nodeType":"YulFunctionCall","src":"551:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:13"},"nodeType":"YulFunctionCall","src":"544:42:13"},"nodeType":"YulIf","src":"541:62:13"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:13","type":""}],"src":"489:120:13"},{"body":{"nodeType":"YulBlock","src":"666:86:13","statements":[{"nodeType":"YulAssignment","src":"676:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:13"},"nodeType":"YulFunctionCall","src":"685:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:13"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:13"},"nodeType":"YulFunctionCall","src":"714:32:13"},"nodeType":"YulExpressionStatement","src":"714:32:13"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:13","type":""}],"src":"615:137:13"},{"body":{"nodeType":"YulBlock","src":"823:262:13","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:13"},"nodeType":"YulFunctionCall","src":"871:79:13"},"nodeType":"YulExpressionStatement","src":"871:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:13"},"nodeType":"YulFunctionCall","src":"840:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:13"},"nodeType":"YulFunctionCall","src":"836:32:13"},"nodeType":"YulIf","src":"833:119:13"},{"nodeType":"YulBlock","src":"962:116:13","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:13"},"nodeType":"YulFunctionCall","src":"1036:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:13"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:13"},"nodeType":"YulFunctionCall","src":"1016:52:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:13"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:13","type":""}],"src":"758:327:13"},{"body":{"nodeType":"YulBlock","src":"1133:48:13","statements":[{"nodeType":"YulAssignment","src":"1143:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:13"},"nodeType":"YulFunctionCall","src":"1161:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:13"},"nodeType":"YulFunctionCall","src":"1154:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:13","type":""}],"src":"1091:90:13"},{"body":{"nodeType":"YulBlock","src":"1246:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:13"},"nodeType":"YulFunctionCall","src":"1268:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:13"},"nodeType":"YulFunctionCall","src":"1256:34:13"},"nodeType":"YulExpressionStatement","src":"1256:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:13","type":""}],"src":"1187:109:13"},{"body":{"nodeType":"YulBlock","src":"1394:118:13","statements":[{"nodeType":"YulAssignment","src":"1404:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:13"},"nodeType":"YulFunctionCall","src":"1412:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:13"},"nodeType":"YulFunctionCall","src":"1487:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:13"},"nodeType":"YulFunctionCall","src":"1440:65:13"},"nodeType":"YulExpressionStatement","src":"1440:65:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:13","type":""}],"src":"1302:210:13"},{"body":{"nodeType":"YulBlock","src":"1563:81:13","statements":[{"nodeType":"YulAssignment","src":"1573:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1588:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1595:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1584:3:13"},"nodeType":"YulFunctionCall","src":"1584:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:13","type":""}],"src":"1518:126:13"},{"body":{"nodeType":"YulBlock","src":"1695:51:13","statements":[{"nodeType":"YulAssignment","src":"1705:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1734:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1716:17:13"},"nodeType":"YulFunctionCall","src":"1716:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1705:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1687:7:13","type":""}],"src":"1650:96:13"},{"body":{"nodeType":"YulBlock","src":"1817:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1834:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1857:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1839:17:13"},"nodeType":"YulFunctionCall","src":"1839:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1827:6:13"},"nodeType":"YulFunctionCall","src":"1827:37:13"},"nodeType":"YulExpressionStatement","src":"1827:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1805:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1812:3:13","type":""}],"src":"1752:118:13"},{"body":{"nodeType":"YulBlock","src":"1974:124:13","statements":[{"nodeType":"YulAssignment","src":"1984:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1996:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2007:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1992:3:13"},"nodeType":"YulFunctionCall","src":"1992:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1984:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2064:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2077:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2088:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2073:3:13"},"nodeType":"YulFunctionCall","src":"2073:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2020:43:13"},"nodeType":"YulFunctionCall","src":"2020:71:13"},"nodeType":"YulExpressionStatement","src":"2020:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1946:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1958:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1969:4:13","type":""}],"src":"1876:222:13"},{"body":{"nodeType":"YulBlock","src":"2147:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2204:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2213:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2216:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2206:6:13"},"nodeType":"YulFunctionCall","src":"2206:12:13"},"nodeType":"YulExpressionStatement","src":"2206:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2170:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2195:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2177:17:13"},"nodeType":"YulFunctionCall","src":"2177:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2167:2:13"},"nodeType":"YulFunctionCall","src":"2167:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2160:6:13"},"nodeType":"YulFunctionCall","src":"2160:43:13"},"nodeType":"YulIf","src":"2157:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2140:5:13","type":""}],"src":"2104:122:13"},{"body":{"nodeType":"YulBlock","src":"2284:87:13","statements":[{"nodeType":"YulAssignment","src":"2294:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2316:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2303:12:13"},"nodeType":"YulFunctionCall","src":"2303:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2294:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2359:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2332:26:13"},"nodeType":"YulFunctionCall","src":"2332:33:13"},"nodeType":"YulExpressionStatement","src":"2332:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2262:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2270:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2278:5:13","type":""}],"src":"2232:139:13"},{"body":{"nodeType":"YulBlock","src":"2422:32:13","statements":[{"nodeType":"YulAssignment","src":"2432:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"2443:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2432:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2404:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2414:7:13","type":""}],"src":"2377:77:13"},{"body":{"nodeType":"YulBlock","src":"2503:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2560:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2569:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2572:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2562:6:13"},"nodeType":"YulFunctionCall","src":"2562:12:13"},"nodeType":"YulExpressionStatement","src":"2562:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2526:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2551:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2533:17:13"},"nodeType":"YulFunctionCall","src":"2533:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2523:2:13"},"nodeType":"YulFunctionCall","src":"2523:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2516:6:13"},"nodeType":"YulFunctionCall","src":"2516:43:13"},"nodeType":"YulIf","src":"2513:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2496:5:13","type":""}],"src":"2460:122:13"},{"body":{"nodeType":"YulBlock","src":"2640:87:13","statements":[{"nodeType":"YulAssignment","src":"2650:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2672:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2659:12:13"},"nodeType":"YulFunctionCall","src":"2659:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2650:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2715:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2688:26:13"},"nodeType":"YulFunctionCall","src":"2688:33:13"},"nodeType":"YulExpressionStatement","src":"2688:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2618:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2626:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2634:5:13","type":""}],"src":"2588:139:13"},{"body":{"nodeType":"YulBlock","src":"2822:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2839:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2842:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2832:6:13"},"nodeType":"YulFunctionCall","src":"2832:12:13"},"nodeType":"YulExpressionStatement","src":"2832:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2733:117:13"},{"body":{"nodeType":"YulBlock","src":"2945:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2962:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2965:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2955:6:13"},"nodeType":"YulFunctionCall","src":"2955:12:13"},"nodeType":"YulExpressionStatement","src":"2955:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2856:117:13"},{"body":{"nodeType":"YulBlock","src":"3027:54:13","statements":[{"nodeType":"YulAssignment","src":"3037:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3055:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3062:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3051:3:13"},"nodeType":"YulFunctionCall","src":"3051:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3071:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3067:3:13"},"nodeType":"YulFunctionCall","src":"3067:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3047:3:13"},"nodeType":"YulFunctionCall","src":"3047:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3037:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3010:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3020:6:13","type":""}],"src":"2979:102:13"},{"body":{"nodeType":"YulBlock","src":"3115:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3132:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3135:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3125:6:13"},"nodeType":"YulFunctionCall","src":"3125:88:13"},"nodeType":"YulExpressionStatement","src":"3125:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3229:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3232:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3222:6:13"},"nodeType":"YulFunctionCall","src":"3222:15:13"},"nodeType":"YulExpressionStatement","src":"3222:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3256:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3246:6:13"},"nodeType":"YulFunctionCall","src":"3246:15:13"},"nodeType":"YulExpressionStatement","src":"3246:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3087:180:13"},{"body":{"nodeType":"YulBlock","src":"3316:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3326:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3348:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3378:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3356:21:13"},"nodeType":"YulFunctionCall","src":"3356:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:13"},"nodeType":"YulFunctionCall","src":"3344:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3330:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3495:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3497:16:13"},"nodeType":"YulFunctionCall","src":"3497:18:13"},"nodeType":"YulExpressionStatement","src":"3497:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3438:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"3450:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3435:2:13"},"nodeType":"YulFunctionCall","src":"3435:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3474:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3486:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3471:2:13"},"nodeType":"YulFunctionCall","src":"3471:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3432:2:13"},"nodeType":"YulFunctionCall","src":"3432:62:13"},"nodeType":"YulIf","src":"3429:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3533:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3537:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3526:6:13"},"nodeType":"YulFunctionCall","src":"3526:22:13"},"nodeType":"YulExpressionStatement","src":"3526:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3302:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"3310:4:13","type":""}],"src":"3273:281:13"},{"body":{"nodeType":"YulBlock","src":"3601:88:13","statements":[{"nodeType":"YulAssignment","src":"3611:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3621:18:13"},"nodeType":"YulFunctionCall","src":"3621:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3611:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3670:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"3678:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3650:19:13"},"nodeType":"YulFunctionCall","src":"3650:33:13"},"nodeType":"YulExpressionStatement","src":"3650:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3585:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3594:6:13","type":""}],"src":"3560:129:13"},{"body":{"nodeType":"YulBlock","src":"3761:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"3866:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3868:16:13"},"nodeType":"YulFunctionCall","src":"3868:18:13"},"nodeType":"YulExpressionStatement","src":"3868:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3838:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3846:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3835:2:13"},"nodeType":"YulFunctionCall","src":"3835:30:13"},"nodeType":"YulIf","src":"3832:56:13"},{"nodeType":"YulAssignment","src":"3898:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3928:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3906:21:13"},"nodeType":"YulFunctionCall","src":"3906:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3898:4:13"}]},{"nodeType":"YulAssignment","src":"3972:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3984:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"3990:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3980:3:13"},"nodeType":"YulFunctionCall","src":"3980:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3972:4:13"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3745:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3756:4:13","type":""}],"src":"3695:307:13"},{"body":{"nodeType":"YulBlock","src":"4059:103:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4082:3:13"},{"name":"src","nodeType":"YulIdentifier","src":"4087:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4092:6:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4069:12:13"},"nodeType":"YulFunctionCall","src":"4069:30:13"},"nodeType":"YulExpressionStatement","src":"4069:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4140:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4145:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4136:3:13"},"nodeType":"YulFunctionCall","src":"4136:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"4154:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4129:6:13"},"nodeType":"YulFunctionCall","src":"4129:27:13"},"nodeType":"YulExpressionStatement","src":"4129:27:13"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4041:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4046:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"4051:6:13","type":""}],"src":"4008:154:13"},{"body":{"nodeType":"YulBlock","src":"4251:327:13","statements":[{"nodeType":"YulAssignment","src":"4261:74:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4327:6:13"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4286:40:13"},"nodeType":"YulFunctionCall","src":"4286:48:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4270:15:13"},"nodeType":"YulFunctionCall","src":"4270:65:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4261:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4351:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"4358:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4344:6:13"},"nodeType":"YulFunctionCall","src":"4344:21:13"},"nodeType":"YulExpressionStatement","src":"4344:21:13"},{"nodeType":"YulVariableDeclaration","src":"4374:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4389:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4396:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4385:3:13"},"nodeType":"YulFunctionCall","src":"4385:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4378:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4439:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4441:77:13"},"nodeType":"YulFunctionCall","src":"4441:79:13"},"nodeType":"YulExpressionStatement","src":"4441:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4420:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4425:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:13"},"nodeType":"YulFunctionCall","src":"4416:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"4434:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4413:2:13"},"nodeType":"YulFunctionCall","src":"4413:25:13"},"nodeType":"YulIf","src":"4410:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4555:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"4560:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4565:6:13"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"4531:23:13"},"nodeType":"YulFunctionCall","src":"4531:41:13"},"nodeType":"YulExpressionStatement","src":"4531:41:13"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4224:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"4229:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"4237:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4245:5:13","type":""}],"src":"4168:410:13"},{"body":{"nodeType":"YulBlock","src":"4658:277:13","statements":[{"body":{"nodeType":"YulBlock","src":"4707:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4709:77:13"},"nodeType":"YulFunctionCall","src":"4709:79:13"},"nodeType":"YulExpressionStatement","src":"4709:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4686:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4694:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4682:3:13"},"nodeType":"YulFunctionCall","src":"4682:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"4701:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4678:3:13"},"nodeType":"YulFunctionCall","src":"4678:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4671:6:13"},"nodeType":"YulFunctionCall","src":"4671:35:13"},"nodeType":"YulIf","src":"4668:122:13"},{"nodeType":"YulVariableDeclaration","src":"4799:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4826:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4813:12:13"},"nodeType":"YulFunctionCall","src":"4813:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4803:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4842:87:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4902:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4910:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4898:3:13"},"nodeType":"YulFunctionCall","src":"4898:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"4917:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"4925:3:13"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4851:46:13"},"nodeType":"YulFunctionCall","src":"4851:78:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4842:5:13"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4636:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"4644:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4652:5:13","type":""}],"src":"4597:338:13"},{"body":{"nodeType":"YulBlock","src":"5067:817:13","statements":[{"body":{"nodeType":"YulBlock","src":"5114:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5116:77:13"},"nodeType":"YulFunctionCall","src":"5116:79:13"},"nodeType":"YulExpressionStatement","src":"5116:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5088:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5097:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5084:3:13"},"nodeType":"YulFunctionCall","src":"5084:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5109:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5080:3:13"},"nodeType":"YulFunctionCall","src":"5080:33:13"},"nodeType":"YulIf","src":"5077:120:13"},{"nodeType":"YulBlock","src":"5207:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5222:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5236:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5226:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5251:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5286:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5297:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5282:3:13"},"nodeType":"YulFunctionCall","src":"5282:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5306:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5261:20:13"},"nodeType":"YulFunctionCall","src":"5261:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5251:6:13"}]}]},{"nodeType":"YulBlock","src":"5334:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5349:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5363:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5353:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5379:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5414:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5425:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5410:3:13"},"nodeType":"YulFunctionCall","src":"5410:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5434:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5389:20:13"},"nodeType":"YulFunctionCall","src":"5389:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5379:6:13"}]}]},{"nodeType":"YulBlock","src":"5462:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5477:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5491:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5481:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5507:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5542:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5553:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5538:3:13"},"nodeType":"YulFunctionCall","src":"5538:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5562:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5517:20:13"},"nodeType":"YulFunctionCall","src":"5517:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5507:6:13"}]}]},{"nodeType":"YulBlock","src":"5590:287:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5605:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5636:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5647:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5632:3:13"},"nodeType":"YulFunctionCall","src":"5632:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5619:12:13"},"nodeType":"YulFunctionCall","src":"5619:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5609:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5698:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5700:77:13"},"nodeType":"YulFunctionCall","src":"5700:79:13"},"nodeType":"YulExpressionStatement","src":"5700:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5670:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5678:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5667:2:13"},"nodeType":"YulFunctionCall","src":"5667:30:13"},"nodeType":"YulIf","src":"5664:117:13"},{"nodeType":"YulAssignment","src":"5795:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5839:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5850:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5835:3:13"},"nodeType":"YulFunctionCall","src":"5835:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5859:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5805:29:13"},"nodeType":"YulFunctionCall","src":"5805:62:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5795:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5013:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5024:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5036:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5044:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5052:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5060:6:13","type":""}],"src":"4941:943:13"},{"body":{"nodeType":"YulBlock","src":"5953:52:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5970:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5992:5:13"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"5975:16:13"},"nodeType":"YulFunctionCall","src":"5975:23:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5963:6:13"},"nodeType":"YulFunctionCall","src":"5963:36:13"},"nodeType":"YulExpressionStatement","src":"5963:36:13"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5941:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5948:3:13","type":""}],"src":"5890:115:13"},{"body":{"nodeType":"YulBlock","src":"6107:122:13","statements":[{"nodeType":"YulAssignment","src":"6117:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6129:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6140:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6125:3:13"},"nodeType":"YulFunctionCall","src":"6125:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6117:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6195:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6208:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6219:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6204:3:13"},"nodeType":"YulFunctionCall","src":"6204:17:13"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"6153:41:13"},"nodeType":"YulFunctionCall","src":"6153:69:13"},"nodeType":"YulExpressionStatement","src":"6153:69:13"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6079:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6091:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6102:4:13","type":""}],"src":"6011:218:13"},{"body":{"nodeType":"YulBlock","src":"6280:32:13","statements":[{"nodeType":"YulAssignment","src":"6290:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"6301:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6290:7:13"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6262:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6272:7:13","type":""}],"src":"6235:77:13"},{"body":{"nodeType":"YulBlock","src":"6383:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6400:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6423:5:13"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6405:17:13"},"nodeType":"YulFunctionCall","src":"6405:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6393:6:13"},"nodeType":"YulFunctionCall","src":"6393:37:13"},"nodeType":"YulExpressionStatement","src":"6393:37:13"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6371:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6378:3:13","type":""}],"src":"6318:118:13"},{"body":{"nodeType":"YulBlock","src":"6540:124:13","statements":[{"nodeType":"YulAssignment","src":"6550:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6562:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6573:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6558:3:13"},"nodeType":"YulFunctionCall","src":"6558:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6550:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6630:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6643:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6654:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6639:3:13"},"nodeType":"YulFunctionCall","src":"6639:17:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6586:43:13"},"nodeType":"YulFunctionCall","src":"6586:71:13"},"nodeType":"YulExpressionStatement","src":"6586:71:13"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6512:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6524:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6535:4:13","type":""}],"src":"6442:222:13"},{"body":{"nodeType":"YulBlock","src":"6735:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6752:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6775:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6757:17:13"},"nodeType":"YulFunctionCall","src":"6757:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6745:6:13"},"nodeType":"YulFunctionCall","src":"6745:37:13"},"nodeType":"YulExpressionStatement","src":"6745:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6723:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6730:3:13","type":""}],"src":"6670:118:13"},{"body":{"nodeType":"YulBlock","src":"6892:124:13","statements":[{"nodeType":"YulAssignment","src":"6902:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6914:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6925:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6910:3:13"},"nodeType":"YulFunctionCall","src":"6910:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6902:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6982:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6995:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7006:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6991:3:13"},"nodeType":"YulFunctionCall","src":"6991:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6938:43:13"},"nodeType":"YulFunctionCall","src":"6938:71:13"},"nodeType":"YulExpressionStatement","src":"6938:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6864:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6876:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6887:4:13","type":""}],"src":"6794:222:13"},{"body":{"nodeType":"YulBlock","src":"7111:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7128:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7131:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7121:6:13"},"nodeType":"YulFunctionCall","src":"7121:12:13"},"nodeType":"YulExpressionStatement","src":"7121:12:13"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"7022:117:13"},{"body":{"nodeType":"YulBlock","src":"7234:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7251:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7254:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7244:6:13"},"nodeType":"YulFunctionCall","src":"7244:12:13"},"nodeType":"YulExpressionStatement","src":"7244:12:13"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7145:117:13"},{"body":{"nodeType":"YulBlock","src":"7375:478:13","statements":[{"body":{"nodeType":"YulBlock","src":"7424:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7426:77:13"},"nodeType":"YulFunctionCall","src":"7426:79:13"},"nodeType":"YulExpressionStatement","src":"7426:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7403:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7411:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7399:3:13"},"nodeType":"YulFunctionCall","src":"7399:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"7418:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7395:3:13"},"nodeType":"YulFunctionCall","src":"7395:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7388:6:13"},"nodeType":"YulFunctionCall","src":"7388:35:13"},"nodeType":"YulIf","src":"7385:122:13"},{"nodeType":"YulAssignment","src":"7516:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7539:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7526:12:13"},"nodeType":"YulFunctionCall","src":"7526:20:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7516:6:13"}]},{"body":{"nodeType":"YulBlock","src":"7589:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"7591:77:13"},"nodeType":"YulFunctionCall","src":"7591:79:13"},"nodeType":"YulExpressionStatement","src":"7591:79:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7561:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7569:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7558:2:13"},"nodeType":"YulFunctionCall","src":"7558:30:13"},"nodeType":"YulIf","src":"7555:117:13"},{"nodeType":"YulAssignment","src":"7681:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7697:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7705:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7693:3:13"},"nodeType":"YulFunctionCall","src":"7693:17:13"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7681:8:13"}]},{"body":{"nodeType":"YulBlock","src":"7764:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7766:77:13"},"nodeType":"YulFunctionCall","src":"7766:79:13"},"nodeType":"YulExpressionStatement","src":"7766:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7729:8:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7743:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7751:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7739:3:13"},"nodeType":"YulFunctionCall","src":"7739:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7725:3:13"},"nodeType":"YulFunctionCall","src":"7725:32:13"},{"name":"end","nodeType":"YulIdentifier","src":"7759:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7722:2:13"},"nodeType":"YulFunctionCall","src":"7722:41:13"},"nodeType":"YulIf","src":"7719:128:13"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7342:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"7350:3:13","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"7358:8:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"7368:6:13","type":""}],"src":"7285:568:13"},{"body":{"nodeType":"YulBlock","src":"7960:458:13","statements":[{"body":{"nodeType":"YulBlock","src":"8006:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8008:77:13"},"nodeType":"YulFunctionCall","src":"8008:79:13"},"nodeType":"YulExpressionStatement","src":"8008:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7981:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7990:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7977:3:13"},"nodeType":"YulFunctionCall","src":"7977:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"8002:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7973:3:13"},"nodeType":"YulFunctionCall","src":"7973:32:13"},"nodeType":"YulIf","src":"7970:119:13"},{"nodeType":"YulBlock","src":"8099:312:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8114:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8145:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8156:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8141:3:13"},"nodeType":"YulFunctionCall","src":"8141:17:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8128:12:13"},"nodeType":"YulFunctionCall","src":"8128:31:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8118:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8206:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8208:77:13"},"nodeType":"YulFunctionCall","src":"8208:79:13"},"nodeType":"YulExpressionStatement","src":"8208:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8178:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8186:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8175:2:13"},"nodeType":"YulFunctionCall","src":"8175:30:13"},"nodeType":"YulIf","src":"8172:117:13"},{"nodeType":"YulAssignment","src":"8303:98:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8373:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"8384:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8369:3:13"},"nodeType":"YulFunctionCall","src":"8369:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8393:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"8321:47:13"},"nodeType":"YulFunctionCall","src":"8321:80:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8303:6:13"},{"name":"value1","nodeType":"YulIdentifier","src":"8311:6:13"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7922:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7933:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7945:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7953:6:13","type":""}],"src":"7859:559:13"},{"body":{"nodeType":"YulBlock","src":"8506:229:13","statements":[{"body":{"nodeType":"YulBlock","src":"8611:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8613:16:13"},"nodeType":"YulFunctionCall","src":"8613:18:13"},"nodeType":"YulExpressionStatement","src":"8613:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8583:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8591:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8580:2:13"},"nodeType":"YulFunctionCall","src":"8580:30:13"},"nodeType":"YulIf","src":"8577:56:13"},{"nodeType":"YulAssignment","src":"8643:25:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8655:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8663:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8651:3:13"},"nodeType":"YulFunctionCall","src":"8651:17:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8643:4:13"}]},{"nodeType":"YulAssignment","src":"8705:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8717:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"8723:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8713:3:13"},"nodeType":"YulFunctionCall","src":"8713:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8705:4:13"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8490:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8501:4:13","type":""}],"src":"8424:311:13"},{"body":{"nodeType":"YulBlock","src":"8860:608:13","statements":[{"nodeType":"YulAssignment","src":"8870:90:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8952:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8895:56:13"},"nodeType":"YulFunctionCall","src":"8895:64:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8879:15:13"},"nodeType":"YulFunctionCall","src":"8879:81:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8870:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"8969:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"8980:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8973:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9002:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"9009:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8995:6:13"},"nodeType":"YulFunctionCall","src":"8995:21:13"},"nodeType":"YulExpressionStatement","src":"8995:21:13"},{"nodeType":"YulAssignment","src":"9025:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9036:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"9043:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9032:3:13"},"nodeType":"YulFunctionCall","src":"9032:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9025:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"9058:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9076:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9088:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9096:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9084:3:13"},"nodeType":"YulFunctionCall","src":"9084:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9072:3:13"},"nodeType":"YulFunctionCall","src":"9072:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9062:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"9130:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9144:77:13"},"nodeType":"YulFunctionCall","src":"9144:79:13"},"nodeType":"YulExpressionStatement","src":"9144:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9117:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"9125:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9114:2:13"},"nodeType":"YulFunctionCall","src":"9114:15:13"},"nodeType":"YulIf","src":"9111:122:13"},{"body":{"nodeType":"YulBlock","src":"9318:144:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9333:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"9351:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"9337:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9375:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"9401:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"9413:3:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9380:20:13"},"nodeType":"YulFunctionCall","src":"9380:37:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9368:6:13"},"nodeType":"YulFunctionCall","src":"9368:50:13"},"nodeType":"YulExpressionStatement","src":"9368:50:13"},{"nodeType":"YulAssignment","src":"9431:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9442:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9447:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9438:3:13"},"nodeType":"YulFunctionCall","src":"9438:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9431:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9271:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9276:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9268:2:13"},"nodeType":"YulFunctionCall","src":"9268:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9284:25:13","statements":[{"nodeType":"YulAssignment","src":"9286:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9297:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9302:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9293:3:13"},"nodeType":"YulFunctionCall","src":"9293:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9286:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"9246:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9248:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"9259:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9252:3:13","type":""}]}]},"src":"9242:220:13"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8830:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"8838:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"8846:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8854:5:13","type":""}],"src":"8758:710:13"},{"body":{"nodeType":"YulBlock","src":"9568:293:13","statements":[{"body":{"nodeType":"YulBlock","src":"9617:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9619:77:13"},"nodeType":"YulFunctionCall","src":"9619:79:13"},"nodeType":"YulExpressionStatement","src":"9619:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9596:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9604:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9592:3:13"},"nodeType":"YulFunctionCall","src":"9592:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"9611:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9588:3:13"},"nodeType":"YulFunctionCall","src":"9588:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9581:6:13"},"nodeType":"YulFunctionCall","src":"9581:35:13"},"nodeType":"YulIf","src":"9578:122:13"},{"nodeType":"YulVariableDeclaration","src":"9709:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9736:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9723:12:13"},"nodeType":"YulFunctionCall","src":"9723:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9713:6:13","type":""}]},{"nodeType":"YulAssignment","src":"9752:103:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9828:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9836:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9824:3:13"},"nodeType":"YulFunctionCall","src":"9824:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"9843:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"9851:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9761:62:13"},"nodeType":"YulFunctionCall","src":"9761:94:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9752:5:13"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9546:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"9554:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9562:5:13","type":""}],"src":"9491:370:13"},{"body":{"nodeType":"YulBlock","src":"10060:1316:13","statements":[{"body":{"nodeType":"YulBlock","src":"10107:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10109:77:13"},"nodeType":"YulFunctionCall","src":"10109:79:13"},"nodeType":"YulExpressionStatement","src":"10109:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10081:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10090:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10077:3:13"},"nodeType":"YulFunctionCall","src":"10077:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"10102:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10073:3:13"},"nodeType":"YulFunctionCall","src":"10073:33:13"},"nodeType":"YulIf","src":"10070:120:13"},{"nodeType":"YulBlock","src":"10200:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10215:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"10229:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10219:6:13","type":""}]},{"nodeType":"YulAssignment","src":"10244:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10279:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10290:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10275:3:13"},"nodeType":"YulFunctionCall","src":"10275:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10299:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10254:20:13"},"nodeType":"YulFunctionCall","src":"10254:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10244:6:13"}]}]},{"nodeType":"YulBlock","src":"10327:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10342:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"10356:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10346:6:13","type":""}]},{"nodeType":"YulAssignment","src":"10372:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10407:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10418:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10403:3:13"},"nodeType":"YulFunctionCall","src":"10403:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10427:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10382:20:13"},"nodeType":"YulFunctionCall","src":"10382:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10372:6:13"}]}]},{"nodeType":"YulBlock","src":"10455:303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10470:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10501:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10512:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10497:3:13"},"nodeType":"YulFunctionCall","src":"10497:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10484:12:13"},"nodeType":"YulFunctionCall","src":"10484:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10474:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10563:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10565:77:13"},"nodeType":"YulFunctionCall","src":"10565:79:13"},"nodeType":"YulExpressionStatement","src":"10565:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10535:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10543:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10532:2:13"},"nodeType":"YulFunctionCall","src":"10532:30:13"},"nodeType":"YulIf","src":"10529:117:13"},{"nodeType":"YulAssignment","src":"10660:88:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10720:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10731:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10716:3:13"},"nodeType":"YulFunctionCall","src":"10716:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10740:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10670:45:13"},"nodeType":"YulFunctionCall","src":"10670:78:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10660:6:13"}]}]},{"nodeType":"YulBlock","src":"10768:303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10783:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10814:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10825:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10810:3:13"},"nodeType":"YulFunctionCall","src":"10810:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10797:12:13"},"nodeType":"YulFunctionCall","src":"10797:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10787:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10876:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10878:77:13"},"nodeType":"YulFunctionCall","src":"10878:79:13"},"nodeType":"YulExpressionStatement","src":"10878:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10848:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10856:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10845:2:13"},"nodeType":"YulFunctionCall","src":"10845:30:13"},"nodeType":"YulIf","src":"10842:117:13"},{"nodeType":"YulAssignment","src":"10973:88:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11033:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"11044:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11029:3:13"},"nodeType":"YulFunctionCall","src":"11029:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11053:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10983:45:13"},"nodeType":"YulFunctionCall","src":"10983:78:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10973:6:13"}]}]},{"nodeType":"YulBlock","src":"11081:288:13","statements":[{"nodeType":"YulVariableDeclaration","src":"11096:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11127:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11138:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11123:3:13"},"nodeType":"YulFunctionCall","src":"11123:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11110:12:13"},"nodeType":"YulFunctionCall","src":"11110:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11100:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"11190:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11192:77:13"},"nodeType":"YulFunctionCall","src":"11192:79:13"},"nodeType":"YulExpressionStatement","src":"11192:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11162:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11170:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11159:2:13"},"nodeType":"YulFunctionCall","src":"11159:30:13"},"nodeType":"YulIf","src":"11156:117:13"},{"nodeType":"YulAssignment","src":"11287:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11331:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"11342:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11327:3:13"},"nodeType":"YulFunctionCall","src":"11327:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11351:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11297:29:13"},"nodeType":"YulFunctionCall","src":"11297:62:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11287:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9998:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10009:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10021:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10029:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10037:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10045:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10053:6:13","type":""}],"src":"9867:1509:13"},{"body":{"nodeType":"YulBlock","src":"11525:946:13","statements":[{"body":{"nodeType":"YulBlock","src":"11572:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11574:77:13"},"nodeType":"YulFunctionCall","src":"11574:79:13"},"nodeType":"YulExpressionStatement","src":"11574:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11546:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"11555:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11542:3:13"},"nodeType":"YulFunctionCall","src":"11542:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"11567:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11538:3:13"},"nodeType":"YulFunctionCall","src":"11538:33:13"},"nodeType":"YulIf","src":"11535:120:13"},{"nodeType":"YulBlock","src":"11665:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"11680:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"11694:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11684:6:13","type":""}]},{"nodeType":"YulAssignment","src":"11709:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11744:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"11755:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11740:3:13"},"nodeType":"YulFunctionCall","src":"11740:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11764:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11719:20:13"},"nodeType":"YulFunctionCall","src":"11719:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11709:6:13"}]}]},{"nodeType":"YulBlock","src":"11792:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"11807:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"11821:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11811:6:13","type":""}]},{"nodeType":"YulAssignment","src":"11837:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11872:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"11883:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11868:3:13"},"nodeType":"YulFunctionCall","src":"11868:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11892:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11847:20:13"},"nodeType":"YulFunctionCall","src":"11847:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11837:6:13"}]}]},{"nodeType":"YulBlock","src":"11920:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"11935:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"11949:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11939:6:13","type":""}]},{"nodeType":"YulAssignment","src":"11965:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12000:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"12011:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11996:3:13"},"nodeType":"YulFunctionCall","src":"11996:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12020:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11975:20:13"},"nodeType":"YulFunctionCall","src":"11975:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11965:6:13"}]}]},{"nodeType":"YulBlock","src":"12048:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"12063:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"12077:2:13","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12067:6:13","type":""}]},{"nodeType":"YulAssignment","src":"12093:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12128:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"12139:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12124:3:13"},"nodeType":"YulFunctionCall","src":"12124:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12148:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12103:20:13"},"nodeType":"YulFunctionCall","src":"12103:53:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12093:6:13"}]}]},{"nodeType":"YulBlock","src":"12176:288:13","statements":[{"nodeType":"YulVariableDeclaration","src":"12191:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12222:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12233:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12218:3:13"},"nodeType":"YulFunctionCall","src":"12218:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12205:12:13"},"nodeType":"YulFunctionCall","src":"12205:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12195:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"12285:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12287:77:13"},"nodeType":"YulFunctionCall","src":"12287:79:13"},"nodeType":"YulExpressionStatement","src":"12287:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12257:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12265:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12254:2:13"},"nodeType":"YulFunctionCall","src":"12254:30:13"},"nodeType":"YulIf","src":"12251:117:13"},{"nodeType":"YulAssignment","src":"12382:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12426:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"12437:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12422:3:13"},"nodeType":"YulFunctionCall","src":"12422:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12446:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12392:29:13"},"nodeType":"YulFunctionCall","src":"12392:62:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12382:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11463:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11474:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11486:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11494:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11502:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11510:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11518:6:13","type":""}],"src":"11382:1089:13"},{"body":{"nodeType":"YulBlock","src":"12573:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12590:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"12595:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12583:6:13"},"nodeType":"YulFunctionCall","src":"12583:19:13"},"nodeType":"YulExpressionStatement","src":"12583:19:13"},{"nodeType":"YulAssignment","src":"12611:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12630:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12635:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12626:3:13"},"nodeType":"YulFunctionCall","src":"12626:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12611:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12545:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"12550:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12561:11:13","type":""}],"src":"12477:169:13"},{"body":{"nodeType":"YulBlock","src":"12758:57:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12780:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12788:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12776:3:13"},"nodeType":"YulFunctionCall","src":"12776:14:13"},{"hexValue":"436c61696d6564204552433230","kind":"string","nodeType":"YulLiteral","src":"12792:15:13","type":"","value":"Claimed ERC20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12769:6:13"},"nodeType":"YulFunctionCall","src":"12769:39:13"},"nodeType":"YulExpressionStatement","src":"12769:39:13"}]},"name":"store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12750:6:13","type":""}],"src":"12652:163:13"},{"body":{"nodeType":"YulBlock","src":"12967:220:13","statements":[{"nodeType":"YulAssignment","src":"12977:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13043:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13048:2:13","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12984:58:13"},"nodeType":"YulFunctionCall","src":"12984:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12977:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13149:3:13"}],"functionName":{"name":"store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613","nodeType":"YulIdentifier","src":"13060:88:13"},"nodeType":"YulFunctionCall","src":"13060:93:13"},"nodeType":"YulExpressionStatement","src":"13060:93:13"},{"nodeType":"YulAssignment","src":"13162:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13173:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13178:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13169:3:13"},"nodeType":"YulFunctionCall","src":"13169:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13162:3:13"}]}]},"name":"abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12955:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12963:3:13","type":""}],"src":"12821:366:13"},{"body":{"nodeType":"YulBlock","src":"13364:248:13","statements":[{"nodeType":"YulAssignment","src":"13374:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13386:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13397:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13382:3:13"},"nodeType":"YulFunctionCall","src":"13382:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13374:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13421:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13432:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13417:3:13"},"nodeType":"YulFunctionCall","src":"13417:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13440:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"13446:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13436:3:13"},"nodeType":"YulFunctionCall","src":"13436:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13410:6:13"},"nodeType":"YulFunctionCall","src":"13410:47:13"},"nodeType":"YulExpressionStatement","src":"13410:47:13"},{"nodeType":"YulAssignment","src":"13466:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13600:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13474:124:13"},"nodeType":"YulFunctionCall","src":"13474:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13466:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13344:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13359:4:13","type":""}],"src":"13193:419:13"},{"body":{"nodeType":"YulBlock","src":"13660:52:13","statements":[{"nodeType":"YulAssignment","src":"13670:35:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13695:2:13","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"13699:5:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13691:3:13"},"nodeType":"YulFunctionCall","src":"13691:14:13"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13670:8:13"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13641:5:13","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13651:8:13","type":""}],"src":"13618:94:13"},{"body":{"nodeType":"YulBlock","src":"13765:47:13","statements":[{"nodeType":"YulAssignment","src":"13775:31:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13800:5:13"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"13786:13:13"},"nodeType":"YulFunctionCall","src":"13786:20:13"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"13775:7:13"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13747:5:13","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"13757:7:13","type":""}],"src":"13718:94:13"},{"body":{"nodeType":"YulBlock","src":"13865:53:13","statements":[{"nodeType":"YulAssignment","src":"13875:37:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13906:5:13"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"13886:19:13"},"nodeType":"YulFunctionCall","src":"13886:26:13"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"13875:7:13"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13847:5:13","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"13857:7:13","type":""}],"src":"13818:100:13"},{"body":{"nodeType":"YulBlock","src":"14007:74:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14024:3:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14067:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14049:17:13"},"nodeType":"YulFunctionCall","src":"14049:24:13"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"14029:19:13"},"nodeType":"YulFunctionCall","src":"14029:45:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14017:6:13"},"nodeType":"YulFunctionCall","src":"14017:58:13"},"nodeType":"YulExpressionStatement","src":"14017:58:13"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13995:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14002:3:13","type":""}],"src":"13924:157:13"},{"body":{"nodeType":"YulBlock","src":"14203:140:13","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14276:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"14285:3:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14214:61:13"},"nodeType":"YulFunctionCall","src":"14214:75:13"},"nodeType":"YulExpressionStatement","src":"14214:75:13"},{"nodeType":"YulAssignment","src":"14298:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14309:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14314:2:13","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14305:3:13"},"nodeType":"YulFunctionCall","src":"14305:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14298:3:13"}]},{"nodeType":"YulAssignment","src":"14327:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"14334:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14327:3:13"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14182:3:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14188:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14199:3:13","type":""}],"src":"14087:256:13"},{"body":{"nodeType":"YulBlock","src":"14475:206:13","statements":[{"nodeType":"YulAssignment","src":"14485:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14497:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14508:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14493:3:13"},"nodeType":"YulFunctionCall","src":"14493:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14485:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14565:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14578:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14589:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14574:3:13"},"nodeType":"YulFunctionCall","src":"14574:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14521:43:13"},"nodeType":"YulFunctionCall","src":"14521:71:13"},"nodeType":"YulExpressionStatement","src":"14521:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14646:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14659:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14670:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14655:3:13"},"nodeType":"YulFunctionCall","src":"14655:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14602:43:13"},"nodeType":"YulFunctionCall","src":"14602:72:13"},"nodeType":"YulExpressionStatement","src":"14602:72:13"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14439:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14451:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14459:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14470:4:13","type":""}],"src":"14349:332:13"},{"body":{"nodeType":"YulBlock","src":"14727:76:13","statements":[{"body":{"nodeType":"YulBlock","src":"14781:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14790:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14793:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14783:6:13"},"nodeType":"YulFunctionCall","src":"14783:12:13"},"nodeType":"YulExpressionStatement","src":"14783:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14750:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14772:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"14757:14:13"},"nodeType":"YulFunctionCall","src":"14757:21:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14747:2:13"},"nodeType":"YulFunctionCall","src":"14747:32:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14740:6:13"},"nodeType":"YulFunctionCall","src":"14740:40:13"},"nodeType":"YulIf","src":"14737:60:13"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14720:5:13","type":""}],"src":"14687:116:13"},{"body":{"nodeType":"YulBlock","src":"14869:77:13","statements":[{"nodeType":"YulAssignment","src":"14879:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14894:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14888:5:13"},"nodeType":"YulFunctionCall","src":"14888:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14879:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14934:5:13"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"14910:23:13"},"nodeType":"YulFunctionCall","src":"14910:30:13"},"nodeType":"YulExpressionStatement","src":"14910:30:13"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14847:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"14855:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14863:5:13","type":""}],"src":"14809:137:13"},{"body":{"nodeType":"YulBlock","src":"15026:271:13","statements":[{"body":{"nodeType":"YulBlock","src":"15072:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15074:77:13"},"nodeType":"YulFunctionCall","src":"15074:79:13"},"nodeType":"YulExpressionStatement","src":"15074:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15047:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"15056:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15043:3:13"},"nodeType":"YulFunctionCall","src":"15043:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"15068:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15039:3:13"},"nodeType":"YulFunctionCall","src":"15039:32:13"},"nodeType":"YulIf","src":"15036:119:13"},{"nodeType":"YulBlock","src":"15165:125:13","statements":[{"nodeType":"YulVariableDeclaration","src":"15180:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"15194:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15184:6:13","type":""}]},{"nodeType":"YulAssignment","src":"15209:71:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15252:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"15263:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15248:3:13"},"nodeType":"YulFunctionCall","src":"15248:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15272:7:13"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"15219:28:13"},"nodeType":"YulFunctionCall","src":"15219:61:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15209:6:13"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14996:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15007:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15019:6:13","type":""}],"src":"14952:345:13"},{"body":{"nodeType":"YulBlock","src":"15409:59:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15431:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"15439:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15427:3:13"},"nodeType":"YulFunctionCall","src":"15427:14:13"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"15443:17:13","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15420:6:13"},"nodeType":"YulFunctionCall","src":"15420:41:13"},"nodeType":"YulExpressionStatement","src":"15420:41:13"}]},"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15401:6:13","type":""}],"src":"15303:165:13"},{"body":{"nodeType":"YulBlock","src":"15620:220:13","statements":[{"nodeType":"YulAssignment","src":"15630:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15696:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15701:2:13","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15637:58:13"},"nodeType":"YulFunctionCall","src":"15637:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15630:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15802:3:13"}],"functionName":{"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nodeType":"YulIdentifier","src":"15713:88:13"},"nodeType":"YulFunctionCall","src":"15713:93:13"},"nodeType":"YulExpressionStatement","src":"15713:93:13"},{"nodeType":"YulAssignment","src":"15815:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15826:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15831:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15822:3:13"},"nodeType":"YulFunctionCall","src":"15822:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15815:3:13"}]}]},"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15608:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15616:3:13","type":""}],"src":"15474:366:13"},{"body":{"nodeType":"YulBlock","src":"16017:248:13","statements":[{"nodeType":"YulAssignment","src":"16027:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16039:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16050:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16035:3:13"},"nodeType":"YulFunctionCall","src":"16035:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16027:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16074:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16085:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16070:3:13"},"nodeType":"YulFunctionCall","src":"16070:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16093:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"16099:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16089:3:13"},"nodeType":"YulFunctionCall","src":"16089:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16063:6:13"},"nodeType":"YulFunctionCall","src":"16063:47:13"},"nodeType":"YulExpressionStatement","src":"16063:47:13"},{"nodeType":"YulAssignment","src":"16119:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16253:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16127:124:13"},"nodeType":"YulFunctionCall","src":"16127:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16119:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15997:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16012:4:13","type":""}],"src":"15846:419:13"},{"body":{"nodeType":"YulBlock","src":"16299:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16316:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16319:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16309:6:13"},"nodeType":"YulFunctionCall","src":"16309:88:13"},"nodeType":"YulExpressionStatement","src":"16309:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16413:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16416:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16406:6:13"},"nodeType":"YulFunctionCall","src":"16406:15:13"},"nodeType":"YulExpressionStatement","src":"16406:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16437:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16440:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16430:6:13"},"nodeType":"YulFunctionCall","src":"16430:15:13"},"nodeType":"YulExpressionStatement","src":"16430:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16271:180:13"},{"body":{"nodeType":"YulBlock","src":"16485:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16502:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16505:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16495:6:13"},"nodeType":"YulFunctionCall","src":"16495:88:13"},"nodeType":"YulExpressionStatement","src":"16495:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16599:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16602:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16592:6:13"},"nodeType":"YulFunctionCall","src":"16592:15:13"},"nodeType":"YulExpressionStatement","src":"16592:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16623:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16626:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16616:6:13"},"nodeType":"YulFunctionCall","src":"16616:15:13"},"nodeType":"YulExpressionStatement","src":"16616:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16457:180:13"},{"body":{"nodeType":"YulBlock","src":"16686:190:13","statements":[{"nodeType":"YulAssignment","src":"16696:33:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16723:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16705:17:13"},"nodeType":"YulFunctionCall","src":"16705:24:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16696:5:13"}]},{"body":{"nodeType":"YulBlock","src":"16819:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16821:16:13"},"nodeType":"YulFunctionCall","src":"16821:18:13"},"nodeType":"YulExpressionStatement","src":"16821:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16744:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"16751:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16741:2:13"},"nodeType":"YulFunctionCall","src":"16741:77:13"},"nodeType":"YulIf","src":"16738:103:13"},{"nodeType":"YulAssignment","src":"16850:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16861:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"16868:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16857:3:13"},"nodeType":"YulFunctionCall","src":"16857:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16850:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16672:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16682:3:13","type":""}],"src":"16643:233:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613(memPtr) {\n\n        mstore(add(memPtr, 0), \"Claimed ERC20\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1452":[{"length":32,"start":755},{"length":32,"start":1145}],"1454":[{"length":32,"start":1489}],"1456":[{"length":32,"start":657}],"1458":[{"length":32,"start":713},{"length":32,"start":1033}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80639d143e8e116100665780639d143e8e1461015d578063b391c5081461017b578063bc197c8114610197578063e9adc770146101c7578063f23a6e61146101e55761009e565b806301ffc9a7146100a357806309c33c67146100d3578063150b7a02146100f15780632eb4a7ab1461012157806373f95d6b1461013f575b600080fd5b6100bd60048036038101906100b8919061078d565b610215565b6040516100ca91906107d5565b60405180910390f35b6100db61028f565b6040516100e89190610831565b60405180910390f35b61010b600480360381019061010691906109f4565b6102b3565b6040516101189190610a86565b60405180910390f35b6101296102c7565b6040516101369190610aba565b60405180910390f35b6101476102eb565b6040516101549190610ae4565b60405180910390f35b6101656102f1565b6040516101729190610831565b60405180910390f35b61019560048036038101906101909190610b5f565b610315565b005b6101b160048036038101906101ac9190610c6f565b6105ba565b6040516101be9190610a86565b60405180910390f35b6101cf6105cf565b6040516101dc9190610831565b60405180910390f35b6101ff60048036038101906101fa9190610d3e565b6105f3565b60405161020c9190610a86565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610288575061028782610608565b5b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600063150b7a0260e01b9050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e90610e32565b60405180910390fd5b6000336040516020016103aa9190610e9a565b60405160208183030381529060405280519060200120905061042e838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f000000000000000000000000000000000000000000000000000000000000000083610672565b6104775760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336000546040518363ffffffff1660e01b81526004016104d4929190610eb5565b602060405180830381600087803b1580156104ee57600080fd5b505af1158015610502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105269190610f0a565b610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90610f83565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fc738b2de230010873d5b81370b4c10250e8eaec27550f0c43faf979e093090836000546040516105ad9190610ae4565b60405180910390a2505050565b600063bc197c8160e01b905095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008261067f8584610689565b1490509392505050565b60008082905060005b84518110156106d4576106bf828683815181106106b2576106b1610fa3565b5b60200260200101516106df565b915080806106cc90611001565b915050610692565b508091505092915050565b60008183106106f7576106f2828461070a565b610702565b610701838361070a565b5b905092915050565b600082600052816020526040600020905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61076a81610735565b811461077557600080fd5b50565b60008135905061078781610761565b92915050565b6000602082840312156107a3576107a261072b565b5b60006107b184828501610778565b91505092915050565b60008115159050919050565b6107cf816107ba565b82525050565b60006020820190506107ea60008301846107c6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081b826107f0565b9050919050565b61082b81610810565b82525050565b60006020820190506108466000830184610822565b92915050565b61085581610810565b811461086057600080fd5b50565b6000813590506108728161084c565b92915050565b6000819050919050565b61088b81610878565b811461089657600080fd5b50565b6000813590506108a881610882565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610901826108b8565b810181811067ffffffffffffffff821117156109205761091f6108c9565b5b80604052505050565b6000610933610721565b905061093f82826108f8565b919050565b600067ffffffffffffffff82111561095f5761095e6108c9565b5b610968826108b8565b9050602081019050919050565b82818337600083830152505050565b600061099761099284610944565b610929565b9050828152602081018484840111156109b3576109b26108b3565b5b6109be848285610975565b509392505050565b600082601f8301126109db576109da6108ae565b5b81356109eb848260208601610984565b91505092915050565b60008060008060808587031215610a0e57610a0d61072b565b5b6000610a1c87828801610863565b9450506020610a2d87828801610863565b9350506040610a3e87828801610899565b925050606085013567ffffffffffffffff811115610a5f57610a5e610730565b5b610a6b878288016109c6565b91505092959194509250565b610a8081610735565b82525050565b6000602082019050610a9b6000830184610a77565b92915050565b6000819050919050565b610ab481610aa1565b82525050565b6000602082019050610acf6000830184610aab565b92915050565b610ade81610878565b82525050565b6000602082019050610af96000830184610ad5565b92915050565b600080fd5b600080fd5b60008083601f840112610b1f57610b1e6108ae565b5b8235905067ffffffffffffffff811115610b3c57610b3b610aff565b5b602083019150836020820283011115610b5857610b57610b04565b5b9250929050565b60008060208385031215610b7657610b7561072b565b5b600083013567ffffffffffffffff811115610b9457610b93610730565b5b610ba085828601610b09565b92509250509250929050565b600067ffffffffffffffff821115610bc757610bc66108c9565b5b602082029050602081019050919050565b6000610beb610be684610bac565b610929565b90508083825260208201905060208402830185811115610c0e57610c0d610b04565b5b835b81811015610c375780610c238882610899565b845260208401935050602081019050610c10565b5050509392505050565b600082601f830112610c5657610c556108ae565b5b8135610c66848260208601610bd8565b91505092915050565b600080600080600060a08688031215610c8b57610c8a61072b565b5b6000610c9988828901610863565b9550506020610caa88828901610863565b945050604086013567ffffffffffffffff811115610ccb57610cca610730565b5b610cd788828901610c41565b935050606086013567ffffffffffffffff811115610cf857610cf7610730565b5b610d0488828901610c41565b925050608086013567ffffffffffffffff811115610d2557610d24610730565b5b610d31888289016109c6565b9150509295509295909350565b600080600080600060a08688031215610d5a57610d5961072b565b5b6000610d6888828901610863565b9550506020610d7988828901610863565b9450506040610d8a88828901610899565b9350506060610d9b88828901610899565b925050608086013567ffffffffffffffff811115610dbc57610dbb610730565b5b610dc8888289016109c6565b9150509295509295909350565b600082825260208201905092915050565b7f436c61696d656420455243323000000000000000000000000000000000000000600082015250565b6000610e1c600d83610dd5565b9150610e2782610de6565b602082019050919050565b60006020820190508181036000830152610e4b81610e0f565b9050919050565b60008160601b9050919050565b6000610e6a82610e52565b9050919050565b6000610e7c82610e5f565b9050919050565b610e94610e8f82610810565b610e71565b82525050565b6000610ea68284610e83565b60148201915081905092915050565b6000604082019050610eca6000830185610822565b610ed76020830184610ad5565b9392505050565b610ee7816107ba565b8114610ef257600080fd5b50565b600081519050610f0481610ede565b92915050565b600060208284031215610f2057610f1f61072b565b5b6000610f2e84828501610ef5565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610f6d600f83610dd5565b9150610f7882610f37565b602082019050919050565b60006020820190508181036000830152610f9c81610f60565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100c82610878565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561103f5761103e610fd2565b5b60018201905091905056fea26469706673582212202c46bae5a5a5e089f39343d53885a6ebe7f22e2cc6de68c02a7790f30bfd250564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D143E8E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9D143E8E EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xB391C508 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xE9ADC770 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x1E5 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x9C33C67 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x73F95D6B EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x288 JUMPI POP PUSH2 0x287 DUP3 PUSH2 0x608 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x42E DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH32 0x0 DUP4 PUSH2 0x672 JUMP JUMPDEST PUSH2 0x477 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x502 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC738B2DE230010873D5B81370B4C10250E8EAEC27550F0C43FAF979E09309083 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x67F DUP6 DUP5 PUSH2 0x689 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH2 0x6BF DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6B2 JUMPI PUSH2 0x6B1 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x6CC SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x692 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x6F7 JUMPI PUSH2 0x6F2 DUP3 DUP5 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH2 0x701 DUP4 DUP4 PUSH2 0x70A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76A DUP2 PUSH2 0x735 JUMP JUMPDEST DUP2 EQ PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x787 DUP2 PUSH2 0x761 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x7A2 PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP3 DUP6 ADD PUSH2 0x778 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CF DUP2 PUSH2 0x7BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81B DUP3 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82B DUP2 PUSH2 0x810 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x846 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x822 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x855 DUP2 PUSH2 0x810 JUMP JUMPDEST DUP2 EQ PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x872 DUP2 PUSH2 0x84C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88B DUP2 PUSH2 0x878 JUMP JUMPDEST DUP2 EQ PUSH2 0x896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A8 DUP2 PUSH2 0x882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x901 DUP3 PUSH2 0x8B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x920 JUMPI PUSH2 0x91F PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH2 0x93F DUP3 DUP3 PUSH2 0x8F8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x95F JUMPI PUSH2 0x95E PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST PUSH2 0x968 DUP3 PUSH2 0x8B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x997 PUSH2 0x992 DUP5 PUSH2 0x944 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B2 PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST PUSH2 0x9BE DUP5 DUP3 DUP6 PUSH2 0x975 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9DB JUMPI PUSH2 0x9DA PUSH2 0x8AE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9EB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x984 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1C DUP8 DUP3 DUP9 ADD PUSH2 0x863 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xA2D DUP8 DUP3 DUP9 ADD PUSH2 0x863 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xA3E DUP8 DUP3 DUP9 ADD PUSH2 0x899 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA5E PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xA6B DUP8 DUP3 DUP9 ADD PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xA80 DUP2 PUSH2 0x735 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB4 DUP2 PUSH2 0xAA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0x878 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB1F JUMPI PUSH2 0xB1E PUSH2 0x8AE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xAFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xB58 JUMPI PUSH2 0xB57 PUSH2 0xB04 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB76 JUMPI PUSH2 0xB75 PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB93 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC6 PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEB PUSH2 0xBE6 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC0E JUMPI PUSH2 0xC0D PUSH2 0xB04 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC37 JUMPI DUP1 PUSH2 0xC23 DUP9 DUP3 PUSH2 0x899 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC10 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC56 JUMPI PUSH2 0xC55 PUSH2 0x8AE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC66 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC99 DUP9 DUP3 DUP10 ADD PUSH2 0x863 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xCAA DUP9 DUP3 DUP10 ADD PUSH2 0x863 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCB JUMPI PUSH2 0xCCA PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xCD7 DUP9 DUP3 DUP10 ADD PUSH2 0xC41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCF8 JUMPI PUSH2 0xCF7 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xD04 DUP9 DUP3 DUP10 ADD PUSH2 0xC41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD24 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xD31 DUP9 DUP3 DUP10 ADD PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD5A JUMPI PUSH2 0xD59 PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP9 DUP3 DUP10 ADD PUSH2 0x863 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD79 DUP9 DUP3 DUP10 ADD PUSH2 0x863 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD8A DUP9 DUP3 DUP10 ADD PUSH2 0x899 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0x899 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0xDC8 DUP9 DUP3 DUP10 ADD PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436C61696D656420455243323000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1C PUSH1 0xD DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xE27 DUP3 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE4B DUP2 PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP3 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C DUP3 PUSH2 0xE5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE94 PUSH2 0xE8F DUP3 PUSH2 0x810 JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA6 DUP3 DUP5 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xECA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x822 JUMP JUMPDEST PUSH2 0xED7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP2 PUSH2 0x7BA JUMP JUMPDEST DUP2 EQ PUSH2 0xEF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF04 DUP2 PUSH2 0xEDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF1F PUSH2 0x72B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2E DUP5 DUP3 DUP6 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6D PUSH1 0xF DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF78 DUP3 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF9C DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100C DUP3 PUSH2 0x878 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C CHAINID 0xBA 0xE5 0xA5 0xA5 0xE0 DUP10 RETURN SWAP4 NUMBER 0xD5 CODESIZE DUP6 0xA6 0xEB 0xE7 CALLCODE 0x2E 0x2C 0xC6 0xDE PUSH9 0xC02A7790F30BFD2505 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"470:1369:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;649:37:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:200:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;740:35:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;781:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1267:570;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;724:247:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:36:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:2;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;649:37:12:-;;;:::o;588:200:7:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;740:35:12:-;;;:::o;781:24::-;;;;:::o;566:35::-;;;:::o;1267:570::-;1377:1;1347:14;:26;1362:10;1347:26;;;;;;;;;;;;;;;;:31;1339:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1443:12;1485:10;1468:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;1458:39;;;;;;1443:54;;1512:49;1531:11;;1512:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1544:10;1556:4;1512:18;:49::i;:::-;1507:149;;1655:1;1626:14;:26;1641:10;1626:26;;;;;;;;;;;;;;;:30;;;;1507:149;1695:10;1688:27;;;1716:10;1728:9;;1688:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1808:10;1795:35;;;1820:9;;1795:35;;;;;;:::i;:::-;;;;;;;;1329:508;1267:570;;:::o;724:247:1:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;607:36:12:-;;;:::o;499:219:1:-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:10:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;1156:184:9:-;1277:4;1329;1300:25;1313:5;1320:4;1300:12;:25::i;:::-;:33;1293:40;;1156:184;;;;;:::o;1994:290::-;2077:7;2096:20;2119:4;2096:27;;2138:9;2133:116;2157:5;:12;2153:1;:16;2133:116;;;2205:33;2215:12;2229:5;2235:1;2229:8;;;;;;;;:::i;:::-;;;;;;;;2205:9;:33::i;:::-;2190:48;;2171:3;;;;;:::i;:::-;;;;2133:116;;;;2265:12;2258:19;;;1994:290;;;;:::o;8879:147::-;8942:7;8972:1;8968;:5;:51;;8999:20;9014:1;9017;8999:14;:20::i;:::-;8968:51;;;8976:20;8991:1;8994;8976:14;:20::i;:::-;8968:51;8961:58;;8879:147;;;;:::o;9032:261::-;9100:13;9204:1;9198:4;9191:15;9232:1;9226:4;9219:15;9272:4;9266;9256:21;9247:30;;9032:261;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:118::-;1839:24;1857:5;1839:24;:::i;:::-;1834:3;1827:37;1752:118;;:::o;1876:222::-;1969:4;2007:2;1996:9;1992:18;1984:26;;2020:71;2088:1;2077:9;2073:17;2064:6;2020:71;:::i;:::-;1876:222;;;;:::o;2104:122::-;2177:24;2195:5;2177:24;:::i;:::-;2170:5;2167:35;2157:63;;2216:1;2213;2206:12;2157:63;2104:122;:::o;2232:139::-;2278:5;2316:6;2303:20;2294:29;;2332:33;2359:5;2332:33;:::i;:::-;2232:139;;;;:::o;2377:77::-;2414:7;2443:5;2432:16;;2377:77;;;:::o;2460:122::-;2533:24;2551:5;2533:24;:::i;:::-;2526:5;2523:35;2513:63;;2572:1;2569;2562:12;2513:63;2460:122;:::o;2588:139::-;2634:5;2672:6;2659:20;2650:29;;2688:33;2715:5;2688:33;:::i;:::-;2588:139;;;;:::o;2733:117::-;2842:1;2839;2832:12;2856:117;2965:1;2962;2955:12;2979:102;3020:6;3071:2;3067:7;3062:2;3055:5;3051:14;3047:28;3037:38;;2979:102;;;:::o;3087:180::-;3135:77;3132:1;3125:88;3232:4;3229:1;3222:15;3256:4;3253:1;3246:15;3273:281;3356:27;3378:4;3356:27;:::i;:::-;3348:6;3344:40;3486:6;3474:10;3471:22;3450:18;3438:10;3435:34;3432:62;3429:88;;;3497:18;;:::i;:::-;3429:88;3537:10;3533:2;3526:22;3316:238;3273:281;;:::o;3560:129::-;3594:6;3621:20;;:::i;:::-;3611:30;;3650:33;3678:4;3670:6;3650:33;:::i;:::-;3560:129;;;:::o;3695:307::-;3756:4;3846:18;3838:6;3835:30;3832:56;;;3868:18;;:::i;:::-;3832:56;3906:29;3928:6;3906:29;:::i;:::-;3898:37;;3990:4;3984;3980:15;3972:23;;3695:307;;;:::o;4008:154::-;4092:6;4087:3;4082;4069:30;4154:1;4145:6;4140:3;4136:16;4129:27;4008:154;;;:::o;4168:410::-;4245:5;4270:65;4286:48;4327:6;4286:48;:::i;:::-;4270:65;:::i;:::-;4261:74;;4358:6;4351:5;4344:21;4396:4;4389:5;4385:16;4434:3;4425:6;4420:3;4416:16;4413:25;4410:112;;;4441:79;;:::i;:::-;4410:112;4531:41;4565:6;4560:3;4555;4531:41;:::i;:::-;4251:327;4168:410;;;;;:::o;4597:338::-;4652:5;4701:3;4694:4;4686:6;4682:17;4678:27;4668:122;;4709:79;;:::i;:::-;4668:122;4826:6;4813:20;4851:78;4925:3;4917:6;4910:4;4902:6;4898:17;4851:78;:::i;:::-;4842:87;;4658:277;4597:338;;;;:::o;4941:943::-;5036:6;5044;5052;5060;5109:3;5097:9;5088:7;5084:23;5080:33;5077:120;;;5116:79;;:::i;:::-;5077:120;5236:1;5261:53;5306:7;5297:6;5286:9;5282:22;5261:53;:::i;:::-;5251:63;;5207:117;5363:2;5389:53;5434:7;5425:6;5414:9;5410:22;5389:53;:::i;:::-;5379:63;;5334:118;5491:2;5517:53;5562:7;5553:6;5542:9;5538:22;5517:53;:::i;:::-;5507:63;;5462:118;5647:2;5636:9;5632:18;5619:32;5678:18;5670:6;5667:30;5664:117;;;5700:79;;:::i;:::-;5664:117;5805:62;5859:7;5850:6;5839:9;5835:22;5805:62;:::i;:::-;5795:72;;5590:287;4941:943;;;;;;;:::o;5890:115::-;5975:23;5992:5;5975:23;:::i;:::-;5970:3;5963:36;5890:115;;:::o;6011:218::-;6102:4;6140:2;6129:9;6125:18;6117:26;;6153:69;6219:1;6208:9;6204:17;6195:6;6153:69;:::i;:::-;6011:218;;;;:::o;6235:77::-;6272:7;6301:5;6290:16;;6235:77;;;:::o;6318:118::-;6405:24;6423:5;6405:24;:::i;:::-;6400:3;6393:37;6318:118;;:::o;6442:222::-;6535:4;6573:2;6562:9;6558:18;6550:26;;6586:71;6654:1;6643:9;6639:17;6630:6;6586:71;:::i;:::-;6442:222;;;;:::o;6670:118::-;6757:24;6775:5;6757:24;:::i;:::-;6752:3;6745:37;6670:118;;:::o;6794:222::-;6887:4;6925:2;6914:9;6910:18;6902:26;;6938:71;7006:1;6995:9;6991:17;6982:6;6938:71;:::i;:::-;6794:222;;;;:::o;7022:117::-;7131:1;7128;7121:12;7145:117;7254:1;7251;7244:12;7285:568;7358:8;7368:6;7418:3;7411:4;7403:6;7399:17;7395:27;7385:122;;7426:79;;:::i;:::-;7385:122;7539:6;7526:20;7516:30;;7569:18;7561:6;7558:30;7555:117;;;7591:79;;:::i;:::-;7555:117;7705:4;7697:6;7693:17;7681:29;;7759:3;7751:4;7743:6;7739:17;7729:8;7725:32;7722:41;7719:128;;;7766:79;;:::i;:::-;7719:128;7285:568;;;;;:::o;7859:559::-;7945:6;7953;8002:2;7990:9;7981:7;7977:23;7973:32;7970:119;;;8008:79;;:::i;:::-;7970:119;8156:1;8145:9;8141:17;8128:31;8186:18;8178:6;8175:30;8172:117;;;8208:79;;:::i;:::-;8172:117;8321:80;8393:7;8384:6;8373:9;8369:22;8321:80;:::i;:::-;8303:98;;;;8099:312;7859:559;;;;;:::o;8424:311::-;8501:4;8591:18;8583:6;8580:30;8577:56;;;8613:18;;:::i;:::-;8577:56;8663:4;8655:6;8651:17;8643:25;;8723:4;8717;8713:15;8705:23;;8424:311;;;:::o;8758:710::-;8854:5;8879:81;8895:64;8952:6;8895:64;:::i;:::-;8879:81;:::i;:::-;8870:90;;8980:5;9009:6;9002:5;8995:21;9043:4;9036:5;9032:16;9025:23;;9096:4;9088:6;9084:17;9076:6;9072:30;9125:3;9117:6;9114:15;9111:122;;;9144:79;;:::i;:::-;9111:122;9259:6;9242:220;9276:6;9271:3;9268:15;9242:220;;;9351:3;9380:37;9413:3;9401:10;9380:37;:::i;:::-;9375:3;9368:50;9447:4;9442:3;9438:14;9431:21;;9318:144;9302:4;9297:3;9293:14;9286:21;;9242:220;;;9246:21;8860:608;;8758:710;;;;;:::o;9491:370::-;9562:5;9611:3;9604:4;9596:6;9592:17;9588:27;9578:122;;9619:79;;:::i;:::-;9578:122;9736:6;9723:20;9761:94;9851:3;9843:6;9836:4;9828:6;9824:17;9761:94;:::i;:::-;9752:103;;9568:293;9491:370;;;;:::o;9867:1509::-;10021:6;10029;10037;10045;10053;10102:3;10090:9;10081:7;10077:23;10073:33;10070:120;;;10109:79;;:::i;:::-;10070:120;10229:1;10254:53;10299:7;10290:6;10279:9;10275:22;10254:53;:::i;:::-;10244:63;;10200:117;10356:2;10382:53;10427:7;10418:6;10407:9;10403:22;10382:53;:::i;:::-;10372:63;;10327:118;10512:2;10501:9;10497:18;10484:32;10543:18;10535:6;10532:30;10529:117;;;10565:79;;:::i;:::-;10529:117;10670:78;10740:7;10731:6;10720:9;10716:22;10670:78;:::i;:::-;10660:88;;10455:303;10825:2;10814:9;10810:18;10797:32;10856:18;10848:6;10845:30;10842:117;;;10878:79;;:::i;:::-;10842:117;10983:78;11053:7;11044:6;11033:9;11029:22;10983:78;:::i;:::-;10973:88;;10768:303;11138:3;11127:9;11123:19;11110:33;11170:18;11162:6;11159:30;11156:117;;;11192:79;;:::i;:::-;11156:117;11297:62;11351:7;11342:6;11331:9;11327:22;11297:62;:::i;:::-;11287:72;;11081:288;9867:1509;;;;;;;;:::o;11382:1089::-;11486:6;11494;11502;11510;11518;11567:3;11555:9;11546:7;11542:23;11538:33;11535:120;;;11574:79;;:::i;:::-;11535:120;11694:1;11719:53;11764:7;11755:6;11744:9;11740:22;11719:53;:::i;:::-;11709:63;;11665:117;11821:2;11847:53;11892:7;11883:6;11872:9;11868:22;11847:53;:::i;:::-;11837:63;;11792:118;11949:2;11975:53;12020:7;12011:6;12000:9;11996:22;11975:53;:::i;:::-;11965:63;;11920:118;12077:2;12103:53;12148:7;12139:6;12128:9;12124:22;12103:53;:::i;:::-;12093:63;;12048:118;12233:3;12222:9;12218:19;12205:33;12265:18;12257:6;12254:30;12251:117;;;12287:79;;:::i;:::-;12251:117;12392:62;12446:7;12437:6;12426:9;12422:22;12392:62;:::i;:::-;12382:72;;12176:288;11382:1089;;;;;;;;:::o;12477:169::-;12561:11;12595:6;12590:3;12583:19;12635:4;12630:3;12626:14;12611:29;;12477:169;;;;:::o;12652:163::-;12792:15;12788:1;12780:6;12776:14;12769:39;12652:163;:::o;12821:366::-;12963:3;12984:67;13048:2;13043:3;12984:67;:::i;:::-;12977:74;;13060:93;13149:3;13060:93;:::i;:::-;13178:2;13173:3;13169:12;13162:19;;12821:366;;;:::o;13193:419::-;13359:4;13397:2;13386:9;13382:18;13374:26;;13446:9;13440:4;13436:20;13432:1;13421:9;13417:17;13410:47;13474:131;13600:4;13474:131;:::i;:::-;13466:139;;13193:419;;;:::o;13618:94::-;13651:8;13699:5;13695:2;13691:14;13670:35;;13618:94;;;:::o;13718:::-;13757:7;13786:20;13800:5;13786:20;:::i;:::-;13775:31;;13718:94;;;:::o;13818:100::-;13857:7;13886:26;13906:5;13886:26;:::i;:::-;13875:37;;13818:100;;;:::o;13924:157::-;14029:45;14049:24;14067:5;14049:24;:::i;:::-;14029:45;:::i;:::-;14024:3;14017:58;13924:157;;:::o;14087:256::-;14199:3;14214:75;14285:3;14276:6;14214:75;:::i;:::-;14314:2;14309:3;14305:12;14298:19;;14334:3;14327:10;;14087:256;;;;:::o;14349:332::-;14470:4;14508:2;14497:9;14493:18;14485:26;;14521:71;14589:1;14578:9;14574:17;14565:6;14521:71;:::i;:::-;14602:72;14670:2;14659:9;14655:18;14646:6;14602:72;:::i;:::-;14349:332;;;;;:::o;14687:116::-;14757:21;14772:5;14757:21;:::i;:::-;14750:5;14747:32;14737:60;;14793:1;14790;14783:12;14737:60;14687:116;:::o;14809:137::-;14863:5;14894:6;14888:13;14879:22;;14910:30;14934:5;14910:30;:::i;:::-;14809:137;;;;:::o;14952:345::-;15019:6;15068:2;15056:9;15047:7;15043:23;15039:32;15036:119;;;15074:79;;:::i;:::-;15036:119;15194:1;15219:61;15272:7;15263:6;15252:9;15248:22;15219:61;:::i;:::-;15209:71;;15165:125;14952:345;;;;:::o;15303:165::-;15443:17;15439:1;15431:6;15427:14;15420:41;15303:165;:::o;15474:366::-;15616:3;15637:67;15701:2;15696:3;15637:67;:::i;:::-;15630:74;;15713:93;15802:3;15713:93;:::i;:::-;15831:2;15826:3;15822:12;15815:19;;15474:366;;;:::o;15846:419::-;16012:4;16050:2;16039:9;16035:18;16027:26;;16099:9;16093:4;16089:20;16085:1;16074:9;16070:17;16063:47;16127:131;16253:4;16127:131;:::i;:::-;16119:139;;15846:419;;;:::o;16271:180::-;16319:77;16316:1;16309:88;16416:4;16413:1;16406:15;16440:4;16437:1;16430:15;16457:180;16505:77;16502:1;16495:88;16602:4;16599:1;16592:15;16626:4;16623:1;16616:15;16643:233;16682:3;16705:24;16723:5;16705:24;:::i;:::-;16696:33;;16751:66;16744:5;16741:77;16738:103;;;16821:18;;:::i;:::-;16738:103;16868:1;16861:5;16857:13;16850:20;;16643:233;;;:::o"},"methodIdentifiers":{"claim(bytes32[])":"b391c508","dropERC20()":"73f95d6b","merkleRoot()":"2eb4a7ab","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","supportsInterface(bytes4)":"01ffc9a7","tokenERC1155()":"09c33c67","tokenERC20()":"9d143e8e","tokenERC721()":"e9adc770"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token721_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1155_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dropERC20_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_dropERC20\",\"type\":\"uint256\"}],\"name\":\"ClaimedERC20\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenERC1155\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MerkleDistributor.sol\":\"MerkleDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/MerkleDistributor.sol\":{\"keccak256\":\"0xbcd0df6fbd5eeac5981d06e5c4f5ab7861e6bcfc3ccaf653cedf34ce31d3530d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9c3844f132579f36b85e473ae4c23b78ef5185814d73ebfab135d41804e4d65f\",\"dweb:/ipfs/QmWcn9H9HkXyADqNF6rhThFyygapXwWDaXhvc8FoWrkHvF\"]}},\"version\":1}"}}}}}