{"id":"b3ef37ed115c9f67ad3f96170bec355a","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"contracts/MerkleDistributor.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.9;\n\nimport {IERC20, SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport {MerkleProof} from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\n// import {IMerkleDistributor} from \"./interfaces/IMerkleDistributor.sol\";\n\ncontract MerkleDistributor is ERC721Holder {\n    using SafeERC20 for IERC20;\n    address public immutable tokenERC20;\n    address public immutable tokenERC721;\n    address public immutable tokenERC1155;\n    // address public immutable override token;\n    bytes32 public immutable merkleRoot;\n    uint256 public dropERC20;\n\n    mapping(address => uint256) private claimedAddress;\n\n    event ClaimedERC20(address indexed _from, uint256 _dropERC20);\n\n    constructor(\n        address token_,\n        address token721_,\n        address token1155_,\n        bytes32 merkleRoot_,\n        uint256 dropERC20_\n    ) {\n        tokenERC20 = token_;\n        tokenERC721 = token721_;\n        tokenERC1155 = token1155_;\n        merkleRoot = merkleRoot_;\n        dropERC20 = dropERC20_;\n    }\n\n    function claim(bytes32[] calldata merkleProof) public virtual {\n        require(claimedAddress[msg.sender] == 0, \"Claimed ERC20\");\n\n        // Verify the merkle proof.\n        bytes32 node = keccak256(abi.encodePacked(msg.sender));\n        if (!MerkleProof.verify(merkleProof, merkleRoot, node))\n            // Mark it claimed and send the token.\n            claimedAddress[msg.sender] = 1;\n\n        require(\n            IERC20(tokenERC20).transfer(msg.sender, dropERC20),\n            \"Transfer failed\"\n        );\n\n        emit ClaimedERC20(msg.sender, dropERC20);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nameLocation":"212:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":11,"name":"Transfer","nameLocation":"394:8:0","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:0","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:0","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:0","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":20,"name":"Approval","nameLocation":"625:8:0","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:0","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:0","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:0","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nameLocation":"939:7:0","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"1219:2:0","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nameLocation":"1231:6:0","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nameLocation":"1565:5:0","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1580:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nameLocation":"2299:7:0","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nameLocation":"2316:6:0","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nameLocation":"2685:4:0","nodeType":"VariableDeclaration","scope":76,"src":"2677:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nameLocation":"2707:2:0","nodeType":"VariableDeclaration","scope":76,"src":"2699:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nameLocation":"2727:6:0","nodeType":"VariableDeclaration","scope":76,"src":"2719:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":76,"src":"2758:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:0"},"scope":77,"src":"2646:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2564:0","usedErrors":[]}],"src":"106:2661:0"},"id":0},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[113]},"id":114,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"139:480:1","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":113,"linearizedBaseContracts":[113],"name":"IERC20Permit","nameLocation":"630:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"649:792:1","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:1","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"owner","nameLocation":"1479:5:1","nodeType":"VariableDeclaration","scope":98,"src":"1471:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"spender","nameLocation":"1502:7:1","nodeType":"VariableDeclaration","scope":98,"src":"1494:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"value","nameLocation":"1527:5:1","nodeType":"VariableDeclaration","scope":98,"src":"1519:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:1","nodeType":"VariableDeclaration","scope":98,"src":"1542:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"v","nameLocation":"1574:1:1","nodeType":"VariableDeclaration","scope":98,"src":"1568:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":90,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"r","nameLocation":"1593:1:1","nodeType":"VariableDeclaration","scope":98,"src":"1585:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"s","nameLocation":"1612:1:1","nodeType":"VariableDeclaration","scope":98,"src":"1604:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[],"src":"1628:0:1"},"scope":113,"src":"1446:183:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"1635:294:1","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":106,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:1","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"owner","nameLocation":"1958:5:1","nodeType":"VariableDeclaration","scope":106,"src":"1950:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106,"src":"1988:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:1"},"scope":113,"src":"1934:63:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"2003:128:1","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":112,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:1","nodeType":"FunctionDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2214:2:1"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":112,"src":"2240:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:1"},"scope":113,"src":"2189:60:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":114,"src":"620:1631:1","usedErrors":[]}],"src":"114:2138:1"},"id":1},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[769],"IERC20":[77],"IERC20Permit":[113],"SafeERC20":[394]},"id":395,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":115,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":395,"sourceUnit":78,"src":"140:23:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":395,"sourceUnit":114,"src":"164:46:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":395,"sourceUnit":770,"src":"211:36:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"249:457:2","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":394,"linearizedBaseContracts":[394],"name":"SafeERC20","nameLocation":"715:9:2","nodeType":"ContractDefinition","nodes":[{"id":122,"libraryName":{"id":120,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":769,"src":"737:7:2"},"nodeType":"UsingForDirective","src":"731:26:2","typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":144,"nodeType":"Block","src":"865:103:2","statements":[{"expression":{"arguments":[{"id":133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"895:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"925:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"925:14:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":139,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"950:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"954:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":134,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":132,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"875:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"875:86:2"}]},"id":145,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:2","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"token","nameLocation":"801:5:2","nodeType":"VariableDeclaration","scope":145,"src":"794:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":124,"nodeType":"UserDefinedTypeName","pathNode":{"id":123,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"794:6:2"},"referencedDeclaration":77,"src":"794:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"to","nameLocation":"824:2:2","nodeType":"VariableDeclaration","scope":145,"src":"816:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"value","nameLocation":"844:5:2","nodeType":"VariableDeclaration","scope":145,"src":"836:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:2"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"865:0:2"},"scope":394,"src":"763:205:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":170,"nodeType":"Block","src":"1102:113:2","statements":[{"expression":{"arguments":[{"id":158,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1132:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":161,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1162:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":76,"src":"1162:18:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":164,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1191:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"1197:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1201:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":159,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":157,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1112:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":169,"nodeType":"ExpressionStatement","src":"1112:96:2"}]},"id":171,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:2","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"token","nameLocation":"1016:5:2","nodeType":"VariableDeclaration","scope":171,"src":"1009:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":147,"nodeType":"UserDefinedTypeName","pathNode":{"id":146,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1009:6:2"},"referencedDeclaration":77,"src":"1009:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"from","nameLocation":"1039:4:2","nodeType":"VariableDeclaration","scope":171,"src":"1031:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"to","nameLocation":"1061:2:2","nodeType":"VariableDeclaration","scope":171,"src":"1053:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"value","nameLocation":"1081:5:2","nodeType":"VariableDeclaration","scope":171,"src":"1073:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:2"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[],"src":"1102:0:2"},"scope":394,"src":"974:241:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":214,"nodeType":"Block","src":"1581:497:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"1830:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":191,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}],"id":190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:2","typeDescriptions":{}}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1877:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":187,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"1846:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"1846:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"1808:163:2"},{"expression":{"arguments":[{"id":203,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2001:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":206,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2031:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2031:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":209,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"2055:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"2064:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":204,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":202,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1981:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"1981:90:2"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1221:249:2","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:2","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"token","nameLocation":"1512:5:2","nodeType":"VariableDeclaration","scope":215,"src":"1505:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":174,"nodeType":"UserDefinedTypeName","pathNode":{"id":173,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1505:6:2"},"referencedDeclaration":77,"src":"1505:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"spender","nameLocation":"1535:7:2","nodeType":"VariableDeclaration","scope":215,"src":"1527:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"value","nameLocation":"1560:5:2","nodeType":"VariableDeclaration","scope":215,"src":"1552:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:2"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"1581:0:2"},"scope":394,"src":"1475:603:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"2200:194:2","statements":[{"assignments":[226],"declarations":[{"constant":false,"id":226,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:2","nodeType":"VariableDeclaration","scope":250,"src":"2210:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":237,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":231,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}],"id":230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:2","typeDescriptions":{}}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":233,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2264:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":227,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2233:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"2233:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"2275:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:2"},{"expression":{"arguments":[{"id":239,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2310:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":242,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2340:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2340:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":245,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2364:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":246,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2373:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":240,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":238,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2290:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"ExpressionStatement","src":"2290:97:2"}]},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:2","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"token","nameLocation":"2131:5:2","nodeType":"VariableDeclaration","scope":251,"src":"2124:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":217,"nodeType":"UserDefinedTypeName","pathNode":{"id":216,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2124:6:2"},"referencedDeclaration":77,"src":"2124:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"spender","nameLocation":"2154:7:2","nodeType":"VariableDeclaration","scope":251,"src":"2146:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"value","nameLocation":"2179:5:2","nodeType":"VariableDeclaration","scope":251,"src":"2171:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:2"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"2200:0:2"},"scope":394,"src":"2084:310:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"2516:370:2","statements":[{"id":297,"nodeType":"UncheckedBlock","src":"2526:354:2","statements":[{"assignments":[262],"declarations":[{"constant":false,"id":262,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:2","nodeType":"VariableDeclaration","scope":297,"src":"2550:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":271,"initialValue":{"arguments":[{"arguments":[{"id":267,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}],"id":266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:2","typeDescriptions":{}}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":269,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2604:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":263,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2573:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"2573:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":273,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"2634:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2650:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"2626:75:2"},{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:2","nodeType":"VariableDeclaration","scope":297,"src":"2715:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":284,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":281,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"2738:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2753:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:2"},{"expression":{"arguments":[{"id":286,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2792:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":289,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2822:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2822:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":292,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2846:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":293,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2855:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":287,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":285,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2772:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"2772:97:2"}]}]},"id":299,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:2","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"token","nameLocation":"2447:5:2","nodeType":"VariableDeclaration","scope":299,"src":"2440:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":253,"nodeType":"UserDefinedTypeName","pathNode":{"id":252,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2440:6:2"},"referencedDeclaration":77,"src":"2440:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"spender","nameLocation":"2470:7:2","nodeType":"VariableDeclaration","scope":299,"src":"2462:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"value","nameLocation":"2495:5:2","nodeType":"VariableDeclaration","scope":299,"src":"2487:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:2"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"2516:0:2"},"scope":394,"src":"2400:486:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":354,"nodeType":"Block","src":"3107:257:2","statements":[{"assignments":[320],"declarations":[{"constant":false,"id":320,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:2","nodeType":"VariableDeclaration","scope":354,"src":"3117:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":325,"initialValue":{"arguments":[{"id":323,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3152:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":321,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3139:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":106,"src":"3139:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:2"},{"expression":{"arguments":[{"id":329,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3181:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":330,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3188:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3197:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":332,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"3204:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":333,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"3214:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":334,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"3217:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":335,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3220:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":326,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3168:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":98,"src":"3168:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"3168:54:2"},{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:2","nodeType":"VariableDeclaration","scope":354,"src":"3232:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":344,"initialValue":{"arguments":[{"id":342,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":340,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3253:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":106,"src":"3253:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":346,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"3290:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"3304:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"3282:75:2"}]},"id":355,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:2","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"token","nameLocation":"2934:5:2","nodeType":"VariableDeclaration","scope":355,"src":"2921:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"},"typeName":{"id":301,"nodeType":"UserDefinedTypeName","pathNode":{"id":300,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":113,"src":"2921:12:2"},"referencedDeclaration":113,"src":"2921:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"owner","nameLocation":"2957:5:2","nodeType":"VariableDeclaration","scope":355,"src":"2949:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"spender","nameLocation":"2980:7:2","nodeType":"VariableDeclaration","scope":355,"src":"2972:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"value","nameLocation":"3005:5:2","nodeType":"VariableDeclaration","scope":355,"src":"2997:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:2","nodeType":"VariableDeclaration","scope":355,"src":"3020:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"v","nameLocation":"3052:1:2","nodeType":"VariableDeclaration","scope":355,"src":"3046:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":311,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"r","nameLocation":"3071:1:2","nodeType":"VariableDeclaration","scope":355,"src":"3063:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"s","nameLocation":"3090:1:2","nodeType":"VariableDeclaration","scope":355,"src":"3082:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:2"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"3107:0:2"},"scope":394,"src":"2892:472:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":392,"nodeType":"Block","src":"3817:636:2","statements":[{"assignments":[365],"declarations":[{"constant":false,"id":365,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:2","nodeType":"VariableDeclaration","scope":392,"src":"4166:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":364,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":374,"initialValue":{"arguments":[{"id":371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4220:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":368,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4200:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:2","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":529,"src":"4192:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":375,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4275:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":391,"nodeType":"IfStatement","src":"4271:176:2","trueBody":{"id":390,"nodeType":"Block","src":"4298:149:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":382,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4370:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:2","typeDescriptions":{}}}],"id":385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":380,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"4351:85:2"}]}}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"3370:372:2","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":393,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:2","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"token","nameLocation":"3783:5:2","nodeType":"VariableDeclaration","scope":393,"src":"3776:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":358,"nodeType":"UserDefinedTypeName","pathNode":{"id":357,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3776:6:2"},"referencedDeclaration":77,"src":"3776:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"data","nameLocation":"3803:4:2","nodeType":"VariableDeclaration","scope":393,"src":"3790:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":360,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:2"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"3817:0:2"},"scope":394,"src":"3747:706:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":395,"src":"707:3748:2","usedErrors":[]}],"src":"115:4341:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[412]},"id":413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":396,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"141:152:3","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":412,"linearizedBaseContracts":[412],"name":"IERC721Receiver","nameLocation":"304:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"326:493:3","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":411,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:3","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"operator","nameLocation":"867:8:3","nodeType":"VariableDeclaration","scope":411,"src":"859:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"from","nameLocation":"893:4:3","nodeType":"VariableDeclaration","scope":411,"src":"885:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:3","nodeType":"VariableDeclaration","scope":411,"src":"907:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"data","nameLocation":"947:4:3","nodeType":"VariableDeclaration","scope":411,"src":"932:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":405,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:3"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"976:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":408,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:3"},"scope":412,"src":"824:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":413,"src":"294:692:3","usedErrors":[]}],"src":"116:871:3"},"id":3},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","exportedSymbols":{"ERC721Holder":[439],"IERC721Receiver":[412]},"id":440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":414,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":415,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":440,"sourceUnit":413,"src":"129:32:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":417,"name":"IERC721Receiver","nodeType":"IdentifierPath","referencedDeclaration":412,"src":"424:15:4"},"id":418,"nodeType":"InheritanceSpecifier","src":"424:15:4"}],"canonicalName":"ERC721Holder","contractDependencies":[],"contractKind":"contract","documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"163:235:4","text":" @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."},"fullyImplemented":true,"id":439,"linearizedBaseContracts":[439,412],"name":"ERC721Holder","nameLocation":"408:12:4","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[411],"body":{"id":437,"nodeType":"Block","src":"734:54:4","statements":[{"expression":{"expression":{"expression":{"id":433,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"751:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Holder_$439","typeString":"contract ERC721Holder"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":438,"src":"751:21:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"751:30:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"744:37:4"}]},"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"446:137:4","text":" @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":438,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"597:16:4","nodeType":"FunctionDefinition","overrides":{"id":429,"nodeType":"OverrideSpecifier","overrides":[],"src":"708:8:4"},"parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"623:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"640:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"657:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"674:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":426,"name":"bytes","nodeType":"ElementaryTypeName","src":"674:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"613:79:4"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"726:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":430,"name":"bytes4","nodeType":"ElementaryTypeName","src":"726:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"725:8:4"},"scope":439,"src":"588:200:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":440,"src":"399:391:4","usedErrors":[]}],"src":"104:687:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[769]},"id":770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":441,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":769,"linearizedBaseContracts":[769],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":456,"nodeType":"Block","src":"1241:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":450,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"1465:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":449,"id":455,"nodeType":"Return","src":"1458:30:5"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"216:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:5","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"account","nameLocation":"1203:7:5","nodeType":"VariableDeclaration","scope":457,"src":"1195:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:5"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"1235:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":447,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:5"},"scope":769,"src":"1175:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"2483:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":468,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$769","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$769","typeString":"library Address"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:5","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2526:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2493:73:5"},{"assignments":[477,null],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"success","nameLocation":"2583:7:5","nodeType":"VariableDeclaration","scope":490,"src":"2578:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":484,"initialValue":{"arguments":[{"hexValue":"","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":478,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2596:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":480,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:5"},{"expression":{"arguments":[{"id":486,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"2647:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"2639:78:5"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1501:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:5","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:5","nodeType":"VariableDeclaration","scope":491,"src":"2431:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"amount","nameLocation":"2466:6:5","nodeType":"VariableDeclaration","scope":491,"src":"2458:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:5"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"2483:0:5"},"scope":769,"src":"2412:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":508,"nodeType":"Block","src":"3555:96:5","statements":[{"expression":{"arguments":[{"id":502,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3594:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"3602:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":501,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[549,593],"referencedDeclaration":593,"src":"3572:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":500,"id":507,"nodeType":"Return","src":"3565:79:5"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"2730:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":509,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:5","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"target","nameLocation":"3496:6:5","nodeType":"VariableDeclaration","scope":509,"src":"3488:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"data","nameLocation":"3517:4:5","nodeType":"VariableDeclaration","scope":509,"src":"3504:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":495,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:5"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":509,"src":"3541:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":498,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:5"},"scope":769,"src":"3466:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":528,"nodeType":"Block","src":"4020:76:5","statements":[{"expression":{"arguments":[{"id":522,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"4059:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4067:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":525,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"4076:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":521,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[549,593],"referencedDeclaration":593,"src":"4037:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":520,"id":527,"nodeType":"Return","src":"4030:59:5"}]},"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"3657:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:5","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"target","nameLocation":"3912:6:5","nodeType":"VariableDeclaration","scope":529,"src":"3904:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"data","nameLocation":"3941:4:5","nodeType":"VariableDeclaration","scope":529,"src":"3928:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":513,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:5","nodeType":"VariableDeclaration","scope":529,"src":"3955:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":515,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:5"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":529,"src":"4006:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":518,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:5"},"scope":769,"src":"3873:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":548,"nodeType":"Block","src":"4601:111:5","statements":[{"expression":{"arguments":[{"id":542,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"4640:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":543,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"4648:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"4654:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":541,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[549,593],"referencedDeclaration":593,"src":"4618:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":540,"id":547,"nodeType":"Return","src":"4611:94:5"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"4102:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":549,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:5","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"target","nameLocation":"4506:6:5","nodeType":"VariableDeclaration","scope":549,"src":"4498:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"data","nameLocation":"4535:4:5","nodeType":"VariableDeclaration","scope":549,"src":"4522:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"4557:5:5","nodeType":"VariableDeclaration","scope":549,"src":"4549:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:5"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":549,"src":"4587:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:5"},"scope":769,"src":"4458:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":592,"nodeType":"Block","src":"5139:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":566,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$769","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$769","typeString":"library Address"}],"id":565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:5","typeDescriptions":{}}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"5182:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":573,"nodeType":"ExpressionStatement","src":"5149:81:5"},{"assignments":[575,577],"declarations":[{"constant":false,"id":575,"mutability":"mutable","name":"success","nameLocation":"5246:7:5","nodeType":"VariableDeclaration","scope":592,"src":"5241:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":574,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:5","nodeType":"VariableDeclaration","scope":592,"src":"5255:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":576,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":584,"initialValue":{"arguments":[{"id":582,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5308:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":578,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"5282:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"5301:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:5"},{"expression":{"arguments":[{"id":586,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"5357:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5365:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":588,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5374:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":589,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"5386:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":585,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"5330:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":562,"id":591,"nodeType":"Return","src":"5323:76:5"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"4718:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":593,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:5","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"target","nameLocation":"5008:6:5","nodeType":"VariableDeclaration","scope":593,"src":"5000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"data","nameLocation":"5037:4:5","nodeType":"VariableDeclaration","scope":593,"src":"5024:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":553,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"value","nameLocation":"5059:5:5","nodeType":"VariableDeclaration","scope":593,"src":"5051:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:5","nodeType":"VariableDeclaration","scope":593,"src":"5074:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":557,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:5"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":593,"src":"5125:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":560,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:5"},"scope":769,"src":"4960:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":609,"nodeType":"Block","src":"5683:97:5","statements":[{"expression":{"arguments":[{"id":604,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"5719:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":605,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5727:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":603,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[610,639],"referencedDeclaration":639,"src":"5700:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":602,"id":608,"nodeType":"Return","src":"5693:80:5"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"5412:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":610,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:5","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"target","nameLocation":"5619:6:5","nodeType":"VariableDeclaration","scope":610,"src":"5611:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"data","nameLocation":"5640:4:5","nodeType":"VariableDeclaration","scope":610,"src":"5627:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":597,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:5"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":610,"src":"5669:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":600,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:5"},"scope":769,"src":"5583:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"6122:168:5","statements":[{"assignments":[623,625],"declarations":[{"constant":false,"id":623,"mutability":"mutable","name":"success","nameLocation":"6138:7:5","nodeType":"VariableDeclaration","scope":638,"src":"6133:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":622,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:5","nodeType":"VariableDeclaration","scope":638,"src":"6147:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":624,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":630,"initialValue":{"arguments":[{"id":628,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6192:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":626,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"6174:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:5"},{"expression":{"arguments":[{"id":632,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"6241:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"6249:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":634,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"6258:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":635,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"6270:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":631,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6214:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":621,"id":637,"nodeType":"Return","src":"6207:76:5"}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"5786:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:5","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"target","nameLocation":"6009:6:5","nodeType":"VariableDeclaration","scope":639,"src":"6001:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"data","nameLocation":"6038:4:5","nodeType":"VariableDeclaration","scope":639,"src":"6025:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":614,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:5","nodeType":"VariableDeclaration","scope":639,"src":"6052:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":616,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:5"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":639,"src":"6108:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":619,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:5"},"scope":769,"src":"5964:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"6566:101:5","statements":[{"expression":{"arguments":[{"id":650,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6604:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"6612:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":649,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[656,685],"referencedDeclaration":685,"src":"6583:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":648,"id":654,"nodeType":"Return","src":"6576:84:5"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"6296:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:5","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"target","nameLocation":"6507:6:5","nodeType":"VariableDeclaration","scope":656,"src":"6499:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"data","nameLocation":"6528:4:5","nodeType":"VariableDeclaration","scope":656,"src":"6515:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":643,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:5"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"6552:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":646,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:5"},"scope":769,"src":"6469:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"7008:170:5","statements":[{"assignments":[669,671],"declarations":[{"constant":false,"id":669,"mutability":"mutable","name":"success","nameLocation":"7024:7:5","nodeType":"VariableDeclaration","scope":684,"src":"7019:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":668,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:5","nodeType":"VariableDeclaration","scope":684,"src":"7033:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":670,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":676,"initialValue":{"arguments":[{"id":674,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7080:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":672,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7060:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:5"},{"expression":{"arguments":[{"id":678,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7129:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":679,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"7137:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":680,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"7146:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":681,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7158:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":677,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7102:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":667,"id":683,"nodeType":"Return","src":"7095:76:5"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"6673:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:5","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"target","nameLocation":"6900:6:5","nodeType":"VariableDeclaration","scope":685,"src":"6892:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"data","nameLocation":"6929:4:5","nodeType":"VariableDeclaration","scope":685,"src":"6916:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:5","nodeType":"VariableDeclaration","scope":685,"src":"6943:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":662,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:5"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"6994:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:5"},"scope":769,"src":"6853:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"7660:434:5","statements":[{"condition":{"id":699,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"7674:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":721,"nodeType":"Block","src":"8030:58:5","statements":[{"expression":{"arguments":[{"id":717,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"8052:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":718,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"8064:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":716,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8044:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"8044:33:5"}]},"id":722,"nodeType":"IfStatement","src":"7670:418:5","trueBody":{"id":715,"nodeType":"Block","src":"7683:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":700,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"7701:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":712,"nodeType":"IfStatement","src":"7697:286:5","trueBody":{"id":711,"nodeType":"Block","src":"7725:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":706,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"7927:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":705,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"7916:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"ExpressionStatement","src":"7908:60:5"}]}},{"expression":{"id":713,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"8003:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":698,"id":714,"nodeType":"Return","src":"7996:17:5"}]}}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"7184:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:5","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"target","nameLocation":"7519:6:5","nodeType":"VariableDeclaration","scope":724,"src":"7511:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"success","nameLocation":"7540:7:5","nodeType":"VariableDeclaration","scope":724,"src":"7535:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":689,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:5","nodeType":"VariableDeclaration","scope":724,"src":"7557:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":691,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:5","nodeType":"VariableDeclaration","scope":724,"src":"7590:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":693,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:5"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"7646:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":696,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:5"},"scope":769,"src":"7466:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"8475:135:5","statements":[{"condition":{"id":736,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8489:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":745,"nodeType":"Block","src":"8546:58:5","statements":[{"expression":{"arguments":[{"id":741,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"8568:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":742,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"8580:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":740,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8560:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"8560:33:5"}]},"id":746,"nodeType":"IfStatement","src":"8485:119:5","trueBody":{"id":739,"nodeType":"Block","src":"8498:42:5","statements":[{"expression":{"id":737,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"8519:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":735,"id":738,"nodeType":"Return","src":"8512:17:5"}]}}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"8100:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:5","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"success","nameLocation":"8355:7:5","nodeType":"VariableDeclaration","scope":748,"src":"8350:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":726,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:5","nodeType":"VariableDeclaration","scope":748,"src":"8372:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:5","nodeType":"VariableDeclaration","scope":748,"src":"8405:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":730,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:5"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"8461:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":733,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:5"},"scope":769,"src":"8315:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":767,"nodeType":"Block","src":"8699:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":755,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8775:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":765,"nodeType":"Block","src":"9105:45:5","statements":[{"expression":{"arguments":[{"id":762,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9126:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":761,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"ExpressionStatement","src":"9119:20:5"}]},"id":766,"nodeType":"IfStatement","src":"8771:379:5","trueBody":{"id":760,"nodeType":"Block","src":"8798:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:5"},"nodeType":"YulFunctionCall","src":"8997:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:5"},"nodeType":"YulFunctionCall","src":"9038:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:5"},"nodeType":"YulFunctionCall","src":"9031:44:5"},"nodeType":"YulExpressionStatement","src":"9031:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":750,"isOffset":false,"isSlot":false,"src":"9003:10:5","valueSize":1},{"declaration":750,"isOffset":false,"isSlot":false,"src":"9046:10:5","valueSize":1}],"id":759,"nodeType":"InlineAssembly","src":"8947:142:5"}]}}]},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:5","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:5","nodeType":"VariableDeclaration","scope":768,"src":"8633:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:5","nodeType":"VariableDeclaration","scope":768,"src":"8658:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":751,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:5"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[],"src":"8699:0:5"},"scope":769,"src":"8616:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":770,"src":"194:8964:5","usedErrors":[]}],"src":"101:9058:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1271]},"id":1272,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":771,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"143:658:6","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1271,"linearizedBaseContracts":[1271],"name":"MerkleProof","nameLocation":"810:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":792,"nodeType":"Block","src":"1283:57:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":786,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"1313:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":787,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1320:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":785,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"1300:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1300:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":789,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"1329:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1300:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":784,"id":791,"nodeType":"Return","src":"1293:40:6"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"828:323:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":793,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:6","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"proof","nameLocation":"1198:5:6","nodeType":"VariableDeclaration","scope":793,"src":"1181:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1181:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":775,"nodeType":"ArrayTypeName","src":"1181:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"root","nameLocation":"1221:4:6","nodeType":"VariableDeclaration","scope":793,"src":"1213:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1213:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"leaf","nameLocation":"1243:4:6","nodeType":"VariableDeclaration","scope":793,"src":"1235:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:82:6"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"1277:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":782,"name":"bool","nodeType":"ElementaryTypeName","src":"1277:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1276:6:6"},"scope":1271,"src":"1156:184:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":813,"nodeType":"Block","src":"1578:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":807,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"1616:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":808,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1623:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":806,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1595:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1595:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":810,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"1632:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1595:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":805,"id":812,"nodeType":"Return","src":"1588:48:6"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"1346:90:6","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1450:14:6","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"proof","nameLocation":"1493:5:6","nodeType":"VariableDeclaration","scope":814,"src":"1474:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1474:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":796,"nodeType":"ArrayTypeName","src":"1474:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"root","nameLocation":"1516:4:6","nodeType":"VariableDeclaration","scope":814,"src":"1508:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1508:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"leaf","nameLocation":"1538:4:6","nodeType":"VariableDeclaration","scope":814,"src":"1530:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1530:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1464:84:6"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"1572:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":803,"name":"bool","nodeType":"ElementaryTypeName","src":"1572:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1571:6:6"},"scope":1271,"src":"1441:202:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"2086:198:6","statements":[{"assignments":[826],"declarations":[{"constant":false,"id":826,"mutability":"mutable","name":"computedHash","nameLocation":"2104:12:6","nodeType":"VariableDeclaration","scope":853,"src":"2096:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2096:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":828,"initialValue":{"id":827,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2119:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2096:27:6"},{"body":{"id":849,"nodeType":"Block","src":"2176:73:6","statements":[{"expression":{"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2190:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":842,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2215:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":843,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2229:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":845,"indexExpression":{"id":844,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2235:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2229:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":841,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2205:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2205:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2190:48:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":848,"nodeType":"ExpressionStatement","src":"2190:48:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2153:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":834,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2157:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2157:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2153:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":850,"initializationExpression":{"assignments":[830],"declarations":[{"constant":false,"id":830,"mutability":"mutable","name":"i","nameLocation":"2146:1:6","nodeType":"VariableDeclaration","scope":850,"src":"2138:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":832,"initialValue":{"hexValue":"30","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2150:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2138:13:6"},"loopExpression":{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2171:3:6","subExpression":{"id":837,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2171:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":839,"nodeType":"ExpressionStatement","src":"2171:3:6"},"nodeType":"ForStatement","src":"2133:116:6"},{"expression":{"id":851,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2265:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":824,"id":852,"nodeType":"Return","src":"2258:19:6"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"1649:340:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2003:12:6","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"proof","nameLocation":"2033:5:6","nodeType":"VariableDeclaration","scope":854,"src":"2016:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2016:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":817,"nodeType":"ArrayTypeName","src":"2016:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"leaf","nameLocation":"2048:4:6","nodeType":"VariableDeclaration","scope":854,"src":"2040:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2040:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2015:38:6"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"2077:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2077:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2076:9:6"},"scope":1271,"src":"1994:290:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"2493:198:6","statements":[{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"computedHash","nameLocation":"2511:12:6","nodeType":"VariableDeclaration","scope":893,"src":"2503:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":868,"initialValue":{"id":867,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2526:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2503:27:6"},{"body":{"id":889,"nodeType":"Block","src":"2583:73:6","statements":[{"expression":{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":880,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2597:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":882,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2622:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":883,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2636:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":885,"indexExpression":{"id":884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2642:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2636:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":881,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2612:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2612:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2597:48:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":888,"nodeType":"ExpressionStatement","src":"2597:48:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":873,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2560:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":874,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2564:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2564:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2560:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":890,"initializationExpression":{"assignments":[870],"declarations":[{"constant":false,"id":870,"mutability":"mutable","name":"i","nameLocation":"2553:1:6","nodeType":"VariableDeclaration","scope":890,"src":"2545:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":872,"initialValue":{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2557:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2545:13:6"},"loopExpression":{"expression":{"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2578:3:6","subExpression":{"id":877,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2578:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"2578:3:6"},"nodeType":"ForStatement","src":"2540:116:6"},{"expression":{"id":891,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2672:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":864,"id":892,"nodeType":"Return","src":"2665:19:6"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"2290:96:6","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2400:20:6","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"proof","nameLocation":"2440:5:6","nodeType":"VariableDeclaration","scope":894,"src":"2421:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":857,"nodeType":"ArrayTypeName","src":"2421:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"leaf","nameLocation":"2455:4:6","nodeType":"VariableDeclaration","scope":894,"src":"2447:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2420:40:6"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"2484:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2483:9:6"},"scope":1271,"src":"2391:300:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"3234:76:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":912,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"3269:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":913,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"3276:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":914,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"3288:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":911,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3251:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3251:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":916,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"3299:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3251:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":910,"id":918,"nodeType":"Return","src":"3244:59:6"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"2697:350:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3061:16:6","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"proof","nameLocation":"3104:5:6","nodeType":"VariableDeclaration","scope":920,"src":"3087:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3087:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":897,"nodeType":"ArrayTypeName","src":"3087:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"proofFlags","nameLocation":"3133:10:6","nodeType":"VariableDeclaration","scope":920,"src":"3119:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":899,"name":"bool","nodeType":"ElementaryTypeName","src":"3119:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"ArrayTypeName","src":"3119:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"root","nameLocation":"3161:4:6","nodeType":"VariableDeclaration","scope":920,"src":"3153:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3153:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"leaves","nameLocation":"3192:6:6","nodeType":"VariableDeclaration","scope":920,"src":"3175:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3175:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":905,"nodeType":"ArrayTypeName","src":"3175:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3077:127:6"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"3228:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":908,"name":"bool","nodeType":"ElementaryTypeName","src":"3228:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3227:6:6"},"scope":1271,"src":"3052:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"3715:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":938,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3758:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":939,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"3765:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":940,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3777:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":937,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"3732:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3732:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":942,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"3788:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3732:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":936,"id":944,"nodeType":"Return","src":"3725:67:6"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"3316:200:6","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3530:24:6","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"proof","nameLocation":"3583:5:6","nodeType":"VariableDeclaration","scope":946,"src":"3564:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":923,"nodeType":"ArrayTypeName","src":"3564:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"proofFlags","nameLocation":"3614:10:6","nodeType":"VariableDeclaration","scope":946,"src":"3598:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":925,"name":"bool","nodeType":"ElementaryTypeName","src":"3598:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"ArrayTypeName","src":"3598:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"root","nameLocation":"3642:4:6","nodeType":"VariableDeclaration","scope":946,"src":"3634:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3634:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"leaves","nameLocation":"3673:6:6","nodeType":"VariableDeclaration","scope":946,"src":"3656:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3656:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":931,"nodeType":"ArrayTypeName","src":"3656:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3554:131:6"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"3709:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":934,"name":"bool","nodeType":"ElementaryTypeName","src":"3709:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3708:6:6"},"scope":1271,"src":"3521:278:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"4753:1860:6","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"leavesLen","nameLocation":"5144:9:6","nodeType":"VariableDeclaration","scope":1090,"src":"5136:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"5136:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":965,"initialValue":{"expression":{"id":963,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"5156:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5156:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5136:33:6"},{"assignments":[967],"declarations":[{"constant":false,"id":967,"mutability":"mutable","name":"totalHashes","nameLocation":"5187:11:6","nodeType":"VariableDeclaration","scope":1090,"src":"5179:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5179:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":970,"initialValue":{"expression":{"id":968,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5201:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5201:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5179:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":972,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"5270:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":973,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5282:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5282:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5297:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5270:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":978,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5302:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:43:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5315:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5262:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5262:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"ExpressionStatement","src":"5262:87:6"},{"assignments":[987],"declarations":[{"constant":false,"id":987,"mutability":"mutable","name":"hashes","nameLocation":"5611:6:6","nodeType":"VariableDeclaration","scope":1090,"src":"5594:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5594:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":986,"nodeType":"ArrayTypeName","src":"5594:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":993,"initialValue":{"arguments":[{"id":991,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5634:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5620:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5624:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":989,"nodeType":"ArrayTypeName","src":"5624:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5620:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5594:52:6"},{"assignments":[995],"declarations":[{"constant":false,"id":995,"mutability":"mutable","name":"leafPos","nameLocation":"5664:7:6","nodeType":"VariableDeclaration","scope":1090,"src":"5656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"5656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":997,"initialValue":{"hexValue":"30","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5674:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5656:19:6"},{"assignments":[999],"declarations":[{"constant":false,"id":999,"mutability":"mutable","name":"hashPos","nameLocation":"5693:7:6","nodeType":"VariableDeclaration","scope":1090,"src":"5685:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1001,"initialValue":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5703:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5685:19:6"},{"assignments":[1003],"declarations":[{"constant":false,"id":1003,"mutability":"mutable","name":"proofPos","nameLocation":"5722:8:6","nodeType":"VariableDeclaration","scope":1090,"src":"5714:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"5714:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1005,"initialValue":{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5733:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5714:20:6"},{"body":{"id":1063,"nodeType":"Block","src":"6151:258:6","statements":[{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"a","nameLocation":"6173:1:6","nodeType":"VariableDeclaration","scope":1063,"src":"6165:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6165:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1030,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6177:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1019,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6187:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6177:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1025,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6219:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1028,"indexExpression":{"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6226:9:6","subExpression":{"id":1026,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"6226:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6219:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6177:59:6","trueExpression":{"baseExpression":{"id":1021,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6199:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1024,"indexExpression":{"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6206:9:6","subExpression":{"id":1022,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6199:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6165:71:6"},{"assignments":[1032],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"b","nameLocation":"6258:1:6","nodeType":"VariableDeclaration","scope":1063,"src":"6250:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1053,"initialValue":{"condition":{"baseExpression":{"id":1033,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"6262:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1035,"indexExpression":{"id":1034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6273:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6262:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1048,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6340:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1051,"indexExpression":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6346:10:6","subExpression":{"id":1049,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"6346:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6340:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6262:95:6","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1036,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6278:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1037,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6288:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6278:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1043,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6320:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1046,"indexExpression":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6327:9:6","subExpression":{"id":1044,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"6327:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6278:59:6","trueExpression":{"baseExpression":{"id":1039,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6300:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1042,"indexExpression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6307:9:6","subExpression":{"id":1040,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6307:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6300:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6250:107:6"},{"expression":{"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1054,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6371:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1056,"indexExpression":{"id":1055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6378:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6371:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"6393:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6396:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1057,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6383:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6383:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6371:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1062,"nodeType":"ExpressionStatement","src":"6371:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6129:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1011,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"6133:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6129:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1064,"initializationExpression":{"assignments":[1007],"declarations":[{"constant":false,"id":1007,"mutability":"mutable","name":"i","nameLocation":"6122:1:6","nodeType":"VariableDeclaration","scope":1064,"src":"6114:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"6114:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1009,"initialValue":{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6114:13:6"},"loopExpression":{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6146:3:6","subExpression":{"id":1013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6146:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1015,"nodeType":"ExpressionStatement","src":"6146:3:6"},"nodeType":"ForStatement","src":"6109:300:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"6423:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6437:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6423:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6505:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6517:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6505:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1087,"nodeType":"Block","src":"6567:40:6","statements":[{"expression":{"baseExpression":{"id":1083,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6588:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1085,"indexExpression":{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6588:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":960,"id":1086,"nodeType":"Return","src":"6581:15:6"}]},"id":1088,"nodeType":"IfStatement","src":"6501:106:6","trueBody":{"id":1082,"nodeType":"Block","src":"6520:41:6","statements":[{"expression":{"baseExpression":{"id":1078,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6541:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1080,"indexExpression":{"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6548:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6541:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":960,"id":1081,"nodeType":"Return","src":"6534:16:6"}]}},"id":1089,"nodeType":"IfStatement","src":"6419:188:6","trueBody":{"id":1074,"nodeType":"Block","src":"6440:55:6","statements":[{"expression":{"baseExpression":{"id":1068,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6461:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1072,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"6468:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6482:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6468:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6461:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":960,"id":1073,"nodeType":"Return","src":"6454:30:6"}]}}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"3805:768:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4587:17:6","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"proof","nameLocation":"4631:5:6","nodeType":"VariableDeclaration","scope":1091,"src":"4614:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4614:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":949,"nodeType":"ArrayTypeName","src":"4614:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"proofFlags","nameLocation":"4660:10:6","nodeType":"VariableDeclaration","scope":1091,"src":"4646:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":951,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":952,"nodeType":"ArrayTypeName","src":"4646:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"leaves","nameLocation":"4697:6:6","nodeType":"VariableDeclaration","scope":1091,"src":"4680:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4680:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":955,"nodeType":"ArrayTypeName","src":"4680:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4604:105:6"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"merkleRoot","nameLocation":"4741:10:6","nodeType":"VariableDeclaration","scope":1091,"src":"4733:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4733:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4732:20:6"},"scope":1271,"src":"4578:2035:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1235,"nodeType":"Block","src":"7013:1860:6","statements":[{"assignments":[1107],"declarations":[{"constant":false,"id":1107,"mutability":"mutable","name":"leavesLen","nameLocation":"7404:9:6","nodeType":"VariableDeclaration","scope":1235,"src":"7396:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1110,"initialValue":{"expression":{"id":1108,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"7416:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7416:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7396:33:6"},{"assignments":[1112],"declarations":[{"constant":false,"id":1112,"mutability":"mutable","name":"totalHashes","nameLocation":"7447:11:6","nodeType":"VariableDeclaration","scope":1235,"src":"7439:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"7439:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1115,"initialValue":{"expression":{"id":1113,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"7461:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7461:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7439:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"7530:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1118,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"7542:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7542:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7557:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7530:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1123,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"7562:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:43:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7575:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7522:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7522:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1127,"nodeType":"ExpressionStatement","src":"7522:87:6"},{"assignments":[1132],"declarations":[{"constant":false,"id":1132,"mutability":"mutable","name":"hashes","nameLocation":"7871:6:6","nodeType":"VariableDeclaration","scope":1235,"src":"7854:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7854:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1131,"nodeType":"ArrayTypeName","src":"7854:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1138,"initialValue":{"arguments":[{"id":1136,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"7894:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7880:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7884:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1134,"nodeType":"ArrayTypeName","src":"7884:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7880:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7854:52:6"},{"assignments":[1140],"declarations":[{"constant":false,"id":1140,"mutability":"mutable","name":"leafPos","nameLocation":"7924:7:6","nodeType":"VariableDeclaration","scope":1235,"src":"7916:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1142,"initialValue":{"hexValue":"30","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7934:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7916:19:6"},{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"hashPos","nameLocation":"7953:7:6","nodeType":"VariableDeclaration","scope":1235,"src":"7945:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"7945:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1146,"initialValue":{"hexValue":"30","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7945:19:6"},{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"proofPos","nameLocation":"7982:8:6","nodeType":"VariableDeclaration","scope":1235,"src":"7974:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"7974:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1150,"initialValue":{"hexValue":"30","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7993:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7974:20:6"},{"body":{"id":1208,"nodeType":"Block","src":"8411:258:6","statements":[{"assignments":[1162],"declarations":[{"constant":false,"id":1162,"mutability":"mutable","name":"a","nameLocation":"8433:1:6","nodeType":"VariableDeclaration","scope":1208,"src":"8425:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1175,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"8437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1164,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"8447:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8437:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1170,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"8479:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1173,"indexExpression":{"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8486:9:6","subExpression":{"id":1171,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"8486:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8479:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:59:6","trueExpression":{"baseExpression":{"id":1166,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"8459:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1169,"indexExpression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8466:9:6","subExpression":{"id":1167,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"8466:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8459:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8425:71:6"},{"assignments":[1177],"declarations":[{"constant":false,"id":1177,"mutability":"mutable","name":"b","nameLocation":"8518:1:6","nodeType":"VariableDeclaration","scope":1208,"src":"8510:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8510:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1198,"initialValue":{"condition":{"baseExpression":{"id":1178,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8522:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1180,"indexExpression":{"id":1179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"8533:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8522:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1193,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"8600:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1196,"indexExpression":{"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8606:10:6","subExpression":{"id":1194,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"8606:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8600:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8522:95:6","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"8538:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1182,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"8548:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8538:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1188,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"8580:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1191,"indexExpression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8587:9:6","subExpression":{"id":1189,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"8587:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8580:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8538:59:6","trueExpression":{"baseExpression":{"id":1184,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"8560:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1187,"indexExpression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8567:9:6","subExpression":{"id":1185,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"8567:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8560:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8510:107:6"},{"expression":{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1199,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"8631:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1201,"indexExpression":{"id":1200,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"8638:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8631:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"8653:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"8656:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1202,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8643:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8631:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1207,"nodeType":"ExpressionStatement","src":"8631:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"8389:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1156,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8393:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8389:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1209,"initializationExpression":{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"i","nameLocation":"8382:1:6","nodeType":"VariableDeclaration","scope":1209,"src":"8374:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"8374:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1154,"initialValue":{"hexValue":"30","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8386:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8374:13:6"},"loopExpression":{"expression":{"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8406:3:6","subExpression":{"id":1158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"8406:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1160,"nodeType":"ExpressionStatement","src":"8406:3:6"},"nodeType":"ForStatement","src":"8369:300:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1210,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8683:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8683:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"8765:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8777:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8765:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1232,"nodeType":"Block","src":"8827:40:6","statements":[{"expression":{"baseExpression":{"id":1228,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"8848:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1230,"indexExpression":{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8848:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1105,"id":1231,"nodeType":"Return","src":"8841:15:6"}]},"id":1233,"nodeType":"IfStatement","src":"8761:106:6","trueBody":{"id":1227,"nodeType":"Block","src":"8780:41:6","statements":[{"expression":{"baseExpression":{"id":1223,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"8801:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1225,"indexExpression":{"hexValue":"30","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8808:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8801:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1105,"id":1226,"nodeType":"Return","src":"8794:16:6"}]}},"id":1234,"nodeType":"IfStatement","src":"8679:188:6","trueBody":{"id":1219,"nodeType":"Block","src":"8700:55:6","statements":[{"expression":{"baseExpression":{"id":1213,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"8721:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1217,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8728:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8742:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8728:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8721:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1105,"id":1218,"nodeType":"Return","src":"8714:30:6"}]}}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"6619:202:6","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6835:25:6","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"proof","nameLocation":"6889:5:6","nodeType":"VariableDeclaration","scope":1236,"src":"6870:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1094,"nodeType":"ArrayTypeName","src":"6870:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"proofFlags","nameLocation":"6920:10:6","nodeType":"VariableDeclaration","scope":1236,"src":"6904:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1096,"name":"bool","nodeType":"ElementaryTypeName","src":"6904:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"ArrayTypeName","src":"6904:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"leaves","nameLocation":"6957:6:6","nodeType":"VariableDeclaration","scope":1236,"src":"6940:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6940:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1100,"nodeType":"ArrayTypeName","src":"6940:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6860:109:6"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"merkleRoot","nameLocation":"7001:10:6","nodeType":"VariableDeclaration","scope":1236,"src":"6993:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6993:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6992:20:6"},"scope":1271,"src":"6826:2047:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"8951:75:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"8968:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8972:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8968:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1253,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"9014:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"9017:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1252,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"8999:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8968:51:6","trueExpression":{"arguments":[{"id":1249,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"8991:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1250,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8994:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1248,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"8976:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8976:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1244,"id":1257,"nodeType":"Return","src":"8961:58:6"}]},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"8888:9:6","nodeType":"FunctionDefinition","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"a","nameLocation":"8906:1:6","nodeType":"VariableDeclaration","scope":1259,"src":"8898:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8898:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"b","nameLocation":"8917:1:6","nodeType":"VariableDeclaration","scope":1259,"src":"8909:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8909:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8897:22:6"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"8942:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8942:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8941:9:6"},"scope":1271,"src":"8879:147:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1269,"nodeType":"Block","src":"9115:178:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9177:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9198:4:6","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9204:1:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9191:6:6"},"nodeType":"YulFunctionCall","src":"9191:15:6"},"nodeType":"YulExpressionStatement","src":"9191:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9226:4:6","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9232:1:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9219:6:6"},"nodeType":"YulFunctionCall","src":"9219:15:6"},"nodeType":"YulExpressionStatement","src":"9219:15:6"},{"nodeType":"YulAssignment","src":"9247:30:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9266:4:6","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9272:4:6","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9256:9:6"},"nodeType":"YulFunctionCall","src":"9256:21:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9247:5:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1261,"isOffset":false,"isSlot":false,"src":"9204:1:6","valueSize":1},{"declaration":1263,"isOffset":false,"isSlot":false,"src":"9232:1:6","valueSize":1},{"declaration":1266,"isOffset":false,"isSlot":false,"src":"9247:5:6","valueSize":1}],"id":1268,"nodeType":"InlineAssembly","src":"9168:119:6"}]},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9041:14:6","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"a","nameLocation":"9064:1:6","nodeType":"VariableDeclaration","scope":1270,"src":"9056:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9056:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"b","nameLocation":"9075:1:6","nodeType":"VariableDeclaration","scope":1270,"src":"9067:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9067:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9055:22:6"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"value","nameLocation":"9108:5:6","nodeType":"VariableDeclaration","scope":1270,"src":"9100:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9100:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9099:15:6"},"scope":1271,"src":"9032:261:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1272,"src":"802:8493:6","usedErrors":[]}],"src":"118:9178:6"},"id":6},"contracts/MerkleDistributor.sol":{"ast":{"absolutePath":"contracts/MerkleDistributor.sol","exportedSymbols":{"ERC721Holder":[439],"IERC20":[77],"IERC721Receiver":[412],"MerkleDistributor":[1400],"MerkleProof":[1271],"SafeERC20":[394]},"id":1401,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1273,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"45:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":395,"src":"70:90:7","symbolAliases":[{"foreign":{"id":1274,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"78:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1275,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"86:9:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","id":1277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":440,"src":"162:69:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":1272,"src":"232:87:7","symbolAliases":[{"foreign":{"id":1278,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"src":"240:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1280,"name":"ERC721Holder","nodeType":"IdentifierPath","referencedDeclaration":439,"src":"427:12:7"},"id":1281,"nodeType":"InheritanceSpecifier","src":"427:12:7"}],"canonicalName":"MerkleDistributor","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1400,"linearizedBaseContracts":[1400,439,412],"name":"MerkleDistributor","nameLocation":"406:17:7","nodeType":"ContractDefinition","nodes":[{"id":1285,"libraryName":{"id":1282,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":394,"src":"452:9:7"},"nodeType":"UsingForDirective","src":"446:27:7","typeName":{"id":1284,"nodeType":"UserDefinedTypeName","pathNode":{"id":1283,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"466:6:7"},"referencedDeclaration":77,"src":"466:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"9d143e8e","id":1287,"mutability":"immutable","name":"tokenERC20","nameLocation":"503:10:7","nodeType":"VariableDeclaration","scope":1400,"src":"478:35:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e9adc770","id":1289,"mutability":"immutable","name":"tokenERC721","nameLocation":"544:11:7","nodeType":"VariableDeclaration","scope":1400,"src":"519:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"09c33c67","id":1291,"mutability":"immutable","name":"tokenERC1155","nameLocation":"586:12:7","nodeType":"VariableDeclaration","scope":1400,"src":"561:37:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"561:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":1293,"mutability":"immutable","name":"merkleRoot","nameLocation":"677:10:7","nodeType":"VariableDeclaration","scope":1400,"src":"652:35:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"652:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"73f95d6b","id":1295,"mutability":"mutable","name":"dropERC20","nameLocation":"708:9:7","nodeType":"VariableDeclaration","scope":1400,"src":"693:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":1299,"mutability":"mutable","name":"claimedAddress","nameLocation":"760:14:7","nodeType":"VariableDeclaration","scope":1400,"src":"724:50:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1298,"keyType":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"724:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"743:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"id":1305,"name":"ClaimedERC20","nameLocation":"787:12:7","nodeType":"EventDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"indexed":true,"mutability":"mutable","name":"_from","nameLocation":"816:5:7","nodeType":"VariableDeclaration","scope":1305,"src":"800:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"indexed":false,"mutability":"mutable","name":"_dropERC20","nameLocation":"831:10:7","nodeType":"VariableDeclaration","scope":1305,"src":"823:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"799:43:7"},"src":"781:62:7"},{"body":{"id":1338,"nodeType":"Block","src":"1003:170:7","statements":[{"expression":{"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1318,"name":"tokenERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1013:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1319,"name":"token_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"1026:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1013:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1321,"nodeType":"ExpressionStatement","src":"1013:19:7"},{"expression":{"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1322,"name":"tokenERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"1042:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1323,"name":"token721_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"1056:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1042:23:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1325,"nodeType":"ExpressionStatement","src":"1042:23:7"},{"expression":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1326,"name":"tokenERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1075:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1327,"name":"token1155_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"1090:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1075:25:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1329,"nodeType":"ExpressionStatement","src":"1075:25:7"},{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1330,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1110:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1331,"name":"merkleRoot_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1123:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1110:24:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1333,"nodeType":"ExpressionStatement","src":"1110:24:7"},{"expression":{"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1334,"name":"dropERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1144:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1335,"name":"dropERC20_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"1156:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1144:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1337,"nodeType":"ExpressionStatement","src":"1144:22:7"}]},"id":1339,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"token_","nameLocation":"878:6:7","nodeType":"VariableDeclaration","scope":1339,"src":"870:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"token721_","nameLocation":"902:9:7","nodeType":"VariableDeclaration","scope":1339,"src":"894:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"894:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"token1155_","nameLocation":"929:10:7","nodeType":"VariableDeclaration","scope":1339,"src":"921:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"merkleRoot_","nameLocation":"957:11:7","nodeType":"VariableDeclaration","scope":1339,"src":"949:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"949:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"dropERC20_","nameLocation":"986:10:7","nodeType":"VariableDeclaration","scope":1339,"src":"978:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"860:142:7"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[],"src":"1003:0:7"},"scope":1400,"src":"849:324:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1398,"nodeType":"Block","src":"1241:508:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1346,"name":"claimedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"1259:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1349,"indexExpression":{"expression":{"id":1347,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1274:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1274:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1259:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1289:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1259:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d6564204552433230","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1292:15:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613","typeString":"literal_string \"Claimed ERC20\""},"value":"Claimed ERC20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613","typeString":"literal_string \"Claimed ERC20\""}],"id":1345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1251:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1251:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"ExpressionStatement","src":"1251:57:7"},{"assignments":[1356],"declarations":[{"constant":false,"id":1356,"mutability":"mutable","name":"node","nameLocation":"1363:4:7","nodeType":"VariableDeclaration","scope":1398,"src":"1355:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1355:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1364,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1397:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1397:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1358,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1380:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1380:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1380:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1357,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1370:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1370:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1355:54:7"},{"condition":{"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1423:50:7","subExpression":{"arguments":[{"id":1367,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"1443:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1368,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1456:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1369,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1468:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1365,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1424:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1271_$","typeString":"type(library MerkleProof)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":793,"src":"1424:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1424:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1379,"nodeType":"IfStatement","src":"1419:149:7","trueBody":{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1372,"name":"claimedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"1538:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1375,"indexExpression":{"expression":{"id":1373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1553:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1553:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1538:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1567:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1538:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1378,"nodeType":"ExpressionStatement","src":"1538:30:7"}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1628:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1628:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"dropERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1640:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1382,"name":"tokenERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1607:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1381,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1600:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1600:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1600:27:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1600:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1664:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":1380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1579:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1579:112:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"1579:112:7"},{"eventCall":{"arguments":[{"expression":{"id":1393,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1720:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1720:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1395,"name":"dropERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1732:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1392,"name":"ClaimedERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"1707:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1707:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1397,"nodeType":"EmitStatement","src":"1702:40:7"}]},"functionSelector":"b391c508","id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1188:5:7","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"merkleProof","nameLocation":"1213:11:7","nodeType":"VariableDeclaration","scope":1399,"src":"1194:30:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1194:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1341,"nodeType":"ArrayTypeName","src":"1194:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1193:32:7"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"1241:0:7"},"scope":1400,"src":"1179:570:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1401,"src":"397:1354:7","usedErrors":[]}],"src":"45:1707:7"},"id":7}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395ffd9cb67c9e2ab8cfe3e7d25e939fe1dcfb9ddde4bcf47ec8fa8b7581f0b664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5F REVERT SWAP13 0xB6 PUSH29 0x9E2AB8CFE3E7D25E939FE1DCFB9DDDE4BCF47EC8FA8B7581F0B664736F PUSH13 0x63430008090033000000000000 ","sourceMap":"707:3748:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395ffd9cb67c9e2ab8cfe3e7d25e939fe1dcfb9ddde4bcf47ec8fa8b7581f0b664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5F REVERT SWAP13 0xB6 PUSH29 0x9E2AB8CFE3E7D25E939FE1DCFB9DDDE4BCF47EC8FA8B7581F0B664736F PUSH13 0x63430008090033000000000000 ","sourceMap":"707:3748:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"ERC721Holder":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea26469706673582212205ef00b9431e3690e56a7dc4174a44751d429ae14e701ace89e9130386ee105f564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CREATE SIGNEXTEND SWAP5 BALANCE 0xE3 PUSH10 0xE56A7DC4174A44751D4 0x29 0xAE EQ 0xE7 ADD 0xAC 0xE8 SWAP15 SWAP2 ADDRESS CODESIZE PUSH15 0xE105F564736F6C6343000809003300 ","sourceMap":"399:391:4:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@onERC721Received_438":{"entryPoint":96,"id":438,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":498,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":610,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":785,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":800,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":116,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":434,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":168,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":741,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":136,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":230,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":483,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":358,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":311,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":284,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":131,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":126,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":294,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":186,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":240,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4851:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"379:81:8","statements":[{"nodeType":"YulAssignment","src":"389:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:8"},"nodeType":"YulFunctionCall","src":"400:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:8","type":""}],"src":"334:126:8"},{"body":{"nodeType":"YulBlock","src":"511:51:8","statements":[{"nodeType":"YulAssignment","src":"521:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:8"},"nodeType":"YulFunctionCall","src":"532:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:8","type":""}],"src":"466:96:8"},{"body":{"nodeType":"YulBlock","src":"611:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:8"},"nodeType":"YulFunctionCall","src":"670:12:8"},"nodeType":"YulExpressionStatement","src":"670:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:8"},"nodeType":"YulFunctionCall","src":"641:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:8"},"nodeType":"YulFunctionCall","src":"631:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:8"},"nodeType":"YulFunctionCall","src":"624:43:8"},"nodeType":"YulIf","src":"621:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:8","type":""}],"src":"568:122:8"},{"body":{"nodeType":"YulBlock","src":"748:87:8","statements":[{"nodeType":"YulAssignment","src":"758:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:8"},"nodeType":"YulFunctionCall","src":"767:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:8"},"nodeType":"YulFunctionCall","src":"796:33:8"},"nodeType":"YulExpressionStatement","src":"796:33:8"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:8","type":""}],"src":"696:139:8"},{"body":{"nodeType":"YulBlock","src":"886:32:8","statements":[{"nodeType":"YulAssignment","src":"896:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:8","type":""}],"src":"841:77:8"},{"body":{"nodeType":"YulBlock","src":"967:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:8"},"nodeType":"YulFunctionCall","src":"1026:12:8"},"nodeType":"YulExpressionStatement","src":"1026:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:8"},"nodeType":"YulFunctionCall","src":"997:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:8"},"nodeType":"YulFunctionCall","src":"987:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:8"},"nodeType":"YulFunctionCall","src":"980:43:8"},"nodeType":"YulIf","src":"977:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:8","type":""}],"src":"924:122:8"},{"body":{"nodeType":"YulBlock","src":"1104:87:8","statements":[{"nodeType":"YulAssignment","src":"1114:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:8"},"nodeType":"YulFunctionCall","src":"1123:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:8"},"nodeType":"YulFunctionCall","src":"1152:33:8"},"nodeType":"YulExpressionStatement","src":"1152:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:8","type":""}],"src":"1052:139:8"},{"body":{"nodeType":"YulBlock","src":"1286:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1306:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1296:6:8"},"nodeType":"YulFunctionCall","src":"1296:12:8"},"nodeType":"YulExpressionStatement","src":"1296:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1197:117:8"},{"body":{"nodeType":"YulBlock","src":"1409:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1426:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1429:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1419:6:8"},"nodeType":"YulFunctionCall","src":"1419:12:8"},"nodeType":"YulExpressionStatement","src":"1419:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1320:117:8"},{"body":{"nodeType":"YulBlock","src":"1491:54:8","statements":[{"nodeType":"YulAssignment","src":"1501:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1519:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1526:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1515:3:8"},"nodeType":"YulFunctionCall","src":"1515:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1535:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1531:3:8"},"nodeType":"YulFunctionCall","src":"1531:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1511:3:8"},"nodeType":"YulFunctionCall","src":"1511:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1501:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1474:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1484:6:8","type":""}],"src":"1443:102:8"},{"body":{"nodeType":"YulBlock","src":"1579:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1596:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1599:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1589:6:8"},"nodeType":"YulFunctionCall","src":"1589:88:8"},"nodeType":"YulExpressionStatement","src":"1589:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1693:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1696:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1686:6:8"},"nodeType":"YulFunctionCall","src":"1686:15:8"},"nodeType":"YulExpressionStatement","src":"1686:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1720:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1710:6:8"},"nodeType":"YulFunctionCall","src":"1710:15:8"},"nodeType":"YulExpressionStatement","src":"1710:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1551:180:8"},{"body":{"nodeType":"YulBlock","src":"1780:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1790:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1812:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1842:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1820:21:8"},"nodeType":"YulFunctionCall","src":"1820:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:8"},"nodeType":"YulFunctionCall","src":"1808:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1794:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1959:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1961:16:8"},"nodeType":"YulFunctionCall","src":"1961:18:8"},"nodeType":"YulExpressionStatement","src":"1961:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1902:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1914:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1899:2:8"},"nodeType":"YulFunctionCall","src":"1899:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1938:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1950:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1935:2:8"},"nodeType":"YulFunctionCall","src":"1935:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1896:2:8"},"nodeType":"YulFunctionCall","src":"1896:62:8"},"nodeType":"YulIf","src":"1893:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1997:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2001:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1990:6:8"},"nodeType":"YulFunctionCall","src":"1990:22:8"},"nodeType":"YulExpressionStatement","src":"1990:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1766:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"1774:4:8","type":""}],"src":"1737:281:8"},{"body":{"nodeType":"YulBlock","src":"2065:88:8","statements":[{"nodeType":"YulAssignment","src":"2075:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2085:18:8"},"nodeType":"YulFunctionCall","src":"2085:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2075:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2134:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"2142:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2114:19:8"},"nodeType":"YulFunctionCall","src":"2114:33:8"},"nodeType":"YulExpressionStatement","src":"2114:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2049:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2058:6:8","type":""}],"src":"2024:129:8"},{"body":{"nodeType":"YulBlock","src":"2225:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"2330:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2332:16:8"},"nodeType":"YulFunctionCall","src":"2332:18:8"},"nodeType":"YulExpressionStatement","src":"2332:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2302:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2310:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2299:2:8"},"nodeType":"YulFunctionCall","src":"2299:30:8"},"nodeType":"YulIf","src":"2296:56:8"},{"nodeType":"YulAssignment","src":"2362:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2392:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2370:21:8"},"nodeType":"YulFunctionCall","src":"2370:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2362:4:8"}]},{"nodeType":"YulAssignment","src":"2436:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2448:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"2454:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:8"},"nodeType":"YulFunctionCall","src":"2444:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2436:4:8"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2209:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2220:4:8","type":""}],"src":"2159:307:8"},{"body":{"nodeType":"YulBlock","src":"2523:103:8","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2546:3:8"},{"name":"src","nodeType":"YulIdentifier","src":"2551:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2556:6:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2533:12:8"},"nodeType":"YulFunctionCall","src":"2533:30:8"},"nodeType":"YulExpressionStatement","src":"2533:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2604:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2609:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2600:3:8"},"nodeType":"YulFunctionCall","src":"2600:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"2618:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2593:6:8"},"nodeType":"YulFunctionCall","src":"2593:27:8"},"nodeType":"YulExpressionStatement","src":"2593:27:8"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2505:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2510:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"2515:6:8","type":""}],"src":"2472:154:8"},{"body":{"nodeType":"YulBlock","src":"2715:327:8","statements":[{"nodeType":"YulAssignment","src":"2725:74:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2791:6:8"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2750:40:8"},"nodeType":"YulFunctionCall","src":"2750:48:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2734:15:8"},"nodeType":"YulFunctionCall","src":"2734:65:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2725:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2815:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"2822:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2808:6:8"},"nodeType":"YulFunctionCall","src":"2808:21:8"},"nodeType":"YulExpressionStatement","src":"2808:21:8"},{"nodeType":"YulVariableDeclaration","src":"2838:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2853:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2860:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2849:3:8"},"nodeType":"YulFunctionCall","src":"2849:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2842:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2903:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2905:77:8"},"nodeType":"YulFunctionCall","src":"2905:79:8"},"nodeType":"YulExpressionStatement","src":"2905:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2884:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2889:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2880:3:8"},"nodeType":"YulFunctionCall","src":"2880:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"2898:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2877:2:8"},"nodeType":"YulFunctionCall","src":"2877:25:8"},"nodeType":"YulIf","src":"2874:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3019:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"3024:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3029:6:8"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"2995:23:8"},"nodeType":"YulFunctionCall","src":"2995:41:8"},"nodeType":"YulExpressionStatement","src":"2995:41:8"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2688:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"2693:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2701:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2709:5:8","type":""}],"src":"2632:410:8"},{"body":{"nodeType":"YulBlock","src":"3122:277:8","statements":[{"body":{"nodeType":"YulBlock","src":"3171:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3173:77:8"},"nodeType":"YulFunctionCall","src":"3173:79:8"},"nodeType":"YulExpressionStatement","src":"3173:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3150:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3158:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3146:3:8"},"nodeType":"YulFunctionCall","src":"3146:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"3165:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3142:3:8"},"nodeType":"YulFunctionCall","src":"3142:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3135:6:8"},"nodeType":"YulFunctionCall","src":"3135:35:8"},"nodeType":"YulIf","src":"3132:122:8"},{"nodeType":"YulVariableDeclaration","src":"3263:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3290:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3277:12:8"},"nodeType":"YulFunctionCall","src":"3277:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3267:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3306:87:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3366:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3374:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3362:3:8"},"nodeType":"YulFunctionCall","src":"3362:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"3381:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"3389:3:8"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3315:46:8"},"nodeType":"YulFunctionCall","src":"3315:78:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3306:5:8"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3100:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"3108:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3116:5:8","type":""}],"src":"3061:338:8"},{"body":{"nodeType":"YulBlock","src":"3531:817:8","statements":[{"body":{"nodeType":"YulBlock","src":"3578:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3580:77:8"},"nodeType":"YulFunctionCall","src":"3580:79:8"},"nodeType":"YulExpressionStatement","src":"3580:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3552:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3561:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3548:3:8"},"nodeType":"YulFunctionCall","src":"3548:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3573:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3544:3:8"},"nodeType":"YulFunctionCall","src":"3544:33:8"},"nodeType":"YulIf","src":"3541:120:8"},{"nodeType":"YulBlock","src":"3671:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3686:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3700:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3690:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3715:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3750:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3761:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3746:3:8"},"nodeType":"YulFunctionCall","src":"3746:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3770:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3725:20:8"},"nodeType":"YulFunctionCall","src":"3725:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3715:6:8"}]}]},{"nodeType":"YulBlock","src":"3798:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3813:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3827:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3817:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3843:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3878:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3889:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3874:3:8"},"nodeType":"YulFunctionCall","src":"3874:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3898:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3853:20:8"},"nodeType":"YulFunctionCall","src":"3853:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3843:6:8"}]}]},{"nodeType":"YulBlock","src":"3926:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3941:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3955:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3945:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3971:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4006:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4017:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4002:3:8"},"nodeType":"YulFunctionCall","src":"4002:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4026:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3981:20:8"},"nodeType":"YulFunctionCall","src":"3981:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3971:6:8"}]}]},{"nodeType":"YulBlock","src":"4054:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4069:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4100:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4111:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4096:3:8"},"nodeType":"YulFunctionCall","src":"4096:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4083:12:8"},"nodeType":"YulFunctionCall","src":"4083:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4073:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4162:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4164:77:8"},"nodeType":"YulFunctionCall","src":"4164:79:8"},"nodeType":"YulExpressionStatement","src":"4164:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4134:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4142:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4131:2:8"},"nodeType":"YulFunctionCall","src":"4131:30:8"},"nodeType":"YulIf","src":"4128:117:8"},{"nodeType":"YulAssignment","src":"4259:72:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4303:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4314:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4299:3:8"},"nodeType":"YulFunctionCall","src":"4299:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4323:7:8"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4269:29:8"},"nodeType":"YulFunctionCall","src":"4269:62:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4259:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3477:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3488:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3500:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3508:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3516:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3524:6:8","type":""}],"src":"3405:943:8"},{"body":{"nodeType":"YulBlock","src":"4398:105:8","statements":[{"nodeType":"YulAssignment","src":"4408:89:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4423:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4430:66:8","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4419:3:8"},"nodeType":"YulFunctionCall","src":"4419:78:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4408:7:8"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4380:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4390:7:8","type":""}],"src":"4354:149:8"},{"body":{"nodeType":"YulBlock","src":"4572:52:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4589:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4611:5:8"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"4594:16:8"},"nodeType":"YulFunctionCall","src":"4594:23:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4582:6:8"},"nodeType":"YulFunctionCall","src":"4582:36:8"},"nodeType":"YulExpressionStatement","src":"4582:36:8"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4560:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4567:3:8","type":""}],"src":"4509:115:8"},{"body":{"nodeType":"YulBlock","src":"4726:122:8","statements":[{"nodeType":"YulAssignment","src":"4736:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4748:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4759:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:8"},"nodeType":"YulFunctionCall","src":"4744:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4736:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4814:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4827:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4838:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4823:3:8"},"nodeType":"YulFunctionCall","src":"4823:17:8"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"4772:41:8"},"nodeType":"YulFunctionCall","src":"4772:69:8"},"nodeType":"YulExpressionStatement","src":"4772:69:8"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4698:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4710:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4721:4:8","type":""}],"src":"4630:218:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea26469706673582212205ef00b9431e3690e56a7dc4174a44751d429ae14e701ace89e9130386ee105f564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CREATE SIGNEXTEND SWAP5 BALANCE 0xE3 PUSH10 0xE56A7DC4174A44751D4 0x29 0xAE EQ 0xE7 ADD 0xAC 0xE8 SWAP15 SWAP2 ADDRESS CODESIZE PUSH15 0xE105F564736F6C6343000809003300 ","sourceMap":"399:391:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:154::-;2556:6;2551:3;2546;2533:30;2618:1;2609:6;2604:3;2600:16;2593:27;2472:154;;;:::o;2632:410::-;2709:5;2734:65;2750:48;2791:6;2750:48;:::i;:::-;2734:65;:::i;:::-;2725:74;;2822:6;2815:5;2808:21;2860:4;2853:5;2849:16;2898:3;2889:6;2884:3;2880:16;2877:25;2874:112;;;2905:79;;:::i;:::-;2874:112;2995:41;3029:6;3024:3;3019;2995:41;:::i;:::-;2715:327;2632:410;;;;;:::o;3061:338::-;3116:5;3165:3;3158:4;3150:6;3146:17;3142:27;3132:122;;3173:79;;:::i;:::-;3132:122;3290:6;3277:20;3315:78;3389:3;3381:6;3374:4;3366:6;3362:17;3315:78;:::i;:::-;3306:87;;3122:277;3061:338;;;;:::o;3405:943::-;3500:6;3508;3516;3524;3573:3;3561:9;3552:7;3548:23;3544:33;3541:120;;;3580:79;;:::i;:::-;3541:120;3700:1;3725:53;3770:7;3761:6;3750:9;3746:22;3725:53;:::i;:::-;3715:63;;3671:117;3827:2;3853:53;3898:7;3889:6;3878:9;3874:22;3853:53;:::i;:::-;3843:63;;3798:118;3955:2;3981:53;4026:7;4017:6;4006:9;4002:22;3981:53;:::i;:::-;3971:63;;3926:118;4111:2;4100:9;4096:18;4083:32;4142:18;4134:6;4131:30;4128:117;;;4164:79;;:::i;:::-;4128:117;4269:62;4323:7;4314:6;4303:9;4299:22;4269:62;:::i;:::-;4259:72;;4054:287;3405:943;;;;;;;:::o;4354:149::-;4390:7;4430:66;4423:5;4419:78;4408:89;;4354:149;;;:::o;4509:115::-;4594:23;4611:5;4594:23;:::i;:::-;4589:3;4582:36;4509:115;;:::o;4630:218::-;4721:4;4759:2;4748:9;4744:18;4736:26;;4772:69;4838:1;4827:9;4823:17;4814:6;4772:69;:::i;:::-;4630:218;;;;:::o"},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220802a43d16b56d54d3186b9e894a204a536592a0e2ae45a746d0f0087c166d37964736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2A NUMBER 0xD1 PUSH12 0x56D54D3186B9E894A204A536 MSIZE 0x2A 0xE 0x2A 0xE4 GAS PUSH21 0x6D0F0087C166D37964736F6C634300080900330000 ","sourceMap":"194:8964:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220802a43d16b56d54d3186b9e894a204a536592a0e2ae45a746d0f0087c166d37964736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2A NUMBER 0xD1 PUSH12 0x56D54D3186B9E894A204A536 MSIZE 0x2A 0xE 0x2A 0xE4 GAS PUSH21 0x6D0F0087C166D37964736F6C634300080900330000 ","sourceMap":"194:8964:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064416e0e66ec86e7847c58105f784c61843b406ae88d592590884d9a3609c72f64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x416E0E66EC DUP7 0xE7 DUP5 PUSH29 0x58105F784C61843B406AE88D592590884D9A3609C72F64736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"802:8493:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064416e0e66ec86e7847c58105f784c61843b406ae88d592590884d9a3609c72f64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x416E0E66EC DUP7 0xE7 DUP5 PUSH29 0x58105F784C61843B406AE88D592590884D9A3609C72F64736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"802:8493:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]}},\"version\":1}"}},"contracts/MerkleDistributor.sol":{"MerkleDistributor":{"abi":[{"inputs":[{"internalType":"address","name":"token_","type":"address"},{"internalType":"address","name":"token721_","type":"address"},{"internalType":"address","name":"token1155_","type":"address"},{"internalType":"bytes32","name":"merkleRoot_","type":"bytes32"},{"internalType":"uint256","name":"dropERC20_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"uint256","name":"_dropERC20","type":"uint256"}],"name":"ClaimedERC20","type":"event"},{"inputs":[{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dropERC20","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenERC1155","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenERC20","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenERC721","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1339":{"entryPoint":null,"id":1339,"parameterSlots":5,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":380,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":439,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint256_fromMemory":{"entryPoint":462,"id":null,"parameterSlots":2,"returnSlots":5},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":344,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":243,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":403,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":238,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":295,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":354,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":413,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2545:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"379:81:8","statements":[{"nodeType":"YulAssignment","src":"389:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:8"},"nodeType":"YulFunctionCall","src":"400:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:8","type":""}],"src":"334:126:8"},{"body":{"nodeType":"YulBlock","src":"511:51:8","statements":[{"nodeType":"YulAssignment","src":"521:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:8"},"nodeType":"YulFunctionCall","src":"532:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:8","type":""}],"src":"466:96:8"},{"body":{"nodeType":"YulBlock","src":"611:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:8"},"nodeType":"YulFunctionCall","src":"670:12:8"},"nodeType":"YulExpressionStatement","src":"670:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:8"},"nodeType":"YulFunctionCall","src":"641:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:8"},"nodeType":"YulFunctionCall","src":"631:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:8"},"nodeType":"YulFunctionCall","src":"624:43:8"},"nodeType":"YulIf","src":"621:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:8","type":""}],"src":"568:122:8"},{"body":{"nodeType":"YulBlock","src":"759:80:8","statements":[{"nodeType":"YulAssignment","src":"769:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:8"},"nodeType":"YulFunctionCall","src":"778:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:8"},"nodeType":"YulFunctionCall","src":"800:33:8"},"nodeType":"YulExpressionStatement","src":"800:33:8"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:8","type":""}],"src":"696:143:8"},{"body":{"nodeType":"YulBlock","src":"890:32:8","statements":[{"nodeType":"YulAssignment","src":"900:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:8"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:8","type":""}],"src":"845:77:8"},{"body":{"nodeType":"YulBlock","src":"971:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:8"},"nodeType":"YulFunctionCall","src":"1030:12:8"},"nodeType":"YulExpressionStatement","src":"1030:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:8"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1001:17:8"},"nodeType":"YulFunctionCall","src":"1001:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:8"},"nodeType":"YulFunctionCall","src":"991:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:8"},"nodeType":"YulFunctionCall","src":"984:43:8"},"nodeType":"YulIf","src":"981:63:8"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:8","type":""}],"src":"928:122:8"},{"body":{"nodeType":"YulBlock","src":"1119:80:8","statements":[{"nodeType":"YulAssignment","src":"1129:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:8"},"nodeType":"YulFunctionCall","src":"1138:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:8"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1160:26:8"},"nodeType":"YulFunctionCall","src":"1160:33:8"},"nodeType":"YulExpressionStatement","src":"1160:33:8"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:8","type":""}],"src":"1056:143:8"},{"body":{"nodeType":"YulBlock","src":"1250:32:8","statements":[{"nodeType":"YulAssignment","src":"1260:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"1271:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1260:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1232:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1242:7:8","type":""}],"src":"1205:77:8"},{"body":{"nodeType":"YulBlock","src":"1331:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1388:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1400:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1390:6:8"},"nodeType":"YulFunctionCall","src":"1390:12:8"},"nodeType":"YulExpressionStatement","src":"1390:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1354:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1379:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1361:17:8"},"nodeType":"YulFunctionCall","src":"1361:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1351:2:8"},"nodeType":"YulFunctionCall","src":"1351:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:8"},"nodeType":"YulFunctionCall","src":"1344:43:8"},"nodeType":"YulIf","src":"1341:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1324:5:8","type":""}],"src":"1288:122:8"},{"body":{"nodeType":"YulBlock","src":"1479:80:8","statements":[{"nodeType":"YulAssignment","src":"1489:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:8"},"nodeType":"YulFunctionCall","src":"1498:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1489:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1520:26:8"},"nodeType":"YulFunctionCall","src":"1520:33:8"},"nodeType":"YulExpressionStatement","src":"1520:33:8"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1465:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1473:5:8","type":""}],"src":"1416:143:8"},{"body":{"nodeType":"YulBlock","src":"1710:832:8","statements":[{"body":{"nodeType":"YulBlock","src":"1757:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1759:77:8"},"nodeType":"YulFunctionCall","src":"1759:79:8"},"nodeType":"YulExpressionStatement","src":"1759:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1731:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1740:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1727:3:8"},"nodeType":"YulFunctionCall","src":"1727:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1752:3:8","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1723:3:8"},"nodeType":"YulFunctionCall","src":"1723:33:8"},"nodeType":"YulIf","src":"1720:120:8"},{"nodeType":"YulBlock","src":"1850:128:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1865:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1869:6:8","type":""}]},{"nodeType":"YulAssignment","src":"1894:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1940:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1951:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1936:3:8"},"nodeType":"YulFunctionCall","src":"1936:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1960:7:8"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1904:31:8"},"nodeType":"YulFunctionCall","src":"1904:64:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1894:6:8"}]}]},{"nodeType":"YulBlock","src":"1988:129:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2003:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2017:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2007:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2033:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2079:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2090:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2075:3:8"},"nodeType":"YulFunctionCall","src":"2075:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2099:7:8"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2043:31:8"},"nodeType":"YulFunctionCall","src":"2043:64:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2033:6:8"}]}]},{"nodeType":"YulBlock","src":"2127:129:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2142:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2156:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2146:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2172:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2218:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2229:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2214:3:8"},"nodeType":"YulFunctionCall","src":"2214:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2238:7:8"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2182:31:8"},"nodeType":"YulFunctionCall","src":"2182:64:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2172:6:8"}]}]},{"nodeType":"YulBlock","src":"2266:129:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2281:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2295:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2285:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2311:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2357:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2368:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2353:3:8"},"nodeType":"YulFunctionCall","src":"2353:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2377:7:8"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2321:31:8"},"nodeType":"YulFunctionCall","src":"2321:64:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2311:6:8"}]}]},{"nodeType":"YulBlock","src":"2405:130:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2420:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2434:3:8","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2451:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2497:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2508:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2493:3:8"},"nodeType":"YulFunctionCall","src":"2493:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2517:7:8"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2461:31:8"},"nodeType":"YulFunctionCall","src":"2461:64:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2451:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1648:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1659:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1671:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1679:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1687:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1695:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1703:6:8","type":""}],"src":"1565:977:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101006040523480156200001257600080fd5b5060405162000eb338038062000eb38339818101604052810190620000389190620001ce565b8473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508160e0818152505080600081905550505050505062000256565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012082620000f3565b9050919050565b620001328162000113565b81146200013e57600080fd5b50565b600081519050620001528162000127565b92915050565b6000819050919050565b6200016d8162000158565b81146200017957600080fd5b50565b6000815190506200018d8162000162565b92915050565b6000819050919050565b620001a88162000193565b8114620001b457600080fd5b50565b600081519050620001c8816200019d565b92915050565b600080600080600060a08688031215620001ed57620001ec620000ee565b5b6000620001fd8882890162000141565b9550506020620002108882890162000141565b9450506040620002238882890162000141565b935050606062000236888289016200017c565b92505060806200024988828901620001b7565b9150509295509295909350565b60805160a05160c05160e051610c156200029e6000396000818161019e01526102de01526000610166015260006104910152600081816101c8015261034e0152610c156000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806373f95d6b1161005b57806373f95d6b146100ee5780639d143e8e1461010c578063b391c5081461012a578063e9adc770146101465761007d565b806309c33c6714610082578063150b7a02146100a05780632eb4a7ab146100d0575b600080fd5b61008a610164565b60405161009791906105a3565b60405180910390f35b6100ba60048036038101906100b5919061077a565b610188565b6040516100c79190610838565b60405180910390f35b6100d861019c565b6040516100e5919061086c565b60405180910390f35b6100f66101c0565b6040516101039190610896565b60405180910390f35b6101146101c6565b60405161012191906105a3565b60405180910390f35b610144600480360381019061013f9190610911565b6101ea565b005b61014e61048f565b60405161015b91906105a3565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600063150b7a0260e01b9050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461026c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610263906109bb565b60405180910390fd5b60003360405160200161027f9190610a23565b604051602081830303815290604052805190602001209050610303838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f0000000000000000000000000000000000000000000000000000000000000000836104b3565b61034c5760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336000546040518363ffffffff1660e01b81526004016103a9929190610a3e565b602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610a9f565b61043a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043190610b18565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fc738b2de230010873d5b81370b4c10250e8eaec27550f0c43faf979e093090836000546040516104829190610896565b60405180910390a2505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000826104c085846104ca565b1490509392505050565b60008082905060005b845181101561051557610500828683815181106104f3576104f2610b38565b5b6020026020010151610520565b9150808061050d90610b96565b9150506104d3565b508091505092915050565b600081831061053857610533828461054b565b610543565b610542838361054b565b5b905092915050565b600082600052816020526040600020905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058d82610562565b9050919050565b61059d81610582565b82525050565b60006020820190506105b86000830184610594565b92915050565b6000604051905090565b600080fd5b600080fd5b6105db81610582565b81146105e657600080fd5b50565b6000813590506105f8816105d2565b92915050565b6000819050919050565b610611816105fe565b811461061c57600080fd5b50565b60008135905061062e81610608565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106878261063e565b810181811067ffffffffffffffff821117156106a6576106a561064f565b5b80604052505050565b60006106b96105be565b90506106c5828261067e565b919050565b600067ffffffffffffffff8211156106e5576106e461064f565b5b6106ee8261063e565b9050602081019050919050565b82818337600083830152505050565b600061071d610718846106ca565b6106af565b90508281526020810184848401111561073957610738610639565b5b6107448482856106fb565b509392505050565b600082601f83011261076157610760610634565b5b813561077184826020860161070a565b91505092915050565b60008060008060808587031215610794576107936105c8565b5b60006107a2878288016105e9565b94505060206107b3878288016105e9565b93505060406107c48782880161061f565b925050606085013567ffffffffffffffff8111156107e5576107e46105cd565b5b6107f18782880161074c565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610832816107fd565b82525050565b600060208201905061084d6000830184610829565b92915050565b6000819050919050565b61086681610853565b82525050565b6000602082019050610881600083018461085d565b92915050565b610890816105fe565b82525050565b60006020820190506108ab6000830184610887565b92915050565b600080fd5b600080fd5b60008083601f8401126108d1576108d0610634565b5b8235905067ffffffffffffffff8111156108ee576108ed6108b1565b5b60208301915083602082028301111561090a576109096108b6565b5b9250929050565b60008060208385031215610928576109276105c8565b5b600083013567ffffffffffffffff811115610946576109456105cd565b5b610952858286016108bb565b92509250509250929050565b600082825260208201905092915050565b7f436c61696d656420455243323000000000000000000000000000000000000000600082015250565b60006109a5600d8361095e565b91506109b08261096f565b602082019050919050565b600060208201905081810360008301526109d481610998565b9050919050565b60008160601b9050919050565b60006109f3826109db565b9050919050565b6000610a05826109e8565b9050919050565b610a1d610a1882610582565b6109fa565b82525050565b6000610a2f8284610a0c565b60148201915081905092915050565b6000604082019050610a536000830185610594565b610a606020830184610887565b9392505050565b60008115159050919050565b610a7c81610a67565b8114610a8757600080fd5b50565b600081519050610a9981610a73565b92915050565b600060208284031215610ab557610ab46105c8565b5b6000610ac384828501610a8a565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610b02600f8361095e565b9150610b0d82610acc565b602082019050919050565b60006020820190508181036000830152610b3181610af5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ba1826105fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bd457610bd3610b67565b5b60018201905091905056fea264697066735822122070ca3ce5abdd59d39f6ececdc0e1ab379472a2ac9cb307468f60cbaa25b0bafc64736f6c63430008090033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEB3 CODESIZE SUB DUP1 PUSH3 0xEB3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x1CE JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x256 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x120 DUP3 PUSH3 0xF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x132 DUP2 PUSH3 0x113 JUMP JUMPDEST DUP2 EQ PUSH3 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x152 DUP2 PUSH3 0x127 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x16D DUP2 PUSH3 0x158 JUMP JUMPDEST DUP2 EQ PUSH3 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x18D DUP2 PUSH3 0x162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A8 DUP2 PUSH3 0x193 JUMP JUMPDEST DUP2 EQ PUSH3 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1C8 DUP2 PUSH3 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x1ED JUMPI PUSH3 0x1EC PUSH3 0xEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1FD DUP9 DUP3 DUP10 ADD PUSH3 0x141 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x210 DUP9 DUP3 DUP10 ADD PUSH3 0x141 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x223 DUP9 DUP3 DUP10 ADD PUSH3 0x141 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x236 DUP9 DUP3 DUP10 ADD PUSH3 0x17C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x249 DUP9 DUP3 DUP10 ADD PUSH3 0x1B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0xC15 PUSH3 0x29E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x19E ADD MSTORE PUSH2 0x2DE ADD MSTORE PUSH1 0x0 PUSH2 0x166 ADD MSTORE PUSH1 0x0 PUSH2 0x491 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1C8 ADD MSTORE PUSH2 0x34E ADD MSTORE PUSH2 0xC15 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73F95D6B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73F95D6B EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x9D143E8E EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xB391C508 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE9ADC770 EQ PUSH2 0x146 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x9C33C67 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH2 0x1EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x303 DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH32 0x0 DUP4 PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x34C JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A9 SWAP3 SWAP2 SWAP1 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC738B2DE230010873D5B81370B4C10250E8EAEC27550F0C43FAF979E09309083 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4C0 DUP6 DUP5 PUSH2 0x4CA JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x515 JUMPI PUSH2 0x500 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4F3 JUMPI PUSH2 0x4F2 PUSH2 0xB38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x520 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x50D SWAP1 PUSH2 0xB96 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D3 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x538 JUMPI PUSH2 0x533 DUP3 DUP5 PUSH2 0x54B JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST PUSH2 0x542 DUP4 DUP4 PUSH2 0x54B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D DUP3 PUSH2 0x562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59D DUP2 PUSH2 0x582 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x594 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DB DUP2 PUSH2 0x582 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F8 DUP2 PUSH2 0x5D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x611 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP2 EQ PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x62E DUP2 PUSH2 0x608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x687 DUP3 PUSH2 0x63E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0x64F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 PUSH2 0x5BE JUMP JUMPDEST SWAP1 POP PUSH2 0x6C5 DUP3 DUP3 PUSH2 0x67E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x64F JUMP JUMPDEST JUMPDEST PUSH2 0x6EE DUP3 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71D PUSH2 0x718 DUP5 PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x739 JUMPI PUSH2 0x738 PUSH2 0x639 JUMP JUMPDEST JUMPDEST PUSH2 0x744 DUP5 DUP3 DUP6 PUSH2 0x6FB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0x634 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x771 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x70A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x794 JUMPI PUSH2 0x793 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A2 DUP8 DUP3 DUP9 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x7B3 DUP8 DUP3 DUP9 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x7C4 DUP8 DUP3 DUP9 ADD PUSH2 0x61F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x7E4 PUSH2 0x5CD JUMP JUMPDEST JUMPDEST PUSH2 0x7F1 DUP8 DUP3 DUP9 ADD PUSH2 0x74C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x832 DUP2 PUSH2 0x7FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x84D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x829 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x866 DUP2 PUSH2 0x853 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x881 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x85D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x890 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8D1 JUMPI PUSH2 0x8D0 PUSH2 0x634 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8EE JUMPI PUSH2 0x8ED PUSH2 0x8B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x90A JUMPI PUSH2 0x909 PUSH2 0x8B6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x928 JUMPI PUSH2 0x927 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x946 JUMPI PUSH2 0x945 PUSH2 0x5CD JUMP JUMPDEST JUMPDEST PUSH2 0x952 DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436C61696D656420455243323000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A5 PUSH1 0xD DUP4 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP PUSH2 0x9B0 DUP3 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9D4 DUP2 PUSH2 0x998 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH2 0x9DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1D PUSH2 0xA18 DUP3 PUSH2 0x582 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2F DUP3 DUP5 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA53 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x594 JUMP JUMPDEST PUSH2 0xA60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x887 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xA67 JUMP JUMPDEST DUP2 EQ PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA99 DUP2 PUSH2 0xA73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC3 DUP5 DUP3 DUP6 ADD PUSH2 0xA8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 PUSH1 0xF DUP4 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP PUSH2 0xB0D DUP3 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB31 DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBA1 DUP3 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xBD3 PUSH2 0xB67 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xCA3CE5ABDD59D39F6ECECDC0E1AB379472 LOG2 0xAC SWAP13 0xB3 SMOD CHAINID DUP16 PUSH1 0xCB 0xAA 0x25 0xB0 0xBA 0xFC PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"397:1354:7:-:0;;;849:324;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1026:6;1013:19;;;;;;;;;;1056:9;1042:23;;;;;;;;;;1090:10;1075:25;;;;;;;;;;1123:11;1110:24;;;;;;1156:10;1144:9;:22;;;;849:324;;;;;397:1354;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:977::-;1671:6;1679;1687;1695;1703;1752:3;1740:9;1731:7;1727:23;1723:33;1720:120;;;1759:79;;:::i;:::-;1720:120;1879:1;1904:64;1960:7;1951:6;1940:9;1936:22;1904:64;:::i;:::-;1894:74;;1850:128;2017:2;2043:64;2099:7;2090:6;2079:9;2075:22;2043:64;:::i;:::-;2033:74;;1988:129;2156:2;2182:64;2238:7;2229:6;2218:9;2214:22;2182:64;:::i;:::-;2172:74;;2127:129;2295:2;2321:64;2377:7;2368:6;2357:9;2353:22;2321:64;:::i;:::-;2311:74;;2266:129;2434:3;2461:64;2517:7;2508:6;2497:9;2493:22;2461:64;:::i;:::-;2451:74;;2405:130;1565:977;;;;;;;;:::o;397:1354:7:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_efficientHash_1270":{"entryPoint":1355,"id":1270,"parameterSlots":2,"returnSlots":1},"@_hashPair_1259":{"entryPoint":1312,"id":1259,"parameterSlots":2,"returnSlots":1},"@claim_1399":{"entryPoint":490,"id":1399,"parameterSlots":2,"returnSlots":0},"@dropERC20_1295":{"entryPoint":448,"id":1295,"parameterSlots":0,"returnSlots":0},"@merkleRoot_1293":{"entryPoint":412,"id":1293,"parameterSlots":0,"returnSlots":0},"@onERC721Received_438":{"entryPoint":392,"id":438,"parameterSlots":4,"returnSlots":1},"@processProof_854":{"entryPoint":1226,"id":854,"parameterSlots":2,"returnSlots":1},"@tokenERC1155_1291":{"entryPoint":356,"id":1291,"parameterSlots":0,"returnSlots":0},"@tokenERC20_1287":{"entryPoint":454,"id":1287,"parameterSlots":0,"returnSlots":0},"@tokenERC721_1289":{"entryPoint":1167,"id":1289,"parameterSlots":0,"returnSlots":0},"@verify_793":{"entryPoint":1203,"id":793,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1802,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1513,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":2235,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":2698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":1914,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":2321,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1428,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":2572,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2141,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":2089,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack":{"entryPoint":2805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack":{"entryPoint":2456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2183,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":2595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":2622,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":2156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":2104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2198,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1711,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1470,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1738,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2398,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1410,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2663,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2131,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":2045,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1378,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1534,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":1787,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1662,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":2966,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":2554,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":2536,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2919,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2872,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1615,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2225,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1588,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2230,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1593,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1485,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1480,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1598,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":2523,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51":{"entryPoint":2764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613":{"entryPoint":2415,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1490,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":2675,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1544,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11893:8","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:8","statements":[{"nodeType":"YulAssignment","src":"62:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:8"},"nodeType":"YulFunctionCall","src":"73:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:8","type":""}],"src":"7:126:8"},{"body":{"nodeType":"YulBlock","src":"184:51:8","statements":[{"nodeType":"YulAssignment","src":"194:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:8"},"nodeType":"YulFunctionCall","src":"205:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:8","type":""}],"src":"139:96:8"},{"body":{"nodeType":"YulBlock","src":"306:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:8"},"nodeType":"YulFunctionCall","src":"328:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:8"},"nodeType":"YulFunctionCall","src":"316:37:8"},"nodeType":"YulExpressionStatement","src":"316:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:8","type":""}],"src":"241:118:8"},{"body":{"nodeType":"YulBlock","src":"463:124:8","statements":[{"nodeType":"YulAssignment","src":"473:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:8"},"nodeType":"YulFunctionCall","src":"481:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:8"},"nodeType":"YulFunctionCall","src":"562:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:8"},"nodeType":"YulFunctionCall","src":"509:71:8"},"nodeType":"YulExpressionStatement","src":"509:71:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:8","type":""}],"src":"365:222:8"},{"body":{"nodeType":"YulBlock","src":"633:35:8","statements":[{"nodeType":"YulAssignment","src":"643:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:8"},"nodeType":"YulFunctionCall","src":"653:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:8","type":""}],"src":"593:75:8"},{"body":{"nodeType":"YulBlock","src":"763:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:8"},"nodeType":"YulFunctionCall","src":"773:12:8"},"nodeType":"YulExpressionStatement","src":"773:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:8"},{"body":{"nodeType":"YulBlock","src":"886:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:8"},"nodeType":"YulFunctionCall","src":"896:12:8"},"nodeType":"YulExpressionStatement","src":"896:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:8"},{"body":{"nodeType":"YulBlock","src":"963:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:8"},"nodeType":"YulFunctionCall","src":"1022:12:8"},"nodeType":"YulExpressionStatement","src":"1022:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:8"},"nodeType":"YulFunctionCall","src":"993:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:8"},"nodeType":"YulFunctionCall","src":"983:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:8"},"nodeType":"YulFunctionCall","src":"976:43:8"},"nodeType":"YulIf","src":"973:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:8","type":""}],"src":"920:122:8"},{"body":{"nodeType":"YulBlock","src":"1100:87:8","statements":[{"nodeType":"YulAssignment","src":"1110:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:8"},"nodeType":"YulFunctionCall","src":"1119:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:8"},"nodeType":"YulFunctionCall","src":"1148:33:8"},"nodeType":"YulExpressionStatement","src":"1148:33:8"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:8","type":""}],"src":"1048:139:8"},{"body":{"nodeType":"YulBlock","src":"1238:32:8","statements":[{"nodeType":"YulAssignment","src":"1248:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"1259:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1248:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1220:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1230:7:8","type":""}],"src":"1193:77:8"},{"body":{"nodeType":"YulBlock","src":"1319:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1376:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1385:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1388:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1378:6:8"},"nodeType":"YulFunctionCall","src":"1378:12:8"},"nodeType":"YulExpressionStatement","src":"1378:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1342:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1367:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1349:17:8"},"nodeType":"YulFunctionCall","src":"1349:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1339:2:8"},"nodeType":"YulFunctionCall","src":"1339:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1332:6:8"},"nodeType":"YulFunctionCall","src":"1332:43:8"},"nodeType":"YulIf","src":"1329:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:8","type":""}],"src":"1276:122:8"},{"body":{"nodeType":"YulBlock","src":"1456:87:8","statements":[{"nodeType":"YulAssignment","src":"1466:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1475:12:8"},"nodeType":"YulFunctionCall","src":"1475:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1466:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1531:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1504:26:8"},"nodeType":"YulFunctionCall","src":"1504:33:8"},"nodeType":"YulExpressionStatement","src":"1504:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1434:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1442:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1450:5:8","type":""}],"src":"1404:139:8"},{"body":{"nodeType":"YulBlock","src":"1638:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1655:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1658:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1648:6:8"},"nodeType":"YulFunctionCall","src":"1648:12:8"},"nodeType":"YulExpressionStatement","src":"1648:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1549:117:8"},{"body":{"nodeType":"YulBlock","src":"1761:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1778:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1781:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1771:6:8"},"nodeType":"YulFunctionCall","src":"1771:12:8"},"nodeType":"YulExpressionStatement","src":"1771:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1672:117:8"},{"body":{"nodeType":"YulBlock","src":"1843:54:8","statements":[{"nodeType":"YulAssignment","src":"1853:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1871:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1878:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1867:3:8"},"nodeType":"YulFunctionCall","src":"1867:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1883:3:8"},"nodeType":"YulFunctionCall","src":"1883:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1863:3:8"},"nodeType":"YulFunctionCall","src":"1863:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1853:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1826:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1836:6:8","type":""}],"src":"1795:102:8"},{"body":{"nodeType":"YulBlock","src":"1931:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1948:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1951:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1941:6:8"},"nodeType":"YulFunctionCall","src":"1941:88:8"},"nodeType":"YulExpressionStatement","src":"1941:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2045:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2048:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2038:6:8"},"nodeType":"YulFunctionCall","src":"2038:15:8"},"nodeType":"YulExpressionStatement","src":"2038:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2069:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2072:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2062:6:8"},"nodeType":"YulFunctionCall","src":"2062:15:8"},"nodeType":"YulExpressionStatement","src":"2062:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1903:180:8"},{"body":{"nodeType":"YulBlock","src":"2132:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2142:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2164:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2194:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2172:21:8"},"nodeType":"YulFunctionCall","src":"2172:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2160:3:8"},"nodeType":"YulFunctionCall","src":"2160:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2146:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2311:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2313:16:8"},"nodeType":"YulFunctionCall","src":"2313:18:8"},"nodeType":"YulExpressionStatement","src":"2313:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2254:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"2266:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2251:2:8"},"nodeType":"YulFunctionCall","src":"2251:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2290:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2302:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2287:2:8"},"nodeType":"YulFunctionCall","src":"2287:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2248:2:8"},"nodeType":"YulFunctionCall","src":"2248:62:8"},"nodeType":"YulIf","src":"2245:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2349:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2353:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2342:6:8"},"nodeType":"YulFunctionCall","src":"2342:22:8"},"nodeType":"YulExpressionStatement","src":"2342:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2118:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"2126:4:8","type":""}],"src":"2089:281:8"},{"body":{"nodeType":"YulBlock","src":"2417:88:8","statements":[{"nodeType":"YulAssignment","src":"2427:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2437:18:8"},"nodeType":"YulFunctionCall","src":"2437:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2427:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2486:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"2494:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2466:19:8"},"nodeType":"YulFunctionCall","src":"2466:33:8"},"nodeType":"YulExpressionStatement","src":"2466:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2401:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2410:6:8","type":""}],"src":"2376:129:8"},{"body":{"nodeType":"YulBlock","src":"2577:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"2682:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2684:16:8"},"nodeType":"YulFunctionCall","src":"2684:18:8"},"nodeType":"YulExpressionStatement","src":"2684:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2654:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2662:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2651:2:8"},"nodeType":"YulFunctionCall","src":"2651:30:8"},"nodeType":"YulIf","src":"2648:56:8"},{"nodeType":"YulAssignment","src":"2714:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2744:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2722:21:8"},"nodeType":"YulFunctionCall","src":"2722:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2714:4:8"}]},{"nodeType":"YulAssignment","src":"2788:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2800:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"2806:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2796:3:8"},"nodeType":"YulFunctionCall","src":"2796:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2788:4:8"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2561:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2572:4:8","type":""}],"src":"2511:307:8"},{"body":{"nodeType":"YulBlock","src":"2875:103:8","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2898:3:8"},{"name":"src","nodeType":"YulIdentifier","src":"2903:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2908:6:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2885:12:8"},"nodeType":"YulFunctionCall","src":"2885:30:8"},"nodeType":"YulExpressionStatement","src":"2885:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2956:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2961:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2952:3:8"},"nodeType":"YulFunctionCall","src":"2952:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"2970:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2945:6:8"},"nodeType":"YulFunctionCall","src":"2945:27:8"},"nodeType":"YulExpressionStatement","src":"2945:27:8"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2857:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2862:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"2867:6:8","type":""}],"src":"2824:154:8"},{"body":{"nodeType":"YulBlock","src":"3067:327:8","statements":[{"nodeType":"YulAssignment","src":"3077:74:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3143:6:8"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3102:40:8"},"nodeType":"YulFunctionCall","src":"3102:48:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3086:15:8"},"nodeType":"YulFunctionCall","src":"3086:65:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3077:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3167:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"3174:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3160:6:8"},"nodeType":"YulFunctionCall","src":"3160:21:8"},"nodeType":"YulExpressionStatement","src":"3160:21:8"},{"nodeType":"YulVariableDeclaration","src":"3190:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3205:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"3212:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3201:3:8"},"nodeType":"YulFunctionCall","src":"3201:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3194:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3255:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"3257:77:8"},"nodeType":"YulFunctionCall","src":"3257:79:8"},"nodeType":"YulExpressionStatement","src":"3257:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3236:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3241:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3232:3:8"},"nodeType":"YulFunctionCall","src":"3232:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"3250:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3229:2:8"},"nodeType":"YulFunctionCall","src":"3229:25:8"},"nodeType":"YulIf","src":"3226:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3371:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"3376:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3381:6:8"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"3347:23:8"},"nodeType":"YulFunctionCall","src":"3347:41:8"},"nodeType":"YulExpressionStatement","src":"3347:41:8"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3040:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3045:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"3053:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3061:5:8","type":""}],"src":"2984:410:8"},{"body":{"nodeType":"YulBlock","src":"3474:277:8","statements":[{"body":{"nodeType":"YulBlock","src":"3523:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3525:77:8"},"nodeType":"YulFunctionCall","src":"3525:79:8"},"nodeType":"YulExpressionStatement","src":"3525:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3502:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3510:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3498:3:8"},"nodeType":"YulFunctionCall","src":"3498:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"3517:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3494:3:8"},"nodeType":"YulFunctionCall","src":"3494:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3487:6:8"},"nodeType":"YulFunctionCall","src":"3487:35:8"},"nodeType":"YulIf","src":"3484:122:8"},{"nodeType":"YulVariableDeclaration","src":"3615:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3642:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3629:12:8"},"nodeType":"YulFunctionCall","src":"3629:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3619:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3658:87:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3718:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3726:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3714:3:8"},"nodeType":"YulFunctionCall","src":"3714:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"3733:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"3741:3:8"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3667:46:8"},"nodeType":"YulFunctionCall","src":"3667:78:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3658:5:8"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3452:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"3460:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3468:5:8","type":""}],"src":"3413:338:8"},{"body":{"nodeType":"YulBlock","src":"3883:817:8","statements":[{"body":{"nodeType":"YulBlock","src":"3930:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3932:77:8"},"nodeType":"YulFunctionCall","src":"3932:79:8"},"nodeType":"YulExpressionStatement","src":"3932:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3904:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3913:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3900:3:8"},"nodeType":"YulFunctionCall","src":"3900:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3925:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3896:3:8"},"nodeType":"YulFunctionCall","src":"3896:33:8"},"nodeType":"YulIf","src":"3893:120:8"},{"nodeType":"YulBlock","src":"4023:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4038:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4052:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4042:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4067:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4102:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4113:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4098:3:8"},"nodeType":"YulFunctionCall","src":"4098:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4122:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4077:20:8"},"nodeType":"YulFunctionCall","src":"4077:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4067:6:8"}]}]},{"nodeType":"YulBlock","src":"4150:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4165:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4179:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4169:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4195:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4230:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4241:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4226:3:8"},"nodeType":"YulFunctionCall","src":"4226:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4250:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4205:20:8"},"nodeType":"YulFunctionCall","src":"4205:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4195:6:8"}]}]},{"nodeType":"YulBlock","src":"4278:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4293:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4307:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4297:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4323:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4358:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4369:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4354:3:8"},"nodeType":"YulFunctionCall","src":"4354:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4378:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4333:20:8"},"nodeType":"YulFunctionCall","src":"4333:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4323:6:8"}]}]},{"nodeType":"YulBlock","src":"4406:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4421:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4452:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4463:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4448:3:8"},"nodeType":"YulFunctionCall","src":"4448:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4435:12:8"},"nodeType":"YulFunctionCall","src":"4435:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4425:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4514:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4516:77:8"},"nodeType":"YulFunctionCall","src":"4516:79:8"},"nodeType":"YulExpressionStatement","src":"4516:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4486:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4494:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4483:2:8"},"nodeType":"YulFunctionCall","src":"4483:30:8"},"nodeType":"YulIf","src":"4480:117:8"},{"nodeType":"YulAssignment","src":"4611:72:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4655:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4666:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4651:3:8"},"nodeType":"YulFunctionCall","src":"4651:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4675:7:8"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4621:29:8"},"nodeType":"YulFunctionCall","src":"4621:62:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4611:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3829:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3840:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3852:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3860:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3868:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3876:6:8","type":""}],"src":"3757:943:8"},{"body":{"nodeType":"YulBlock","src":"4750:105:8","statements":[{"nodeType":"YulAssignment","src":"4760:89:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4775:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4782:66:8","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4771:3:8"},"nodeType":"YulFunctionCall","src":"4771:78:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4760:7:8"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4732:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4742:7:8","type":""}],"src":"4706:149:8"},{"body":{"nodeType":"YulBlock","src":"4924:52:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4941:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4963:5:8"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"4946:16:8"},"nodeType":"YulFunctionCall","src":"4946:23:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4934:6:8"},"nodeType":"YulFunctionCall","src":"4934:36:8"},"nodeType":"YulExpressionStatement","src":"4934:36:8"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4912:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4919:3:8","type":""}],"src":"4861:115:8"},{"body":{"nodeType":"YulBlock","src":"5078:122:8","statements":[{"nodeType":"YulAssignment","src":"5088:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5100:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5111:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5096:3:8"},"nodeType":"YulFunctionCall","src":"5096:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5088:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5166:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5179:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5190:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5175:3:8"},"nodeType":"YulFunctionCall","src":"5175:17:8"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"5124:41:8"},"nodeType":"YulFunctionCall","src":"5124:69:8"},"nodeType":"YulExpressionStatement","src":"5124:69:8"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5050:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5062:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5073:4:8","type":""}],"src":"4982:218:8"},{"body":{"nodeType":"YulBlock","src":"5251:32:8","statements":[{"nodeType":"YulAssignment","src":"5261:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5261:7:8"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5233:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5243:7:8","type":""}],"src":"5206:77:8"},{"body":{"nodeType":"YulBlock","src":"5354:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5371:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5394:5:8"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5376:17:8"},"nodeType":"YulFunctionCall","src":"5376:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5364:6:8"},"nodeType":"YulFunctionCall","src":"5364:37:8"},"nodeType":"YulExpressionStatement","src":"5364:37:8"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5342:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5349:3:8","type":""}],"src":"5289:118:8"},{"body":{"nodeType":"YulBlock","src":"5511:124:8","statements":[{"nodeType":"YulAssignment","src":"5521:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5533:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5544:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5529:3:8"},"nodeType":"YulFunctionCall","src":"5529:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5521:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5601:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5625:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:8"},"nodeType":"YulFunctionCall","src":"5610:17:8"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5557:43:8"},"nodeType":"YulFunctionCall","src":"5557:71:8"},"nodeType":"YulExpressionStatement","src":"5557:71:8"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5483:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5495:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5506:4:8","type":""}],"src":"5413:222:8"},{"body":{"nodeType":"YulBlock","src":"5706:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5723:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5746:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5728:17:8"},"nodeType":"YulFunctionCall","src":"5728:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5716:6:8"},"nodeType":"YulFunctionCall","src":"5716:37:8"},"nodeType":"YulExpressionStatement","src":"5716:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5694:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5701:3:8","type":""}],"src":"5641:118:8"},{"body":{"nodeType":"YulBlock","src":"5863:124:8","statements":[{"nodeType":"YulAssignment","src":"5873:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5885:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5896:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5881:3:8"},"nodeType":"YulFunctionCall","src":"5881:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5873:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5953:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5966:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5977:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5962:3:8"},"nodeType":"YulFunctionCall","src":"5962:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5909:43:8"},"nodeType":"YulFunctionCall","src":"5909:71:8"},"nodeType":"YulExpressionStatement","src":"5909:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5835:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5847:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5858:4:8","type":""}],"src":"5765:222:8"},{"body":{"nodeType":"YulBlock","src":"6082:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6099:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6102:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6092:6:8"},"nodeType":"YulFunctionCall","src":"6092:12:8"},"nodeType":"YulExpressionStatement","src":"6092:12:8"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5993:117:8"},{"body":{"nodeType":"YulBlock","src":"6205:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6222:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6225:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6215:6:8"},"nodeType":"YulFunctionCall","src":"6215:12:8"},"nodeType":"YulExpressionStatement","src":"6215:12:8"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6116:117:8"},{"body":{"nodeType":"YulBlock","src":"6346:478:8","statements":[{"body":{"nodeType":"YulBlock","src":"6395:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6397:77:8"},"nodeType":"YulFunctionCall","src":"6397:79:8"},"nodeType":"YulExpressionStatement","src":"6397:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6374:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6382:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6370:3:8"},"nodeType":"YulFunctionCall","src":"6370:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"6389:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6366:3:8"},"nodeType":"YulFunctionCall","src":"6366:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6359:6:8"},"nodeType":"YulFunctionCall","src":"6359:35:8"},"nodeType":"YulIf","src":"6356:122:8"},{"nodeType":"YulAssignment","src":"6487:30:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6510:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6497:12:8"},"nodeType":"YulFunctionCall","src":"6497:20:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6487:6:8"}]},{"body":{"nodeType":"YulBlock","src":"6560:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6562:77:8"},"nodeType":"YulFunctionCall","src":"6562:79:8"},"nodeType":"YulExpressionStatement","src":"6562:79:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6532:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6540:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6529:2:8"},"nodeType":"YulFunctionCall","src":"6529:30:8"},"nodeType":"YulIf","src":"6526:117:8"},{"nodeType":"YulAssignment","src":"6652:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6668:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6676:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6664:3:8"},"nodeType":"YulFunctionCall","src":"6664:17:8"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6652:8:8"}]},{"body":{"nodeType":"YulBlock","src":"6735:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6737:77:8"},"nodeType":"YulFunctionCall","src":"6737:79:8"},"nodeType":"YulExpressionStatement","src":"6737:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6700:8:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6714:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6722:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6710:3:8"},"nodeType":"YulFunctionCall","src":"6710:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6696:3:8"},"nodeType":"YulFunctionCall","src":"6696:32:8"},{"name":"end","nodeType":"YulIdentifier","src":"6730:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6693:2:8"},"nodeType":"YulFunctionCall","src":"6693:41:8"},"nodeType":"YulIf","src":"6690:128:8"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6313:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"6321:3:8","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6329:8:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"6339:6:8","type":""}],"src":"6256:568:8"},{"body":{"nodeType":"YulBlock","src":"6931:458:8","statements":[{"body":{"nodeType":"YulBlock","src":"6977:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6979:77:8"},"nodeType":"YulFunctionCall","src":"6979:79:8"},"nodeType":"YulExpressionStatement","src":"6979:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6952:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"6961:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6948:3:8"},"nodeType":"YulFunctionCall","src":"6948:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"6973:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6944:3:8"},"nodeType":"YulFunctionCall","src":"6944:32:8"},"nodeType":"YulIf","src":"6941:119:8"},{"nodeType":"YulBlock","src":"7070:312:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7085:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7116:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7127:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7112:3:8"},"nodeType":"YulFunctionCall","src":"7112:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7099:12:8"},"nodeType":"YulFunctionCall","src":"7099:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7089:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7177:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7179:77:8"},"nodeType":"YulFunctionCall","src":"7179:79:8"},"nodeType":"YulExpressionStatement","src":"7179:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7149:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7157:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7146:2:8"},"nodeType":"YulFunctionCall","src":"7146:30:8"},"nodeType":"YulIf","src":"7143:117:8"},{"nodeType":"YulAssignment","src":"7274:98:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7344:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"7355:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7340:3:8"},"nodeType":"YulFunctionCall","src":"7340:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7364:7:8"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7292:47:8"},"nodeType":"YulFunctionCall","src":"7292:80:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7274:6:8"},{"name":"value1","nodeType":"YulIdentifier","src":"7282:6:8"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6893:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6904:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6916:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6924:6:8","type":""}],"src":"6830:559:8"},{"body":{"nodeType":"YulBlock","src":"7491:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7508:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"7513:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7501:6:8"},"nodeType":"YulFunctionCall","src":"7501:19:8"},"nodeType":"YulExpressionStatement","src":"7501:19:8"},{"nodeType":"YulAssignment","src":"7529:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7548:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7553:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7544:3:8"},"nodeType":"YulFunctionCall","src":"7544:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7529:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7463:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"7468:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7479:11:8","type":""}],"src":"7395:169:8"},{"body":{"nodeType":"YulBlock","src":"7676:57:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7698:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7706:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7694:3:8"},"nodeType":"YulFunctionCall","src":"7694:14:8"},{"hexValue":"436c61696d6564204552433230","kind":"string","nodeType":"YulLiteral","src":"7710:15:8","type":"","value":"Claimed ERC20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7687:6:8"},"nodeType":"YulFunctionCall","src":"7687:39:8"},"nodeType":"YulExpressionStatement","src":"7687:39:8"}]},"name":"store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7668:6:8","type":""}],"src":"7570:163:8"},{"body":{"nodeType":"YulBlock","src":"7885:220:8","statements":[{"nodeType":"YulAssignment","src":"7895:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7961:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7966:2:8","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7902:58:8"},"nodeType":"YulFunctionCall","src":"7902:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7895:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8067:3:8"}],"functionName":{"name":"store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613","nodeType":"YulIdentifier","src":"7978:88:8"},"nodeType":"YulFunctionCall","src":"7978:93:8"},"nodeType":"YulExpressionStatement","src":"7978:93:8"},{"nodeType":"YulAssignment","src":"8080:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8091:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8096:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8087:3:8"},"nodeType":"YulFunctionCall","src":"8087:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8080:3:8"}]}]},"name":"abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7873:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7881:3:8","type":""}],"src":"7739:366:8"},{"body":{"nodeType":"YulBlock","src":"8282:248:8","statements":[{"nodeType":"YulAssignment","src":"8292:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8304:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8315:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8300:3:8"},"nodeType":"YulFunctionCall","src":"8300:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8292:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8339:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8350:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8335:3:8"},"nodeType":"YulFunctionCall","src":"8335:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8358:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8364:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8354:3:8"},"nodeType":"YulFunctionCall","src":"8354:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8328:6:8"},"nodeType":"YulFunctionCall","src":"8328:47:8"},"nodeType":"YulExpressionStatement","src":"8328:47:8"},{"nodeType":"YulAssignment","src":"8384:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8518:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8392:124:8"},"nodeType":"YulFunctionCall","src":"8392:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8384:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8262:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8277:4:8","type":""}],"src":"8111:419:8"},{"body":{"nodeType":"YulBlock","src":"8578:52:8","statements":[{"nodeType":"YulAssignment","src":"8588:35:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8613:2:8","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"8617:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8609:3:8"},"nodeType":"YulFunctionCall","src":"8609:14:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8588:8:8"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8559:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8569:8:8","type":""}],"src":"8536:94:8"},{"body":{"nodeType":"YulBlock","src":"8683:47:8","statements":[{"nodeType":"YulAssignment","src":"8693:31:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8718:5:8"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"8704:13:8"},"nodeType":"YulFunctionCall","src":"8704:20:8"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"8693:7:8"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8665:5:8","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"8675:7:8","type":""}],"src":"8636:94:8"},{"body":{"nodeType":"YulBlock","src":"8783:53:8","statements":[{"nodeType":"YulAssignment","src":"8793:37:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8824:5:8"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"8804:19:8"},"nodeType":"YulFunctionCall","src":"8804:26:8"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"8793:7:8"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8765:5:8","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"8775:7:8","type":""}],"src":"8736:100:8"},{"body":{"nodeType":"YulBlock","src":"8925:74:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8942:3:8"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8985:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8967:17:8"},"nodeType":"YulFunctionCall","src":"8967:24:8"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"8947:19:8"},"nodeType":"YulFunctionCall","src":"8947:45:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8935:6:8"},"nodeType":"YulFunctionCall","src":"8935:58:8"},"nodeType":"YulExpressionStatement","src":"8935:58:8"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8913:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8920:3:8","type":""}],"src":"8842:157:8"},{"body":{"nodeType":"YulBlock","src":"9121:140:8","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9194:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"9203:3:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9132:61:8"},"nodeType":"YulFunctionCall","src":"9132:75:8"},"nodeType":"YulExpressionStatement","src":"9132:75:8"},{"nodeType":"YulAssignment","src":"9216:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9227:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9232:2:8","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9223:3:8"},"nodeType":"YulFunctionCall","src":"9223:12:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9216:3:8"}]},{"nodeType":"YulAssignment","src":"9245:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"9252:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9245:3:8"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9100:3:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9106:6:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9117:3:8","type":""}],"src":"9005:256:8"},{"body":{"nodeType":"YulBlock","src":"9393:206:8","statements":[{"nodeType":"YulAssignment","src":"9403:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9415:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9426:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9411:3:8"},"nodeType":"YulFunctionCall","src":"9411:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9403:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9483:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9496:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9507:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9492:3:8"},"nodeType":"YulFunctionCall","src":"9492:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9439:43:8"},"nodeType":"YulFunctionCall","src":"9439:71:8"},"nodeType":"YulExpressionStatement","src":"9439:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9564:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9577:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9588:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9573:3:8"},"nodeType":"YulFunctionCall","src":"9573:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9520:43:8"},"nodeType":"YulFunctionCall","src":"9520:72:8"},"nodeType":"YulExpressionStatement","src":"9520:72:8"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9357:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9369:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9377:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9388:4:8","type":""}],"src":"9267:332:8"},{"body":{"nodeType":"YulBlock","src":"9647:48:8","statements":[{"nodeType":"YulAssignment","src":"9657:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9682:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9675:6:8"},"nodeType":"YulFunctionCall","src":"9675:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9668:6:8"},"nodeType":"YulFunctionCall","src":"9668:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9657:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9629:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9639:7:8","type":""}],"src":"9605:90:8"},{"body":{"nodeType":"YulBlock","src":"9741:76:8","statements":[{"body":{"nodeType":"YulBlock","src":"9795:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9804:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9807:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9797:6:8"},"nodeType":"YulFunctionCall","src":"9797:12:8"},"nodeType":"YulExpressionStatement","src":"9797:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9764:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9786:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9771:14:8"},"nodeType":"YulFunctionCall","src":"9771:21:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9761:2:8"},"nodeType":"YulFunctionCall","src":"9761:32:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9754:6:8"},"nodeType":"YulFunctionCall","src":"9754:40:8"},"nodeType":"YulIf","src":"9751:60:8"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9734:5:8","type":""}],"src":"9701:116:8"},{"body":{"nodeType":"YulBlock","src":"9883:77:8","statements":[{"nodeType":"YulAssignment","src":"9893:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9908:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9902:5:8"},"nodeType":"YulFunctionCall","src":"9902:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9893:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9948:5:8"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9924:23:8"},"nodeType":"YulFunctionCall","src":"9924:30:8"},"nodeType":"YulExpressionStatement","src":"9924:30:8"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9861:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"9869:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9877:5:8","type":""}],"src":"9823:137:8"},{"body":{"nodeType":"YulBlock","src":"10040:271:8","statements":[{"body":{"nodeType":"YulBlock","src":"10086:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10088:77:8"},"nodeType":"YulFunctionCall","src":"10088:79:8"},"nodeType":"YulExpressionStatement","src":"10088:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10061:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10070:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10057:3:8"},"nodeType":"YulFunctionCall","src":"10057:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"10082:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10053:3:8"},"nodeType":"YulFunctionCall","src":"10053:32:8"},"nodeType":"YulIf","src":"10050:119:8"},{"nodeType":"YulBlock","src":"10179:125:8","statements":[{"nodeType":"YulVariableDeclaration","src":"10194:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"10208:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10198:6:8","type":""}]},{"nodeType":"YulAssignment","src":"10223:71:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10266:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"10277:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10262:3:8"},"nodeType":"YulFunctionCall","src":"10262:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10286:7:8"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"10233:28:8"},"nodeType":"YulFunctionCall","src":"10233:61:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10223:6:8"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10010:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10021:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10033:6:8","type":""}],"src":"9966:345:8"},{"body":{"nodeType":"YulBlock","src":"10423:59:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10445:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"10453:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10441:3:8"},"nodeType":"YulFunctionCall","src":"10441:14:8"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"10457:17:8","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10434:6:8"},"nodeType":"YulFunctionCall","src":"10434:41:8"},"nodeType":"YulExpressionStatement","src":"10434:41:8"}]},"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10415:6:8","type":""}],"src":"10317:165:8"},{"body":{"nodeType":"YulBlock","src":"10634:220:8","statements":[{"nodeType":"YulAssignment","src":"10644:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10710:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10715:2:8","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10651:58:8"},"nodeType":"YulFunctionCall","src":"10651:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10644:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10816:3:8"}],"functionName":{"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nodeType":"YulIdentifier","src":"10727:88:8"},"nodeType":"YulFunctionCall","src":"10727:93:8"},"nodeType":"YulExpressionStatement","src":"10727:93:8"},{"nodeType":"YulAssignment","src":"10829:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10840:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10845:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10836:3:8"},"nodeType":"YulFunctionCall","src":"10836:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10829:3:8"}]}]},"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10622:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10630:3:8","type":""}],"src":"10488:366:8"},{"body":{"nodeType":"YulBlock","src":"11031:248:8","statements":[{"nodeType":"YulAssignment","src":"11041:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11053:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11064:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11049:3:8"},"nodeType":"YulFunctionCall","src":"11049:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11041:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11088:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11099:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11084:3:8"},"nodeType":"YulFunctionCall","src":"11084:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11107:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"11113:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11103:3:8"},"nodeType":"YulFunctionCall","src":"11103:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11077:6:8"},"nodeType":"YulFunctionCall","src":"11077:47:8"},"nodeType":"YulExpressionStatement","src":"11077:47:8"},{"nodeType":"YulAssignment","src":"11133:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11267:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11141:124:8"},"nodeType":"YulFunctionCall","src":"11141:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11133:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11011:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11026:4:8","type":""}],"src":"10860:419:8"},{"body":{"nodeType":"YulBlock","src":"11313:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11330:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11333:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11323:6:8"},"nodeType":"YulFunctionCall","src":"11323:88:8"},"nodeType":"YulExpressionStatement","src":"11323:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11427:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11430:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11420:6:8"},"nodeType":"YulFunctionCall","src":"11420:15:8"},"nodeType":"YulExpressionStatement","src":"11420:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11451:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11454:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11444:6:8"},"nodeType":"YulFunctionCall","src":"11444:15:8"},"nodeType":"YulExpressionStatement","src":"11444:15:8"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11285:180:8"},{"body":{"nodeType":"YulBlock","src":"11499:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11516:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11519:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11509:6:8"},"nodeType":"YulFunctionCall","src":"11509:88:8"},"nodeType":"YulExpressionStatement","src":"11509:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11613:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11616:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11606:6:8"},"nodeType":"YulFunctionCall","src":"11606:15:8"},"nodeType":"YulExpressionStatement","src":"11606:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11637:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11640:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11630:6:8"},"nodeType":"YulFunctionCall","src":"11630:15:8"},"nodeType":"YulExpressionStatement","src":"11630:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11471:180:8"},{"body":{"nodeType":"YulBlock","src":"11700:190:8","statements":[{"nodeType":"YulAssignment","src":"11710:33:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11737:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11719:17:8"},"nodeType":"YulFunctionCall","src":"11719:24:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11710:5:8"}]},{"body":{"nodeType":"YulBlock","src":"11833:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11835:16:8"},"nodeType":"YulFunctionCall","src":"11835:18:8"},"nodeType":"YulExpressionStatement","src":"11835:18:8"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11758:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"11765:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11755:2:8"},"nodeType":"YulFunctionCall","src":"11755:77:8"},"nodeType":"YulIf","src":"11752:103:8"},{"nodeType":"YulAssignment","src":"11864:20:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11875:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"11882:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11871:3:8"},"nodeType":"YulFunctionCall","src":"11871:13:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11864:3:8"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11686:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11696:3:8","type":""}],"src":"11657:233:8"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613(memPtr) {\n\n        mstore(add(memPtr, 0), \"Claimed ERC20\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd0a2faf3ebb10eab7d14fad5f6ba99594114f61e1ad4ffced4c784a4b730613_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1287":[{"length":32,"start":456},{"length":32,"start":846}],"1289":[{"length":32,"start":1169}],"1291":[{"length":32,"start":358}],"1293":[{"length":32,"start":414},{"length":32,"start":734}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c806373f95d6b1161005b57806373f95d6b146100ee5780639d143e8e1461010c578063b391c5081461012a578063e9adc770146101465761007d565b806309c33c6714610082578063150b7a02146100a05780632eb4a7ab146100d0575b600080fd5b61008a610164565b60405161009791906105a3565b60405180910390f35b6100ba60048036038101906100b5919061077a565b610188565b6040516100c79190610838565b60405180910390f35b6100d861019c565b6040516100e5919061086c565b60405180910390f35b6100f66101c0565b6040516101039190610896565b60405180910390f35b6101146101c6565b60405161012191906105a3565b60405180910390f35b610144600480360381019061013f9190610911565b6101ea565b005b61014e61048f565b60405161015b91906105a3565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600063150b7a0260e01b9050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461026c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610263906109bb565b60405180910390fd5b60003360405160200161027f9190610a23565b604051602081830303815290604052805190602001209050610303838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f0000000000000000000000000000000000000000000000000000000000000000836104b3565b61034c5760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336000546040518363ffffffff1660e01b81526004016103a9929190610a3e565b602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610a9f565b61043a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043190610b18565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fc738b2de230010873d5b81370b4c10250e8eaec27550f0c43faf979e093090836000546040516104829190610896565b60405180910390a2505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000826104c085846104ca565b1490509392505050565b60008082905060005b845181101561051557610500828683815181106104f3576104f2610b38565b5b6020026020010151610520565b9150808061050d90610b96565b9150506104d3565b508091505092915050565b600081831061053857610533828461054b565b610543565b610542838361054b565b5b905092915050565b600082600052816020526040600020905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058d82610562565b9050919050565b61059d81610582565b82525050565b60006020820190506105b86000830184610594565b92915050565b6000604051905090565b600080fd5b600080fd5b6105db81610582565b81146105e657600080fd5b50565b6000813590506105f8816105d2565b92915050565b6000819050919050565b610611816105fe565b811461061c57600080fd5b50565b60008135905061062e81610608565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106878261063e565b810181811067ffffffffffffffff821117156106a6576106a561064f565b5b80604052505050565b60006106b96105be565b90506106c5828261067e565b919050565b600067ffffffffffffffff8211156106e5576106e461064f565b5b6106ee8261063e565b9050602081019050919050565b82818337600083830152505050565b600061071d610718846106ca565b6106af565b90508281526020810184848401111561073957610738610639565b5b6107448482856106fb565b509392505050565b600082601f83011261076157610760610634565b5b813561077184826020860161070a565b91505092915050565b60008060008060808587031215610794576107936105c8565b5b60006107a2878288016105e9565b94505060206107b3878288016105e9565b93505060406107c48782880161061f565b925050606085013567ffffffffffffffff8111156107e5576107e46105cd565b5b6107f18782880161074c565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610832816107fd565b82525050565b600060208201905061084d6000830184610829565b92915050565b6000819050919050565b61086681610853565b82525050565b6000602082019050610881600083018461085d565b92915050565b610890816105fe565b82525050565b60006020820190506108ab6000830184610887565b92915050565b600080fd5b600080fd5b60008083601f8401126108d1576108d0610634565b5b8235905067ffffffffffffffff8111156108ee576108ed6108b1565b5b60208301915083602082028301111561090a576109096108b6565b5b9250929050565b60008060208385031215610928576109276105c8565b5b600083013567ffffffffffffffff811115610946576109456105cd565b5b610952858286016108bb565b92509250509250929050565b600082825260208201905092915050565b7f436c61696d656420455243323000000000000000000000000000000000000000600082015250565b60006109a5600d8361095e565b91506109b08261096f565b602082019050919050565b600060208201905081810360008301526109d481610998565b9050919050565b60008160601b9050919050565b60006109f3826109db565b9050919050565b6000610a05826109e8565b9050919050565b610a1d610a1882610582565b6109fa565b82525050565b6000610a2f8284610a0c565b60148201915081905092915050565b6000604082019050610a536000830185610594565b610a606020830184610887565b9392505050565b60008115159050919050565b610a7c81610a67565b8114610a8757600080fd5b50565b600081519050610a9981610a73565b92915050565b600060208284031215610ab557610ab46105c8565b5b6000610ac384828501610a8a565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610b02600f8361095e565b9150610b0d82610acc565b602082019050919050565b60006020820190508181036000830152610b3181610af5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ba1826105fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bd457610bd3610b67565b5b60018201905091905056fea264697066735822122070ca3ce5abdd59d39f6ececdc0e1ab379472a2ac9cb307468f60cbaa25b0bafc64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73F95D6B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73F95D6B EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x9D143E8E EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xB391C508 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE9ADC770 EQ PUSH2 0x146 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x9C33C67 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH2 0x1EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x303 DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH32 0x0 DUP4 PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x34C JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A9 SWAP3 SWAP2 SWAP1 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC738B2DE230010873D5B81370B4C10250E8EAEC27550F0C43FAF979E09309083 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4C0 DUP6 DUP5 PUSH2 0x4CA JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x515 JUMPI PUSH2 0x500 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4F3 JUMPI PUSH2 0x4F2 PUSH2 0xB38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x520 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x50D SWAP1 PUSH2 0xB96 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D3 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x538 JUMPI PUSH2 0x533 DUP3 DUP5 PUSH2 0x54B JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST PUSH2 0x542 DUP4 DUP4 PUSH2 0x54B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D DUP3 PUSH2 0x562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59D DUP2 PUSH2 0x582 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x594 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DB DUP2 PUSH2 0x582 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F8 DUP2 PUSH2 0x5D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x611 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP2 EQ PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x62E DUP2 PUSH2 0x608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x687 DUP3 PUSH2 0x63E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0x64F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 PUSH2 0x5BE JUMP JUMPDEST SWAP1 POP PUSH2 0x6C5 DUP3 DUP3 PUSH2 0x67E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x64F JUMP JUMPDEST JUMPDEST PUSH2 0x6EE DUP3 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71D PUSH2 0x718 DUP5 PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x739 JUMPI PUSH2 0x738 PUSH2 0x639 JUMP JUMPDEST JUMPDEST PUSH2 0x744 DUP5 DUP3 DUP6 PUSH2 0x6FB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0x634 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x771 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x70A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x794 JUMPI PUSH2 0x793 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A2 DUP8 DUP3 DUP9 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x7B3 DUP8 DUP3 DUP9 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x7C4 DUP8 DUP3 DUP9 ADD PUSH2 0x61F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x7E4 PUSH2 0x5CD JUMP JUMPDEST JUMPDEST PUSH2 0x7F1 DUP8 DUP3 DUP9 ADD PUSH2 0x74C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x832 DUP2 PUSH2 0x7FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x84D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x829 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x866 DUP2 PUSH2 0x853 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x881 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x85D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x890 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8D1 JUMPI PUSH2 0x8D0 PUSH2 0x634 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8EE JUMPI PUSH2 0x8ED PUSH2 0x8B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x90A JUMPI PUSH2 0x909 PUSH2 0x8B6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x928 JUMPI PUSH2 0x927 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x946 JUMPI PUSH2 0x945 PUSH2 0x5CD JUMP JUMPDEST JUMPDEST PUSH2 0x952 DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436C61696D656420455243323000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A5 PUSH1 0xD DUP4 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP PUSH2 0x9B0 DUP3 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9D4 DUP2 PUSH2 0x998 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH2 0x9DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1D PUSH2 0xA18 DUP3 PUSH2 0x582 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2F DUP3 DUP5 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA53 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x594 JUMP JUMPDEST PUSH2 0xA60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x887 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xA67 JUMP JUMPDEST DUP2 EQ PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA99 DUP2 PUSH2 0xA73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC3 DUP5 DUP3 DUP6 ADD PUSH2 0xA8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 PUSH1 0xF DUP4 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP PUSH2 0xB0D DUP3 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB31 DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBA1 DUP3 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xBD3 PUSH2 0xB67 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xCA3CE5ABDD59D39F6ECECDC0E1AB379472 LOG2 0xAC SWAP13 0xB3 SMOD CHAINID DUP16 PUSH1 0xCB 0xAA 0x25 0xB0 0xBA 0xFC PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"397:1354:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:200:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;652:35:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;693:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;478:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1179:570;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;519:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;561:37;;;:::o;588:200:4:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;652:35:7:-;;;:::o;693:24::-;;;;:::o;478:35::-;;;:::o;1179:570::-;1289:1;1259:14;:26;1274:10;1259:26;;;;;;;;;;;;;;;;:31;1251:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1355:12;1397:10;1380:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;1370:39;;;;;;1355:54;;1424:49;1443:11;;1424:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:10;1468:4;1424:18;:49::i;:::-;1419:149;;1567:1;1538:14;:26;1553:10;1538:26;;;;;;;;;;;;;;;:30;;;;1419:149;1607:10;1600:27;;;1628:10;1640:9;;1600:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1579:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1720:10;1707:35;;;1732:9;;1707:35;;;;;;:::i;:::-;;;;;;;;1241:508;1179:570;;:::o;519:36::-;;;:::o;1156:184:6:-;1277:4;1329;1300:25;1313:5;1320:4;1300:12;:25::i;:::-;:33;1293:40;;1156:184;;;;;:::o;1994:290::-;2077:7;2096:20;2119:4;2096:27;;2138:9;2133:116;2157:5;:12;2153:1;:16;2133:116;;;2205:33;2215:12;2229:5;2235:1;2229:8;;;;;;;;:::i;:::-;;;;;;;;2205:9;:33::i;:::-;2190:48;;2171:3;;;;;:::i;:::-;;;;2133:116;;;;2265:12;2258:19;;;1994:290;;;;:::o;8879:147::-;8942:7;8972:1;8968;:5;:51;;8999:20;9014:1;9017;8999:14;:20::i;:::-;8968:51;;;8976:20;8991:1;8994;8976:14;:20::i;:::-;8968:51;8961:58;;8879:147;;;;:::o;9032:261::-;9100:13;9204:1;9198:4;9191:15;9232:1;9226:4;9219:15;9272:4;9266;9256:21;9247:30;;9032:261;;;;:::o;7:126:8:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:117::-;1658:1;1655;1648:12;1672:117;1781:1;1778;1771:12;1795:102;1836:6;1887:2;1883:7;1878:2;1871:5;1867:14;1863:28;1853:38;;1795:102;;;:::o;1903:180::-;1951:77;1948:1;1941:88;2048:4;2045:1;2038:15;2072:4;2069:1;2062:15;2089:281;2172:27;2194:4;2172:27;:::i;:::-;2164:6;2160:40;2302:6;2290:10;2287:22;2266:18;2254:10;2251:34;2248:62;2245:88;;;2313:18;;:::i;:::-;2245:88;2353:10;2349:2;2342:22;2132:238;2089:281;;:::o;2376:129::-;2410:6;2437:20;;:::i;:::-;2427:30;;2466:33;2494:4;2486:6;2466:33;:::i;:::-;2376:129;;;:::o;2511:307::-;2572:4;2662:18;2654:6;2651:30;2648:56;;;2684:18;;:::i;:::-;2648:56;2722:29;2744:6;2722:29;:::i;:::-;2714:37;;2806:4;2800;2796:15;2788:23;;2511:307;;;:::o;2824:154::-;2908:6;2903:3;2898;2885:30;2970:1;2961:6;2956:3;2952:16;2945:27;2824:154;;;:::o;2984:410::-;3061:5;3086:65;3102:48;3143:6;3102:48;:::i;:::-;3086:65;:::i;:::-;3077:74;;3174:6;3167:5;3160:21;3212:4;3205:5;3201:16;3250:3;3241:6;3236:3;3232:16;3229:25;3226:112;;;3257:79;;:::i;:::-;3226:112;3347:41;3381:6;3376:3;3371;3347:41;:::i;:::-;3067:327;2984:410;;;;;:::o;3413:338::-;3468:5;3517:3;3510:4;3502:6;3498:17;3494:27;3484:122;;3525:79;;:::i;:::-;3484:122;3642:6;3629:20;3667:78;3741:3;3733:6;3726:4;3718:6;3714:17;3667:78;:::i;:::-;3658:87;;3474:277;3413:338;;;;:::o;3757:943::-;3852:6;3860;3868;3876;3925:3;3913:9;3904:7;3900:23;3896:33;3893:120;;;3932:79;;:::i;:::-;3893:120;4052:1;4077:53;4122:7;4113:6;4102:9;4098:22;4077:53;:::i;:::-;4067:63;;4023:117;4179:2;4205:53;4250:7;4241:6;4230:9;4226:22;4205:53;:::i;:::-;4195:63;;4150:118;4307:2;4333:53;4378:7;4369:6;4358:9;4354:22;4333:53;:::i;:::-;4323:63;;4278:118;4463:2;4452:9;4448:18;4435:32;4494:18;4486:6;4483:30;4480:117;;;4516:79;;:::i;:::-;4480:117;4621:62;4675:7;4666:6;4655:9;4651:22;4621:62;:::i;:::-;4611:72;;4406:287;3757:943;;;;;;;:::o;4706:149::-;4742:7;4782:66;4775:5;4771:78;4760:89;;4706:149;;;:::o;4861:115::-;4946:23;4963:5;4946:23;:::i;:::-;4941:3;4934:36;4861:115;;:::o;4982:218::-;5073:4;5111:2;5100:9;5096:18;5088:26;;5124:69;5190:1;5179:9;5175:17;5166:6;5124:69;:::i;:::-;4982:218;;;;:::o;5206:77::-;5243:7;5272:5;5261:16;;5206:77;;;:::o;5289:118::-;5376:24;5394:5;5376:24;:::i;:::-;5371:3;5364:37;5289:118;;:::o;5413:222::-;5506:4;5544:2;5533:9;5529:18;5521:26;;5557:71;5625:1;5614:9;5610:17;5601:6;5557:71;:::i;:::-;5413:222;;;;:::o;5641:118::-;5728:24;5746:5;5728:24;:::i;:::-;5723:3;5716:37;5641:118;;:::o;5765:222::-;5858:4;5896:2;5885:9;5881:18;5873:26;;5909:71;5977:1;5966:9;5962:17;5953:6;5909:71;:::i;:::-;5765:222;;;;:::o;5993:117::-;6102:1;6099;6092:12;6116:117;6225:1;6222;6215:12;6256:568;6329:8;6339:6;6389:3;6382:4;6374:6;6370:17;6366:27;6356:122;;6397:79;;:::i;:::-;6356:122;6510:6;6497:20;6487:30;;6540:18;6532:6;6529:30;6526:117;;;6562:79;;:::i;:::-;6526:117;6676:4;6668:6;6664:17;6652:29;;6730:3;6722:4;6714:6;6710:17;6700:8;6696:32;6693:41;6690:128;;;6737:79;;:::i;:::-;6690:128;6256:568;;;;;:::o;6830:559::-;6916:6;6924;6973:2;6961:9;6952:7;6948:23;6944:32;6941:119;;;6979:79;;:::i;:::-;6941:119;7127:1;7116:9;7112:17;7099:31;7157:18;7149:6;7146:30;7143:117;;;7179:79;;:::i;:::-;7143:117;7292:80;7364:7;7355:6;7344:9;7340:22;7292:80;:::i;:::-;7274:98;;;;7070:312;6830:559;;;;;:::o;7395:169::-;7479:11;7513:6;7508:3;7501:19;7553:4;7548:3;7544:14;7529:29;;7395:169;;;;:::o;7570:163::-;7710:15;7706:1;7698:6;7694:14;7687:39;7570:163;:::o;7739:366::-;7881:3;7902:67;7966:2;7961:3;7902:67;:::i;:::-;7895:74;;7978:93;8067:3;7978:93;:::i;:::-;8096:2;8091:3;8087:12;8080:19;;7739:366;;;:::o;8111:419::-;8277:4;8315:2;8304:9;8300:18;8292:26;;8364:9;8358:4;8354:20;8350:1;8339:9;8335:17;8328:47;8392:131;8518:4;8392:131;:::i;:::-;8384:139;;8111:419;;;:::o;8536:94::-;8569:8;8617:5;8613:2;8609:14;8588:35;;8536:94;;;:::o;8636:::-;8675:7;8704:20;8718:5;8704:20;:::i;:::-;8693:31;;8636:94;;;:::o;8736:100::-;8775:7;8804:26;8824:5;8804:26;:::i;:::-;8793:37;;8736:100;;;:::o;8842:157::-;8947:45;8967:24;8985:5;8967:24;:::i;:::-;8947:45;:::i;:::-;8942:3;8935:58;8842:157;;:::o;9005:256::-;9117:3;9132:75;9203:3;9194:6;9132:75;:::i;:::-;9232:2;9227:3;9223:12;9216:19;;9252:3;9245:10;;9005:256;;;;:::o;9267:332::-;9388:4;9426:2;9415:9;9411:18;9403:26;;9439:71;9507:1;9496:9;9492:17;9483:6;9439:71;:::i;:::-;9520:72;9588:2;9577:9;9573:18;9564:6;9520:72;:::i;:::-;9267:332;;;;;:::o;9605:90::-;9639:7;9682:5;9675:13;9668:21;9657:32;;9605:90;;;:::o;9701:116::-;9771:21;9786:5;9771:21;:::i;:::-;9764:5;9761:32;9751:60;;9807:1;9804;9797:12;9751:60;9701:116;:::o;9823:137::-;9877:5;9908:6;9902:13;9893:22;;9924:30;9948:5;9924:30;:::i;:::-;9823:137;;;;:::o;9966:345::-;10033:6;10082:2;10070:9;10061:7;10057:23;10053:32;10050:119;;;10088:79;;:::i;:::-;10050:119;10208:1;10233:61;10286:7;10277:6;10266:9;10262:22;10233:61;:::i;:::-;10223:71;;10179:125;9966:345;;;;:::o;10317:165::-;10457:17;10453:1;10445:6;10441:14;10434:41;10317:165;:::o;10488:366::-;10630:3;10651:67;10715:2;10710:3;10651:67;:::i;:::-;10644:74;;10727:93;10816:3;10727:93;:::i;:::-;10845:2;10840:3;10836:12;10829:19;;10488:366;;;:::o;10860:419::-;11026:4;11064:2;11053:9;11049:18;11041:26;;11113:9;11107:4;11103:20;11099:1;11088:9;11084:17;11077:47;11141:131;11267:4;11141:131;:::i;:::-;11133:139;;10860:419;;;:::o;11285:180::-;11333:77;11330:1;11323:88;11430:4;11427:1;11420:15;11454:4;11451:1;11444:15;11471:180;11519:77;11516:1;11509:88;11616:4;11613:1;11606:15;11640:4;11637:1;11630:15;11657:233;11696:3;11719:24;11737:5;11719:24;:::i;:::-;11710:33;;11765:66;11758:5;11755:77;11752:103;;;11835:18;;:::i;:::-;11752:103;11882:1;11875:5;11871:13;11864:20;;11657:233;;;:::o"},"methodIdentifiers":{"claim(bytes32[])":"b391c508","dropERC20()":"73f95d6b","merkleRoot()":"2eb4a7ab","onERC721Received(address,address,uint256,bytes)":"150b7a02","tokenERC1155()":"09c33c67","tokenERC20()":"9d143e8e","tokenERC721()":"e9adc770"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token721_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1155_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dropERC20_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_dropERC20\",\"type\":\"uint256\"}],\"name\":\"ClaimedERC20\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenERC1155\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MerkleDistributor.sol\":\"MerkleDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]},\"contracts/MerkleDistributor.sol\":{\"keccak256\":\"0x09b78d6415366b75ac46d68d1c2d0b9d64cdca67654147a770e7f895224029ba\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a268bd2058d45a8b4b39905c43aa4e0f42ca682c4be82e37f9fce66ad12b8972\",\"dweb:/ipfs/QmeUGqfA8xn2qxeeaFJBMA4zsDpoaHmeeKw3DsysLLY16z\"]}},\"version\":1}"}}}}}